
maq-estados-ej1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00800100  00000d46  00000dda  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d46  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002b  00800168  00800168  00000e42  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e42  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ea0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ff0  00000000  00000000  00000f88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f7  00000000  00000000  00001f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000919  00000000  00000000  0000296f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  00003288  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000580  00000000  00000000  00003440  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000802  00000000  00000000  000039c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000041c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 3a 02 	jmp	0x474	; 0x474 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e4       	ldi	r30, 0x46	; 70
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 36       	cpi	r26, 0x68	; 104
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e6       	ldi	r26, 0x68	; 104
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 39       	cpi	r26, 0x93	; 147
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 fe 02 	call	0x5fc	; 0x5fc <main>
  9e:	0c 94 a1 06 	jmp	0xd42	; 0xd42 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <PRESCALER_conf>:
			switch(X){
				case 'A':
					TCCR2A|=(mode<<COM2A0);
					break;
				case 'B':
					TCCR2B|=(mode<<COM2B0);
  a6:	81 30       	cpi	r24, 0x01	; 1
  a8:	91 05       	cpc	r25, r1
  aa:	61 f0       	breq	.+24     	; 0xc4 <PRESCALER_conf+0x1e>
  ac:	82 30       	cpi	r24, 0x02	; 2
  ae:	91 05       	cpc	r25, r1
  b0:	91 f0       	breq	.+36     	; 0xd6 <PRESCALER_conf+0x30>
  b2:	89 2b       	or	r24, r25
  b4:	c1 f4       	brne	.+48     	; 0xe6 <PRESCALER_conf+0x40>
  b6:	85 b5       	in	r24, 0x25	; 37
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	88 7f       	andi	r24, 0xF8	; 248
  bc:	68 2b       	or	r22, r24
  be:	79 2b       	or	r23, r25
  c0:	65 bd       	out	0x25, r22	; 37
  c2:	08 95       	ret
  c4:	e1 e8       	ldi	r30, 0x81	; 129
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	88 7f       	andi	r24, 0xF8	; 248
  ce:	68 2b       	or	r22, r24
  d0:	79 2b       	or	r23, r25
  d2:	60 83       	st	Z, r22
  d4:	08 95       	ret
  d6:	e1 eb       	ldi	r30, 0xB1	; 177
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	88 7f       	andi	r24, 0xF8	; 248
  e0:	68 2b       	or	r22, r24
  e2:	79 2b       	or	r23, r25
  e4:	60 83       	st	Z, r22
  e6:	08 95       	ret

000000e8 <TIMER_CTC_init>:
			- ICIEn: Habilitación por captura de entrada.
			- OCIEnA y OCIEnB: Habilitación de interrupciones por match de OCRnA y OCRnB respectivamente.
			- TOIEn: Habilitación de interrupciones por overflow.
*/
void TIMER_CTC_init(int TIMERx, char X, int T, int mode){
	switch(TIMERx){
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	91 05       	cpc	r25, r1
  ec:	a1 f1       	breq	.+104    	; 0x156 <TIMER_CTC_init+0x6e>
  ee:	82 30       	cpi	r24, 0x02	; 2
  f0:	91 05       	cpc	r25, r1
  f2:	09 f4       	brne	.+2      	; 0xf6 <TIMER_CTC_init+0xe>
  f4:	6d c0       	rjmp	.+218    	; 0x1d0 <TIMER_CTC_init+0xe8>
  f6:	89 2b       	or	r24, r25
  f8:	09 f0       	breq	.+2      	; 0xfc <TIMER_CTC_init+0x14>
  fa:	9e c0       	rjmp	.+316    	; 0x238 <TIMER_CTC_init+0x150>
		case 0:
			TCCR0B|=(1<<WGM02);
  fc:	85 b5       	in	r24, 0x25	; 37
  fe:	88 60       	ori	r24, 0x08	; 8
 100:	85 bd       	out	0x25, r24	; 37
			switch(X){
 102:	61 34       	cpi	r22, 0x41	; 65
 104:	19 f0       	breq	.+6      	; 0x10c <TIMER_CTC_init+0x24>
 106:	62 34       	cpi	r22, 0x42	; 66
 108:	a9 f0       	breq	.+42     	; 0x134 <TIMER_CTC_init+0x4c>
 10a:	08 95       	ret
				case 'A':
					TCCR0A|=(mode<<COM0A0);
 10c:	84 b5       	in	r24, 0x24	; 36
 10e:	00 24       	eor	r0, r0
 110:	36 95       	lsr	r19
 112:	27 95       	ror	r18
 114:	07 94       	ror	r0
 116:	36 95       	lsr	r19
 118:	27 95       	ror	r18
 11a:	07 94       	ror	r0
 11c:	32 2f       	mov	r19, r18
 11e:	20 2d       	mov	r18, r0
 120:	28 2b       	or	r18, r24
 122:	24 bd       	out	0x24, r18	; 36
					TIFR0&=~(1<<OCF0A);
 124:	a9 98       	cbi	0x15, 1	; 21
					TIMSK0|=(1<<OCIE0A);
 126:	ee e6       	ldi	r30, 0x6E	; 110
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	82 60       	ori	r24, 0x02	; 2
 12e:	80 83       	st	Z, r24
					OCR0A=T;
 130:	47 bd       	out	0x27, r20	; 39
					break;
 132:	08 95       	ret
				case 'B':
					TCCR0B|=(mode<<COM0B0);
 134:	85 b5       	in	r24, 0x25	; 37
 136:	22 95       	swap	r18
 138:	32 95       	swap	r19
 13a:	30 7f       	andi	r19, 0xF0	; 240
 13c:	32 27       	eor	r19, r18
 13e:	20 7f       	andi	r18, 0xF0	; 240
 140:	32 27       	eor	r19, r18
 142:	28 2b       	or	r18, r24
 144:	25 bd       	out	0x25, r18	; 37
					TIFR0&=~(1<<OCF0B);
 146:	aa 98       	cbi	0x15, 2	; 21
					TIMSK0|=(1<<OCIE0B);
 148:	ee e6       	ldi	r30, 0x6E	; 110
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	84 60       	ori	r24, 0x04	; 4
 150:	80 83       	st	Z, r24
					OCR0B=T;
 152:	48 bd       	out	0x28, r20	; 40
				break;
 154:	08 95       	ret
			}
			break;
		case 1:
			TCCR1B|=(1<<WGM12);
 156:	e1 e8       	ldi	r30, 0x81	; 129
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	88 60       	ori	r24, 0x08	; 8
 15e:	80 83       	st	Z, r24
			switch(X){
 160:	61 34       	cpi	r22, 0x41	; 65
 162:	19 f0       	breq	.+6      	; 0x16a <TIMER_CTC_init+0x82>
 164:	62 34       	cpi	r22, 0x42	; 66
 166:	e1 f0       	breq	.+56     	; 0x1a0 <TIMER_CTC_init+0xb8>
 168:	08 95       	ret
				case 'A':
					TCCR1A|=(mode<<COM1A0);
 16a:	e0 e8       	ldi	r30, 0x80	; 128
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	00 24       	eor	r0, r0
 172:	36 95       	lsr	r19
 174:	27 95       	ror	r18
 176:	07 94       	ror	r0
 178:	36 95       	lsr	r19
 17a:	27 95       	ror	r18
 17c:	07 94       	ror	r0
 17e:	32 2f       	mov	r19, r18
 180:	20 2d       	mov	r18, r0
 182:	28 2b       	or	r18, r24
 184:	20 83       	st	Z, r18
					TIFR1&=~(1<<OCF1A);
 186:	b1 98       	cbi	0x16, 1	; 22
					TIMSK1|=(1<<OCIE1A);
 188:	ef e6       	ldi	r30, 0x6F	; 111
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 81       	ld	r24, Z
 18e:	82 60       	ori	r24, 0x02	; 2
 190:	80 83       	st	Z, r24
					OCR1A=T;
 192:	84 2f       	mov	r24, r20
 194:	95 2f       	mov	r25, r21
 196:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 19a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
					break;
 19e:	08 95       	ret
				case 'B':
					TCCR1B|=(mode<<COM1B0);
 1a0:	e1 e8       	ldi	r30, 0x81	; 129
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	22 95       	swap	r18
 1a8:	32 95       	swap	r19
 1aa:	30 7f       	andi	r19, 0xF0	; 240
 1ac:	32 27       	eor	r19, r18
 1ae:	20 7f       	andi	r18, 0xF0	; 240
 1b0:	32 27       	eor	r19, r18
 1b2:	28 2b       	or	r18, r24
 1b4:	20 83       	st	Z, r18
					TIFR1&=~(1<<OCF1B);
 1b6:	b2 98       	cbi	0x16, 2	; 22
					TIMSK1|=(1<<OCIE1B);
 1b8:	ef e6       	ldi	r30, 0x6F	; 111
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	84 60       	ori	r24, 0x04	; 4
 1c0:	80 83       	st	Z, r24
					OCR1B=T;
 1c2:	84 2f       	mov	r24, r20
 1c4:	95 2f       	mov	r25, r21
 1c6:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1ca:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
					break;
 1ce:	08 95       	ret
			}
			break;
		case 2:
			TCCR2B|=(1<<WGM22);
 1d0:	e1 eb       	ldi	r30, 0xB1	; 177
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	88 60       	ori	r24, 0x08	; 8
 1d8:	80 83       	st	Z, r24
			switch(X){
 1da:	61 34       	cpi	r22, 0x41	; 65
 1dc:	19 f0       	breq	.+6      	; 0x1e4 <TIMER_CTC_init+0xfc>
 1de:	62 34       	cpi	r22, 0x42	; 66
 1e0:	c1 f0       	breq	.+48     	; 0x212 <TIMER_CTC_init+0x12a>
 1e2:	08 95       	ret
				case 'A':
					TCCR2A|=(mode<<COM2A0);
 1e4:	e0 eb       	ldi	r30, 0xB0	; 176
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	00 24       	eor	r0, r0
 1ec:	36 95       	lsr	r19
 1ee:	27 95       	ror	r18
 1f0:	07 94       	ror	r0
 1f2:	36 95       	lsr	r19
 1f4:	27 95       	ror	r18
 1f6:	07 94       	ror	r0
 1f8:	32 2f       	mov	r19, r18
 1fa:	20 2d       	mov	r18, r0
 1fc:	28 2b       	or	r18, r24
 1fe:	20 83       	st	Z, r18
					TIFR2&=~(1<<OCF2A);
 200:	b9 98       	cbi	0x17, 1	; 23
					TIMSK2|=(1<<OCIE2A);
 202:	e0 e7       	ldi	r30, 0x70	; 112
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	80 81       	ld	r24, Z
 208:	82 60       	ori	r24, 0x02	; 2
 20a:	80 83       	st	Z, r24
					OCR2A=T;
 20c:	40 93 b3 00 	sts	0x00B3, r20	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
					break;
 210:	08 95       	ret
				case 'B':
					TCCR2B|=(mode<<COM2B0);
 212:	e1 eb       	ldi	r30, 0xB1	; 177
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	22 95       	swap	r18
 21a:	32 95       	swap	r19
 21c:	30 7f       	andi	r19, 0xF0	; 240
 21e:	32 27       	eor	r19, r18
 220:	20 7f       	andi	r18, 0xF0	; 240
 222:	32 27       	eor	r19, r18
 224:	28 2b       	or	r18, r24
 226:	20 83       	st	Z, r18
					TIFR2&=~(1<<OCF2B);
 228:	ba 98       	cbi	0x17, 2	; 23
					TIMSK2|=(1<<OCIE2B);
 22a:	e0 e7       	ldi	r30, 0x70	; 112
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	84 60       	ori	r24, 0x04	; 4
 232:	80 83       	st	Z, r24
					OCR2B=T;
 234:	40 93 b4 00 	sts	0x00B4, r20	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 238:	08 95       	ret

0000023a <UART_init>:
		stdout = stdin = &uart_io;
--------------------------------------------------------------------------------------
*/

void UART_init(unsigned int ubrr){
	UBRR0=F_CPU/16/ubrr-1;
 23a:	9c 01       	movw	r18, r24
 23c:	40 e0       	ldi	r20, 0x00	; 0
 23e:	50 e0       	ldi	r21, 0x00	; 0
 240:	60 e4       	ldi	r22, 0x40	; 64
 242:	72 e4       	ldi	r23, 0x42	; 66
 244:	8f e0       	ldi	r24, 0x0F	; 15
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 4e 03 	call	0x69c	; 0x69c <__divmodsi4>
 24c:	21 50       	subi	r18, 0x01	; 1
 24e:	31 09       	sbc	r19, r1
 250:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 254:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0A=0;
 258:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0B=(1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
 25c:	88 e9       	ldi	r24, 0x98	; 152
 25e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C=(1<<USBS0)|(3<<UCSZ00);
 262:	8e e0       	ldi	r24, 0x0E	; 14
 264:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 268:	08 95       	ret

0000026a <_putc>:
}

//	Función de TRANSMISIÓN

int _putc(char c, FILE *stream){
	while (!(UCSR0A & (1<<UDRE0)));
 26a:	e0 ec       	ldi	r30, 0xC0	; 192
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	90 81       	ld	r25, Z
 270:	95 ff       	sbrs	r25, 5
 272:	fd cf       	rjmp	.-6      	; 0x26e <_putc+0x4>
	UDR0=c;
 274:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	08 95       	ret

0000027e <_getc>:

//	Función de RECEPCIÓN

int _getc(FILE *stream){
	while (!(UCSR0A & (1<<RXC0)));
 27e:	e0 ec       	ldi	r30, 0xC0	; 192
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	80 81       	ld	r24, Z
 284:	88 23       	and	r24, r24
 286:	ec f7       	brge	.-6      	; 0x282 <_getc+0x4>
	return UDR0;
 288:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	08 95       	ret

00000290 <interprete>:
FILE uart_io = FDEV_SETUP_STREAM(_putc, _getc, _FDEV_SETUP_RW);

//------------INTERPRETE-----------------------
void interprete(void){
	int aux;
  switch (comando[0]) {
 290:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <comando>
 294:	80 35       	cpi	r24, 0x50	; 80
 296:	59 f0       	breq	.+22     	; 0x2ae <interprete+0x1e>
 298:	20 f4       	brcc	.+8      	; 0x2a2 <interprete+0x12>
 29a:	88 34       	cpi	r24, 0x48	; 72
 29c:	09 f4       	brne	.+2      	; 0x2a0 <interprete+0x10>
 29e:	86 c0       	rjmp	.+268    	; 0x3ac <interprete+0x11c>
 2a0:	a0 c0       	rjmp	.+320    	; 0x3e2 <interprete+0x152>
 2a2:	84 35       	cpi	r24, 0x54	; 84
 2a4:	79 f1       	breq	.+94     	; 0x304 <interprete+0x74>
 2a6:	87 35       	cpi	r24, 0x57	; 87
 2a8:	09 f4       	brne	.+2      	; 0x2ac <interprete+0x1c>
 2aa:	64 c0       	rjmp	.+200    	; 0x374 <interprete+0xe4>
 2ac:	9a c0       	rjmp	.+308    	; 0x3e2 <interprete+0x152>
    case 'P':
      /*
        Rutina para dar posición
        :PXX donde la posición dependerá del sistema en aplicación
      */
	   if (comando[1] && estado==activo){
 2ae:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <comando+0x1>
 2b2:	88 23       	and	r24, r24
 2b4:	e9 f0       	breq	.+58     	; 0x2f0 <interprete+0x60>
 2b6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <estado>
 2ba:	81 11       	cpse	r24, r1
 2bc:	19 c0       	rjmp	.+50     	; 0x2f0 <interprete+0x60>
		   N=atoi(&comando[1]);
 2be:	80 e7       	ldi	r24, 0x70	; 112
 2c0:	91 e0       	ldi	r25, 0x01	; 1
 2c2:	0e 94 6d 03 	call	0x6da	; 0x6da <atoi>
 2c6:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <N+0x1>
 2ca:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <N>
		   printf("P: %d", N);
 2ce:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <N>
 2d2:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <N+0x1>
 2d6:	9f 93       	push	r25
 2d8:	8f 93       	push	r24
 2da:	81 e1       	ldi	r24, 0x11	; 17
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	9f 93       	push	r25
 2e0:	8f 93       	push	r24
 2e2:	0e 94 93 03 	call	0x726	; 0x726 <printf>
    case 'P':
      /*
        Rutina para dar posición
        :PXX donde la posición dependerá del sistema en aplicación
      */
	   if (comando[1] && estado==activo){
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	0f 90       	pop	r0
 2ee:	08 95       	ret
		   N=atoi(&comando[1]);
		   printf("P: %d", N);
	   } else if (estado ==inactivo) {
 2f0:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <estado>
 2f4:	81 30       	cpi	r24, 0x01	; 1
 2f6:	09 f0       	breq	.+2      	; 0x2fa <interprete+0x6a>
 2f8:	78 c0       	rjmp	.+240    	; 0x3ea <interprete+0x15a>
		   printf(":ERR\n");
 2fa:	87 e1       	ldi	r24, 0x17	; 23
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
 302:	08 95       	ret
    case 'T':
      /*
        Rutina para dar periodo de pulso
        :TXX siendo un perido de XX ms
      */
	  if (comando[1] && estado==activo){
 304:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <comando+0x1>
 308:	88 23       	and	r24, r24
 30a:	51 f1       	breq	.+84     	; 0x360 <interprete+0xd0>
 30c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <estado>
 310:	81 11       	cpse	r24, r1
 312:	26 c0       	rjmp	.+76     	; 0x360 <interprete+0xd0>
		  periodo=atoi(&comando[1]);
 314:	80 e7       	ldi	r24, 0x70	; 112
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	0e 94 6d 03 	call	0x6da	; 0x6da <atoi>
 31c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <periodo+0x1>
 320:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <periodo>
		  OCR1A=periodo*6250;
 324:	4a e6       	ldi	r20, 0x6A	; 106
 326:	58 e1       	ldi	r21, 0x18	; 24
 328:	84 9f       	mul	r24, r20
 32a:	90 01       	movw	r18, r0
 32c:	85 9f       	mul	r24, r21
 32e:	30 0d       	add	r19, r0
 330:	94 9f       	mul	r25, r20
 332:	30 0d       	add	r19, r0
 334:	11 24       	eor	r1, r1
 336:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 33a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		  printf("T: %d\n", periodo);
 33e:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <periodo+0x1>
 342:	8f 93       	push	r24
 344:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <periodo>
 348:	8f 93       	push	r24
 34a:	8c e1       	ldi	r24, 0x1C	; 28
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	9f 93       	push	r25
 350:	8f 93       	push	r24
 352:	0e 94 93 03 	call	0x726	; 0x726 <printf>
    case 'T':
      /*
        Rutina para dar periodo de pulso
        :TXX siendo un perido de XX ms
      */
	  if (comando[1] && estado==activo){
 356:	0f 90       	pop	r0
 358:	0f 90       	pop	r0
 35a:	0f 90       	pop	r0
 35c:	0f 90       	pop	r0
 35e:	08 95       	ret
		  periodo=atoi(&comando[1]);
		  OCR1A=periodo*6250;
		  printf("T: %d\n", periodo);
	  } else if (estado==inactivo) {
 360:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <estado>
 364:	81 30       	cpi	r24, 0x01	; 1
 366:	09 f0       	breq	.+2      	; 0x36a <interprete+0xda>
 368:	40 c0       	rjmp	.+128    	; 0x3ea <interprete+0x15a>
		  printf(":ERR\n");
 36a:	87 e1       	ldi	r24, 0x17	; 23
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
 372:	08 95       	ret
      /*
        Rutina para máquina de estado
        :W1 -> ESTADO ACTIVADO
        :W0 -> ESTADO REPOSO
      */
	  if (comando[1]){
 374:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <comando+0x1>
 378:	88 23       	and	r24, r24
 37a:	b9 f1       	breq	.+110    	; 0x3ea <interprete+0x15a>
		  switch (comando[1]){
 37c:	80 33       	cpi	r24, 0x30	; 48
 37e:	49 f0       	breq	.+18     	; 0x392 <interprete+0x102>
 380:	81 33       	cpi	r24, 0x31	; 49
 382:	79 f4       	brne	.+30     	; 0x3a2 <interprete+0x112>
				case '1':
					estado = activo;
 384:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <estado>
					printf(":ACT\n");
 388:	83 e2       	ldi	r24, 0x23	; 35
 38a:	91 e0       	ldi	r25, 0x01	; 1
 38c:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
					break;
 390:	08 95       	ret
				case '0':
					estado = inactivo;
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <estado>
					printf(":INACT\n");
 398:	88 e2       	ldi	r24, 0x28	; 40
 39a:	91 e0       	ldi	r25, 0x01	; 1
 39c:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
					break;
 3a0:	08 95       	ret
				default:
					printf(":ERR\n");
 3a2:	87 e1       	ldi	r24, 0x17	; 23
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
					break;
 3aa:	08 95       	ret
      break;
    case 'H':
      /*
        Rutina para hacer homing (:H)
      */
	  if (estado==activo){
 3ac:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <estado>
 3b0:	81 11       	cpse	r24, r1
 3b2:	10 c0       	rjmp	.+32     	; 0x3d4 <interprete+0x144>
		  // HOMING
		  estado=home;
 3b4:	82 e0       	ldi	r24, 0x02	; 2
 3b6:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <estado>
		  OCR1A=10000;
 3ba:	80 e1       	ldi	r24, 0x10	; 16
 3bc:	97 e2       	ldi	r25, 0x27	; 39
 3be:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 3c2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		  flag_home=1;
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <__data_end+0x1>
 3ce:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <__data_end>
 3d2:	08 95       	ret
	  } else if (estado==inactivo) {
 3d4:	81 30       	cpi	r24, 0x01	; 1
 3d6:	49 f4       	brne	.+18     	; 0x3ea <interprete+0x15a>
		  printf(":ERR\n");
 3d8:	87 e1       	ldi	r24, 0x17	; 23
 3da:	91 e0       	ldi	r25, 0x01	; 1
 3dc:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
 3e0:	08 95       	ret
	  }
      break;
    default:
      printf(":ERR\n");
 3e2:	87 e1       	ldi	r24, 0x17	; 23
 3e4:	91 e0       	ldi	r25, 0x01	; 1
 3e6:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
 3ea:	08 95       	ret

000003ec <__vector_18>:
  }
}
//----------------------------------------------------------------------------
//    Rutina de servicio de interrupción por recepción de datos en UART

ISR (USART_RX_vect){
 3ec:	1f 92       	push	r1
 3ee:	0f 92       	push	r0
 3f0:	0f b6       	in	r0, 0x3f	; 63
 3f2:	0f 92       	push	r0
 3f4:	11 24       	eor	r1, r1
 3f6:	2f 93       	push	r18
 3f8:	3f 93       	push	r19
 3fa:	4f 93       	push	r20
 3fc:	5f 93       	push	r21
 3fe:	6f 93       	push	r22
 400:	7f 93       	push	r23
 402:	8f 93       	push	r24
 404:	9f 93       	push	r25
 406:	af 93       	push	r26
 408:	bf 93       	push	r27
 40a:	ef 93       	push	r30
 40c:	ff 93       	push	r31
  char dato=getc(); 
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	91 e0       	ldi	r25, 0x01	; 1
 412:	0e 94 3f 01 	call	0x27e	; 0x27e <_getc>
  switch (dato) {
 416:	9c 01       	movw	r18, r24
 418:	33 27       	eor	r19, r19
 41a:	2d 30       	cpi	r18, 0x0D	; 13
 41c:	31 05       	cpc	r19, r1
 41e:	31 f0       	breq	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 420:	2a 33       	cpi	r18, 0x3A	; 58
 422:	31 05       	cpc	r19, r1
 424:	61 f4       	brne	.+24     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
    case ':':
      indcom=0;
 426:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <indcom>
      break;
 42a:	13 c0       	rjmp	.+38     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
    case '\r':
      comando[indcom]=0;
 42c:	e0 91 6e 01 	lds	r30, 0x016E	; 0x80016e <indcom>
 430:	f0 e0       	ldi	r31, 0x00	; 0
 432:	e1 59       	subi	r30, 0x91	; 145
 434:	fe 4f       	sbci	r31, 0xFE	; 254
 436:	10 82       	st	Z, r1
      interprete();
 438:	0e 94 48 01 	call	0x290	; 0x290 <interprete>
      break;
 43c:	0a c0       	rjmp	.+20     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
    default:
      comando[indcom++]=dato;
 43e:	e0 91 6e 01 	lds	r30, 0x016E	; 0x80016e <indcom>
 442:	91 e0       	ldi	r25, 0x01	; 1
 444:	9e 0f       	add	r25, r30
 446:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <indcom>
 44a:	f0 e0       	ldi	r31, 0x00	; 0
 44c:	e1 59       	subi	r30, 0x91	; 145
 44e:	fe 4f       	sbci	r31, 0xFE	; 254
 450:	80 83       	st	Z, r24
      break;
  }
}
 452:	ff 91       	pop	r31
 454:	ef 91       	pop	r30
 456:	bf 91       	pop	r27
 458:	af 91       	pop	r26
 45a:	9f 91       	pop	r25
 45c:	8f 91       	pop	r24
 45e:	7f 91       	pop	r23
 460:	6f 91       	pop	r22
 462:	5f 91       	pop	r21
 464:	4f 91       	pop	r20
 466:	3f 91       	pop	r19
 468:	2f 91       	pop	r18
 46a:	0f 90       	pop	r0
 46c:	0f be       	out	0x3f, r0	; 63
 46e:	0f 90       	pop	r0
 470:	1f 90       	pop	r1
 472:	18 95       	reti

00000474 <__vector_11>:
//------------------------------------------------------------------------------------
//	Rutina de interrupción del timer

ISR (TIMER1_COMPA_vect){
 474:	1f 92       	push	r1
 476:	0f 92       	push	r0
 478:	0f b6       	in	r0, 0x3f	; 63
 47a:	0f 92       	push	r0
 47c:	11 24       	eor	r1, r1
 47e:	2f 93       	push	r18
 480:	3f 93       	push	r19
 482:	4f 93       	push	r20
 484:	5f 93       	push	r21
 486:	6f 93       	push	r22
 488:	7f 93       	push	r23
 48a:	8f 93       	push	r24
 48c:	9f 93       	push	r25
 48e:	af 93       	push	r26
 490:	bf 93       	push	r27
 492:	ef 93       	push	r30
 494:	ff 93       	push	r31
	if (estado==activo && Na!=N){
 496:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <estado>
 49a:	81 11       	cpse	r24, r1
 49c:	4a c0       	rjmp	.+148    	; 0x532 <__vector_11+0xbe>
 49e:	20 91 6a 01 	lds	r18, 0x016A	; 0x80016a <Na>
 4a2:	30 91 6b 01 	lds	r19, 0x016B	; 0x80016b <Na+0x1>
 4a6:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <N>
 4aa:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <N+0x1>
 4ae:	28 17       	cp	r18, r24
 4b0:	39 07       	cpc	r19, r25
 4b2:	09 f4       	brne	.+2      	; 0x4b6 <__vector_11+0x42>
 4b4:	92 c0       	rjmp	.+292    	; 0x5da <__vector_11+0x166>
		if (N<Na){
 4b6:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <N>
 4ba:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <N+0x1>
 4be:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Na>
 4c2:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <Na+0x1>
 4c6:	28 17       	cp	r18, r24
 4c8:	39 07       	cpc	r19, r25
 4ca:	5c f4       	brge	.+22     	; 0x4e2 <__vector_11+0x6e>
				PORTB&=~(1<<PORTB3);
 4cc:	2b 98       	cbi	0x05, 3	; 5
				Na--;
 4ce:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Na>
 4d2:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <Na+0x1>
 4d6:	01 97       	sbiw	r24, 0x01	; 1
 4d8:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <Na+0x1>
 4dc:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <Na>
 4e0:	22 c0       	rjmp	.+68     	; 0x526 <__vector_11+0xb2>
			} else if (N>Na){
 4e2:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <N>
 4e6:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <N+0x1>
 4ea:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Na>
 4ee:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <Na+0x1>
 4f2:	82 17       	cp	r24, r18
 4f4:	93 07       	cpc	r25, r19
 4f6:	5c f4       	brge	.+22     	; 0x50e <__vector_11+0x9a>
				PORTB|=(1<<PORTB3);
 4f8:	2b 9a       	sbi	0x05, 3	; 5
				Na++;
 4fa:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Na>
 4fe:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <Na+0x1>
 502:	01 96       	adiw	r24, 0x01	; 1
 504:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <Na+0x1>
 508:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <Na>
 50c:	0c c0       	rjmp	.+24     	; 0x526 <__vector_11+0xb2>
			} else if (N==Na){
 50e:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <N>
 512:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <N+0x1>
 516:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Na>
 51a:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <Na+0x1>
 51e:	28 17       	cp	r18, r24
 520:	39 07       	cpc	r19, r25
 522:	09 f4       	brne	.+2      	; 0x526 <__vector_11+0xb2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 524:	00 00       	nop
				_delay_us(1);
		}
		PORTB^=(1<<PORTB5);
 526:	95 b1       	in	r25, 0x05	; 5
 528:	80 e2       	ldi	r24, 0x20	; 32
 52a:	89 27       	eor	r24, r25
 52c:	85 b9       	out	0x05, r24	; 5
		TIFR1&=~(1<<OCF1A);
 52e:	b1 98       	cbi	0x16, 1	; 22
 530:	54 c0       	rjmp	.+168    	; 0x5da <__vector_11+0x166>
		//printf("Pos. actual=%d Pos. deseada=%d\n", Na, N);
	} else if (estado==inactivo){
 532:	81 30       	cpi	r24, 0x01	; 1
 534:	11 f4       	brne	.+4      	; 0x53a <__vector_11+0xc6>
		PORTB&=~(1<<PORTB5);
 536:	2d 98       	cbi	0x05, 5	; 5
 538:	50 c0       	rjmp	.+160    	; 0x5da <__vector_11+0x166>
	} else if (estado==home){
 53a:	82 30       	cpi	r24, 0x02	; 2
 53c:	09 f0       	breq	.+2      	; 0x540 <__vector_11+0xcc>
 53e:	4d c0       	rjmp	.+154    	; 0x5da <__vector_11+0x166>
		if (PINB&(1<<0)){
 540:	18 9b       	sbis	0x03, 0	; 3
 542:	32 c0       	rjmp	.+100    	; 0x5a8 <__vector_11+0x134>
			if (flag_home==1){
 544:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <__data_end>
 548:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <__data_end+0x1>
 54c:	81 30       	cpi	r24, 0x01	; 1
 54e:	91 05       	cpc	r25, r1
 550:	a1 f4       	brne	.+40     	; 0x57a <__vector_11+0x106>
				PORTB&=~(1<<PORTB3);
 552:	2b 98       	cbi	0x05, 3	; 5
				printf("HOMING...\n");
 554:	8f e2       	ldi	r24, 0x2F	; 47
 556:	91 e0       	ldi	r25, 0x01	; 1
 558:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
				PORTB^=(1<<PORTB5);
 55c:	95 b1       	in	r25, 0x05	; 5
 55e:	80 e2       	ldi	r24, 0x20	; 32
 560:	89 27       	eor	r24, r25
 562:	85 b9       	out	0x05, r24	; 5
				TIFR1&=~(1<<OCF1A);
 564:	b1 98       	cbi	0x16, 1	; 22
				Na--;
 566:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Na>
 56a:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <Na+0x1>
 56e:	01 97       	sbiw	r24, 0x01	; 1
 570:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <Na+0x1>
 574:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <Na>
 578:	30 c0       	rjmp	.+96     	; 0x5da <__vector_11+0x166>
			} else if (flag_home==0){
 57a:	89 2b       	or	r24, r25
 57c:	71 f5       	brne	.+92     	; 0x5da <__vector_11+0x166>
				N=0;
 57e:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <N+0x1>
 582:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <N>
				Na=0;
 586:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <Na+0x1>
 58a:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <Na>
				OCR1A=5000;
 58e:	88 e8       	ldi	r24, 0x88	; 136
 590:	93 e1       	ldi	r25, 0x13	; 19
 592:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 596:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
				printf("HOMING FINALIZADO\n");
 59a:	89 e3       	ldi	r24, 0x39	; 57
 59c:	91 e0       	ldi	r25, 0x01	; 1
 59e:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
				estado=activo;
 5a2:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <estado>
 5a6:	19 c0       	rjmp	.+50     	; 0x5da <__vector_11+0x166>
			}
		} else if (~PINB&(1<<0)){
 5a8:	18 99       	sbic	0x03, 0	; 3
 5aa:	17 c0       	rjmp	.+46     	; 0x5da <__vector_11+0x166>
			flag_home=0;
 5ac:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <__data_end+0x1>
 5b0:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <__data_end>
			PORTB|=(1<<PORTB3);
 5b4:	2b 9a       	sbi	0x05, 3	; 5
			printf("RETORNO...\n");
 5b6:	8b e4       	ldi	r24, 0x4B	; 75
 5b8:	91 e0       	ldi	r25, 0x01	; 1
 5ba:	0e 94 a9 03 	call	0x752	; 0x752 <puts>
			PORTB^=(1<<PORTB5);
 5be:	95 b1       	in	r25, 0x05	; 5
 5c0:	80 e2       	ldi	r24, 0x20	; 32
 5c2:	89 27       	eor	r24, r25
 5c4:	85 b9       	out	0x05, r24	; 5
			TIFR1&=~(1<<OCF1A);
 5c6:	b1 98       	cbi	0x16, 1	; 22
			Na++;
 5c8:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Na>
 5cc:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <Na+0x1>
 5d0:	01 96       	adiw	r24, 0x01	; 1
 5d2:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <Na+0x1>
 5d6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <Na>
		}
	}
}
 5da:	ff 91       	pop	r31
 5dc:	ef 91       	pop	r30
 5de:	bf 91       	pop	r27
 5e0:	af 91       	pop	r26
 5e2:	9f 91       	pop	r25
 5e4:	8f 91       	pop	r24
 5e6:	7f 91       	pop	r23
 5e8:	6f 91       	pop	r22
 5ea:	5f 91       	pop	r21
 5ec:	4f 91       	pop	r20
 5ee:	3f 91       	pop	r19
 5f0:	2f 91       	pop	r18
 5f2:	0f 90       	pop	r0
 5f4:	0f be       	out	0x3f, r0	; 63
 5f6:	0f 90       	pop	r0
 5f8:	1f 90       	pop	r1
 5fa:	18 95       	reti

000005fc <main>:

//----------------------RUTINA PRINCIPAL-----------------------------
int main(void){
	
  UART_init(brate0);
 5fc:	80 e8       	ldi	r24, 0x80	; 128
 5fe:	95 e2       	ldi	r25, 0x25	; 37
 600:	0e 94 1d 01 	call	0x23a	; 0x23a <UART_init>
  stdout = stdin = &uart_io;
 604:	ed e8       	ldi	r30, 0x8D	; 141
 606:	f1 e0       	ldi	r31, 0x01	; 1
 608:	80 e0       	ldi	r24, 0x00	; 0
 60a:	91 e0       	ldi	r25, 0x01	; 1
 60c:	91 83       	std	Z+1, r25	; 0x01
 60e:	80 83       	st	Z, r24
 610:	93 83       	std	Z+3, r25	; 0x03
 612:	82 83       	std	Z+2, r24	; 0x02
  indcom=0;
 614:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <indcom>
  
  DDRB=(1<<DDB5)|(1<<DDB3);
 618:	88 e2       	ldi	r24, 0x28	; 40
 61a:	84 b9       	out	0x04, r24	; 4
  
  PRESCALER_conf(1,4);
 61c:	64 e0       	ldi	r22, 0x04	; 4
 61e:	70 e0       	ldi	r23, 0x00	; 0
 620:	81 e0       	ldi	r24, 0x01	; 1
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	0e 94 53 00 	call	0xa6	; 0xa6 <PRESCALER_conf>
  TIMER_CTC_init(1,'A',periodo,0);
 628:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <periodo>
 62c:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <periodo+0x1>
 630:	20 e0       	ldi	r18, 0x00	; 0
 632:	30 e0       	ldi	r19, 0x00	; 0
 634:	61 e4       	ldi	r22, 0x41	; 65
 636:	81 e0       	ldi	r24, 0x01	; 1
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	0e 94 74 00 	call	0xe8	; 0xe8 <TIMER_CTC_init>
  
  sei();
 63e:	78 94       	sei
  
  while (1){
	  _delay_us(1);
	  if (~PINB&(1<<0)){
		  printf("FINAL DE CARRERA");
 640:	c6 e5       	ldi	r28, 0x56	; 86
 642:	d1 e0       	ldi	r29, 0x01	; 1
 644:	00 00       	nop
  
  sei();
  
  while (1){
	  _delay_us(1);
	  if (~PINB&(1<<0)){
 646:	18 99       	sbic	0x03, 0	; 3
 648:	fd cf       	rjmp	.-6      	; 0x644 <main+0x48>
		  printf("FINAL DE CARRERA");
 64a:	df 93       	push	r29
 64c:	cf 93       	push	r28
 64e:	0e 94 93 03 	call	0x726	; 0x726 <printf>
 652:	0f 90       	pop	r0
 654:	0f 90       	pop	r0
 656:	f6 cf       	rjmp	.-20     	; 0x644 <main+0x48>

00000658 <__udivmodsi4>:
 658:	a1 e2       	ldi	r26, 0x21	; 33
 65a:	1a 2e       	mov	r1, r26
 65c:	aa 1b       	sub	r26, r26
 65e:	bb 1b       	sub	r27, r27
 660:	fd 01       	movw	r30, r26
 662:	0d c0       	rjmp	.+26     	; 0x67e <__udivmodsi4_ep>

00000664 <__udivmodsi4_loop>:
 664:	aa 1f       	adc	r26, r26
 666:	bb 1f       	adc	r27, r27
 668:	ee 1f       	adc	r30, r30
 66a:	ff 1f       	adc	r31, r31
 66c:	a2 17       	cp	r26, r18
 66e:	b3 07       	cpc	r27, r19
 670:	e4 07       	cpc	r30, r20
 672:	f5 07       	cpc	r31, r21
 674:	20 f0       	brcs	.+8      	; 0x67e <__udivmodsi4_ep>
 676:	a2 1b       	sub	r26, r18
 678:	b3 0b       	sbc	r27, r19
 67a:	e4 0b       	sbc	r30, r20
 67c:	f5 0b       	sbc	r31, r21

0000067e <__udivmodsi4_ep>:
 67e:	66 1f       	adc	r22, r22
 680:	77 1f       	adc	r23, r23
 682:	88 1f       	adc	r24, r24
 684:	99 1f       	adc	r25, r25
 686:	1a 94       	dec	r1
 688:	69 f7       	brne	.-38     	; 0x664 <__udivmodsi4_loop>
 68a:	60 95       	com	r22
 68c:	70 95       	com	r23
 68e:	80 95       	com	r24
 690:	90 95       	com	r25
 692:	9b 01       	movw	r18, r22
 694:	ac 01       	movw	r20, r24
 696:	bd 01       	movw	r22, r26
 698:	cf 01       	movw	r24, r30
 69a:	08 95       	ret

0000069c <__divmodsi4>:
 69c:	05 2e       	mov	r0, r21
 69e:	97 fb       	bst	r25, 7
 6a0:	1e f4       	brtc	.+6      	; 0x6a8 <__divmodsi4+0xc>
 6a2:	00 94       	com	r0
 6a4:	0e 94 65 03 	call	0x6ca	; 0x6ca <__negsi2>
 6a8:	57 fd       	sbrc	r21, 7
 6aa:	07 d0       	rcall	.+14     	; 0x6ba <__divmodsi4_neg2>
 6ac:	0e 94 2c 03 	call	0x658	; 0x658 <__udivmodsi4>
 6b0:	07 fc       	sbrc	r0, 7
 6b2:	03 d0       	rcall	.+6      	; 0x6ba <__divmodsi4_neg2>
 6b4:	4e f4       	brtc	.+18     	; 0x6c8 <__divmodsi4_exit>
 6b6:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__negsi2>

000006ba <__divmodsi4_neg2>:
 6ba:	50 95       	com	r21
 6bc:	40 95       	com	r20
 6be:	30 95       	com	r19
 6c0:	21 95       	neg	r18
 6c2:	3f 4f       	sbci	r19, 0xFF	; 255
 6c4:	4f 4f       	sbci	r20, 0xFF	; 255
 6c6:	5f 4f       	sbci	r21, 0xFF	; 255

000006c8 <__divmodsi4_exit>:
 6c8:	08 95       	ret

000006ca <__negsi2>:
 6ca:	90 95       	com	r25
 6cc:	80 95       	com	r24
 6ce:	70 95       	com	r23
 6d0:	61 95       	neg	r22
 6d2:	7f 4f       	sbci	r23, 0xFF	; 255
 6d4:	8f 4f       	sbci	r24, 0xFF	; 255
 6d6:	9f 4f       	sbci	r25, 0xFF	; 255
 6d8:	08 95       	ret

000006da <atoi>:
 6da:	fc 01       	movw	r30, r24
 6dc:	88 27       	eor	r24, r24
 6de:	99 27       	eor	r25, r25
 6e0:	e8 94       	clt
 6e2:	21 91       	ld	r18, Z+
 6e4:	20 32       	cpi	r18, 0x20	; 32
 6e6:	e9 f3       	breq	.-6      	; 0x6e2 <atoi+0x8>
 6e8:	29 30       	cpi	r18, 0x09	; 9
 6ea:	10 f0       	brcs	.+4      	; 0x6f0 <atoi+0x16>
 6ec:	2e 30       	cpi	r18, 0x0E	; 14
 6ee:	c8 f3       	brcs	.-14     	; 0x6e2 <atoi+0x8>
 6f0:	2b 32       	cpi	r18, 0x2B	; 43
 6f2:	41 f0       	breq	.+16     	; 0x704 <atoi+0x2a>
 6f4:	2d 32       	cpi	r18, 0x2D	; 45
 6f6:	39 f4       	brne	.+14     	; 0x706 <atoi+0x2c>
 6f8:	68 94       	set
 6fa:	04 c0       	rjmp	.+8      	; 0x704 <atoi+0x2a>
 6fc:	0e 94 8b 03 	call	0x716	; 0x716 <__mulhi_const_10>
 700:	82 0f       	add	r24, r18
 702:	91 1d       	adc	r25, r1
 704:	21 91       	ld	r18, Z+
 706:	20 53       	subi	r18, 0x30	; 48
 708:	2a 30       	cpi	r18, 0x0A	; 10
 70a:	c0 f3       	brcs	.-16     	; 0x6fc <atoi+0x22>
 70c:	1e f4       	brtc	.+6      	; 0x714 <atoi+0x3a>
 70e:	90 95       	com	r25
 710:	81 95       	neg	r24
 712:	9f 4f       	sbci	r25, 0xFF	; 255
 714:	08 95       	ret

00000716 <__mulhi_const_10>:
 716:	7a e0       	ldi	r23, 0x0A	; 10
 718:	97 9f       	mul	r25, r23
 71a:	90 2d       	mov	r25, r0
 71c:	87 9f       	mul	r24, r23
 71e:	80 2d       	mov	r24, r0
 720:	91 0d       	add	r25, r1
 722:	11 24       	eor	r1, r1
 724:	08 95       	ret

00000726 <printf>:
 726:	a0 e0       	ldi	r26, 0x00	; 0
 728:	b0 e0       	ldi	r27, 0x00	; 0
 72a:	e9 e9       	ldi	r30, 0x99	; 153
 72c:	f3 e0       	ldi	r31, 0x03	; 3
 72e:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__prologue_saves__+0x20>
 732:	ae 01       	movw	r20, r28
 734:	4b 5f       	subi	r20, 0xFB	; 251
 736:	5f 4f       	sbci	r21, 0xFF	; 255
 738:	fa 01       	movw	r30, r20
 73a:	61 91       	ld	r22, Z+
 73c:	71 91       	ld	r23, Z+
 73e:	af 01       	movw	r20, r30
 740:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <__iob+0x2>
 744:	90 91 90 01 	lds	r25, 0x0190	; 0x800190 <__iob+0x3>
 748:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <vfprintf>
 74c:	e2 e0       	ldi	r30, 0x02	; 2
 74e:	0c 94 96 06 	jmp	0xd2c	; 0xd2c <__epilogue_restores__+0x20>

00000752 <puts>:
 752:	0f 93       	push	r16
 754:	1f 93       	push	r17
 756:	cf 93       	push	r28
 758:	df 93       	push	r29
 75a:	e0 91 8f 01 	lds	r30, 0x018F	; 0x80018f <__iob+0x2>
 75e:	f0 91 90 01 	lds	r31, 0x0190	; 0x800190 <__iob+0x3>
 762:	23 81       	ldd	r18, Z+3	; 0x03
 764:	21 ff       	sbrs	r18, 1
 766:	1b c0       	rjmp	.+54     	; 0x79e <puts+0x4c>
 768:	8c 01       	movw	r16, r24
 76a:	d0 e0       	ldi	r29, 0x00	; 0
 76c:	c0 e0       	ldi	r28, 0x00	; 0
 76e:	f8 01       	movw	r30, r16
 770:	81 91       	ld	r24, Z+
 772:	8f 01       	movw	r16, r30
 774:	60 91 8f 01 	lds	r22, 0x018F	; 0x80018f <__iob+0x2>
 778:	70 91 90 01 	lds	r23, 0x0190	; 0x800190 <__iob+0x3>
 77c:	db 01       	movw	r26, r22
 77e:	18 96       	adiw	r26, 0x08	; 8
 780:	ed 91       	ld	r30, X+
 782:	fc 91       	ld	r31, X
 784:	19 97       	sbiw	r26, 0x09	; 9
 786:	88 23       	and	r24, r24
 788:	31 f0       	breq	.+12     	; 0x796 <puts+0x44>
 78a:	09 95       	icall
 78c:	89 2b       	or	r24, r25
 78e:	79 f3       	breq	.-34     	; 0x76e <puts+0x1c>
 790:	df ef       	ldi	r29, 0xFF	; 255
 792:	cf ef       	ldi	r28, 0xFF	; 255
 794:	ec cf       	rjmp	.-40     	; 0x76e <puts+0x1c>
 796:	8a e0       	ldi	r24, 0x0A	; 10
 798:	09 95       	icall
 79a:	89 2b       	or	r24, r25
 79c:	19 f0       	breq	.+6      	; 0x7a4 <puts+0x52>
 79e:	8f ef       	ldi	r24, 0xFF	; 255
 7a0:	9f ef       	ldi	r25, 0xFF	; 255
 7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <puts+0x56>
 7a4:	8d 2f       	mov	r24, r29
 7a6:	9c 2f       	mov	r25, r28
 7a8:	df 91       	pop	r29
 7aa:	cf 91       	pop	r28
 7ac:	1f 91       	pop	r17
 7ae:	0f 91       	pop	r16
 7b0:	08 95       	ret

000007b2 <vfprintf>:
 7b2:	ab e0       	ldi	r26, 0x0B	; 11
 7b4:	b0 e0       	ldi	r27, 0x00	; 0
 7b6:	ef ed       	ldi	r30, 0xDF	; 223
 7b8:	f3 e0       	ldi	r31, 0x03	; 3
 7ba:	0c 94 6a 06 	jmp	0xcd4	; 0xcd4 <__prologue_saves__>
 7be:	6c 01       	movw	r12, r24
 7c0:	7b 01       	movw	r14, r22
 7c2:	8a 01       	movw	r16, r20
 7c4:	fc 01       	movw	r30, r24
 7c6:	17 82       	std	Z+7, r1	; 0x07
 7c8:	16 82       	std	Z+6, r1	; 0x06
 7ca:	83 81       	ldd	r24, Z+3	; 0x03
 7cc:	81 ff       	sbrs	r24, 1
 7ce:	cc c1       	rjmp	.+920    	; 0xb68 <__stack+0x269>
 7d0:	ce 01       	movw	r24, r28
 7d2:	01 96       	adiw	r24, 0x01	; 1
 7d4:	3c 01       	movw	r6, r24
 7d6:	f6 01       	movw	r30, r12
 7d8:	93 81       	ldd	r25, Z+3	; 0x03
 7da:	f7 01       	movw	r30, r14
 7dc:	93 fd       	sbrc	r25, 3
 7de:	85 91       	lpm	r24, Z+
 7e0:	93 ff       	sbrs	r25, 3
 7e2:	81 91       	ld	r24, Z+
 7e4:	7f 01       	movw	r14, r30
 7e6:	88 23       	and	r24, r24
 7e8:	09 f4       	brne	.+2      	; 0x7ec <vfprintf+0x3a>
 7ea:	ba c1       	rjmp	.+884    	; 0xb60 <__stack+0x261>
 7ec:	85 32       	cpi	r24, 0x25	; 37
 7ee:	39 f4       	brne	.+14     	; 0x7fe <vfprintf+0x4c>
 7f0:	93 fd       	sbrc	r25, 3
 7f2:	85 91       	lpm	r24, Z+
 7f4:	93 ff       	sbrs	r25, 3
 7f6:	81 91       	ld	r24, Z+
 7f8:	7f 01       	movw	r14, r30
 7fa:	85 32       	cpi	r24, 0x25	; 37
 7fc:	29 f4       	brne	.+10     	; 0x808 <vfprintf+0x56>
 7fe:	b6 01       	movw	r22, r12
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 806:	e7 cf       	rjmp	.-50     	; 0x7d6 <vfprintf+0x24>
 808:	91 2c       	mov	r9, r1
 80a:	21 2c       	mov	r2, r1
 80c:	31 2c       	mov	r3, r1
 80e:	ff e1       	ldi	r31, 0x1F	; 31
 810:	f3 15       	cp	r31, r3
 812:	d8 f0       	brcs	.+54     	; 0x84a <vfprintf+0x98>
 814:	8b 32       	cpi	r24, 0x2B	; 43
 816:	79 f0       	breq	.+30     	; 0x836 <vfprintf+0x84>
 818:	38 f4       	brcc	.+14     	; 0x828 <vfprintf+0x76>
 81a:	80 32       	cpi	r24, 0x20	; 32
 81c:	79 f0       	breq	.+30     	; 0x83c <vfprintf+0x8a>
 81e:	83 32       	cpi	r24, 0x23	; 35
 820:	a1 f4       	brne	.+40     	; 0x84a <vfprintf+0x98>
 822:	23 2d       	mov	r18, r3
 824:	20 61       	ori	r18, 0x10	; 16
 826:	1d c0       	rjmp	.+58     	; 0x862 <vfprintf+0xb0>
 828:	8d 32       	cpi	r24, 0x2D	; 45
 82a:	61 f0       	breq	.+24     	; 0x844 <vfprintf+0x92>
 82c:	80 33       	cpi	r24, 0x30	; 48
 82e:	69 f4       	brne	.+26     	; 0x84a <vfprintf+0x98>
 830:	23 2d       	mov	r18, r3
 832:	21 60       	ori	r18, 0x01	; 1
 834:	16 c0       	rjmp	.+44     	; 0x862 <vfprintf+0xb0>
 836:	83 2d       	mov	r24, r3
 838:	82 60       	ori	r24, 0x02	; 2
 83a:	38 2e       	mov	r3, r24
 83c:	e3 2d       	mov	r30, r3
 83e:	e4 60       	ori	r30, 0x04	; 4
 840:	3e 2e       	mov	r3, r30
 842:	2a c0       	rjmp	.+84     	; 0x898 <vfprintf+0xe6>
 844:	f3 2d       	mov	r31, r3
 846:	f8 60       	ori	r31, 0x08	; 8
 848:	1d c0       	rjmp	.+58     	; 0x884 <vfprintf+0xd2>
 84a:	37 fc       	sbrc	r3, 7
 84c:	2d c0       	rjmp	.+90     	; 0x8a8 <vfprintf+0xf6>
 84e:	20 ed       	ldi	r18, 0xD0	; 208
 850:	28 0f       	add	r18, r24
 852:	2a 30       	cpi	r18, 0x0A	; 10
 854:	40 f0       	brcs	.+16     	; 0x866 <vfprintf+0xb4>
 856:	8e 32       	cpi	r24, 0x2E	; 46
 858:	b9 f4       	brne	.+46     	; 0x888 <vfprintf+0xd6>
 85a:	36 fc       	sbrc	r3, 6
 85c:	81 c1       	rjmp	.+770    	; 0xb60 <__stack+0x261>
 85e:	23 2d       	mov	r18, r3
 860:	20 64       	ori	r18, 0x40	; 64
 862:	32 2e       	mov	r3, r18
 864:	19 c0       	rjmp	.+50     	; 0x898 <vfprintf+0xe6>
 866:	36 fe       	sbrs	r3, 6
 868:	06 c0       	rjmp	.+12     	; 0x876 <vfprintf+0xc4>
 86a:	8a e0       	ldi	r24, 0x0A	; 10
 86c:	98 9e       	mul	r9, r24
 86e:	20 0d       	add	r18, r0
 870:	11 24       	eor	r1, r1
 872:	92 2e       	mov	r9, r18
 874:	11 c0       	rjmp	.+34     	; 0x898 <vfprintf+0xe6>
 876:	ea e0       	ldi	r30, 0x0A	; 10
 878:	2e 9e       	mul	r2, r30
 87a:	20 0d       	add	r18, r0
 87c:	11 24       	eor	r1, r1
 87e:	22 2e       	mov	r2, r18
 880:	f3 2d       	mov	r31, r3
 882:	f0 62       	ori	r31, 0x20	; 32
 884:	3f 2e       	mov	r3, r31
 886:	08 c0       	rjmp	.+16     	; 0x898 <vfprintf+0xe6>
 888:	8c 36       	cpi	r24, 0x6C	; 108
 88a:	21 f4       	brne	.+8      	; 0x894 <vfprintf+0xe2>
 88c:	83 2d       	mov	r24, r3
 88e:	80 68       	ori	r24, 0x80	; 128
 890:	38 2e       	mov	r3, r24
 892:	02 c0       	rjmp	.+4      	; 0x898 <vfprintf+0xe6>
 894:	88 36       	cpi	r24, 0x68	; 104
 896:	41 f4       	brne	.+16     	; 0x8a8 <vfprintf+0xf6>
 898:	f7 01       	movw	r30, r14
 89a:	93 fd       	sbrc	r25, 3
 89c:	85 91       	lpm	r24, Z+
 89e:	93 ff       	sbrs	r25, 3
 8a0:	81 91       	ld	r24, Z+
 8a2:	7f 01       	movw	r14, r30
 8a4:	81 11       	cpse	r24, r1
 8a6:	b3 cf       	rjmp	.-154    	; 0x80e <vfprintf+0x5c>
 8a8:	98 2f       	mov	r25, r24
 8aa:	9f 7d       	andi	r25, 0xDF	; 223
 8ac:	95 54       	subi	r25, 0x45	; 69
 8ae:	93 30       	cpi	r25, 0x03	; 3
 8b0:	28 f4       	brcc	.+10     	; 0x8bc <vfprintf+0x10a>
 8b2:	0c 5f       	subi	r16, 0xFC	; 252
 8b4:	1f 4f       	sbci	r17, 0xFF	; 255
 8b6:	9f e3       	ldi	r25, 0x3F	; 63
 8b8:	99 83       	std	Y+1, r25	; 0x01
 8ba:	0d c0       	rjmp	.+26     	; 0x8d6 <vfprintf+0x124>
 8bc:	83 36       	cpi	r24, 0x63	; 99
 8be:	31 f0       	breq	.+12     	; 0x8cc <vfprintf+0x11a>
 8c0:	83 37       	cpi	r24, 0x73	; 115
 8c2:	71 f0       	breq	.+28     	; 0x8e0 <vfprintf+0x12e>
 8c4:	83 35       	cpi	r24, 0x53	; 83
 8c6:	09 f0       	breq	.+2      	; 0x8ca <vfprintf+0x118>
 8c8:	59 c0       	rjmp	.+178    	; 0x97c <__stack+0x7d>
 8ca:	21 c0       	rjmp	.+66     	; 0x90e <__stack+0xf>
 8cc:	f8 01       	movw	r30, r16
 8ce:	80 81       	ld	r24, Z
 8d0:	89 83       	std	Y+1, r24	; 0x01
 8d2:	0e 5f       	subi	r16, 0xFE	; 254
 8d4:	1f 4f       	sbci	r17, 0xFF	; 255
 8d6:	88 24       	eor	r8, r8
 8d8:	83 94       	inc	r8
 8da:	91 2c       	mov	r9, r1
 8dc:	53 01       	movw	r10, r6
 8de:	13 c0       	rjmp	.+38     	; 0x906 <__stack+0x7>
 8e0:	28 01       	movw	r4, r16
 8e2:	f2 e0       	ldi	r31, 0x02	; 2
 8e4:	4f 0e       	add	r4, r31
 8e6:	51 1c       	adc	r5, r1
 8e8:	f8 01       	movw	r30, r16
 8ea:	a0 80       	ld	r10, Z
 8ec:	b1 80       	ldd	r11, Z+1	; 0x01
 8ee:	36 fe       	sbrs	r3, 6
 8f0:	03 c0       	rjmp	.+6      	; 0x8f8 <vfprintf+0x146>
 8f2:	69 2d       	mov	r22, r9
 8f4:	70 e0       	ldi	r23, 0x00	; 0
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <vfprintf+0x14a>
 8f8:	6f ef       	ldi	r22, 0xFF	; 255
 8fa:	7f ef       	ldi	r23, 0xFF	; 255
 8fc:	c5 01       	movw	r24, r10
 8fe:	0e 94 c5 05 	call	0xb8a	; 0xb8a <strnlen>
 902:	4c 01       	movw	r8, r24
 904:	82 01       	movw	r16, r4
 906:	f3 2d       	mov	r31, r3
 908:	ff 77       	andi	r31, 0x7F	; 127
 90a:	3f 2e       	mov	r3, r31
 90c:	16 c0       	rjmp	.+44     	; 0x93a <__stack+0x3b>
 90e:	28 01       	movw	r4, r16
 910:	22 e0       	ldi	r18, 0x02	; 2
 912:	42 0e       	add	r4, r18
 914:	51 1c       	adc	r5, r1
 916:	f8 01       	movw	r30, r16
 918:	a0 80       	ld	r10, Z
 91a:	b1 80       	ldd	r11, Z+1	; 0x01
 91c:	36 fe       	sbrs	r3, 6
 91e:	03 c0       	rjmp	.+6      	; 0x926 <__stack+0x27>
 920:	69 2d       	mov	r22, r9
 922:	70 e0       	ldi	r23, 0x00	; 0
 924:	02 c0       	rjmp	.+4      	; 0x92a <__stack+0x2b>
 926:	6f ef       	ldi	r22, 0xFF	; 255
 928:	7f ef       	ldi	r23, 0xFF	; 255
 92a:	c5 01       	movw	r24, r10
 92c:	0e 94 ba 05 	call	0xb74	; 0xb74 <strnlen_P>
 930:	4c 01       	movw	r8, r24
 932:	f3 2d       	mov	r31, r3
 934:	f0 68       	ori	r31, 0x80	; 128
 936:	3f 2e       	mov	r3, r31
 938:	82 01       	movw	r16, r4
 93a:	33 fc       	sbrc	r3, 3
 93c:	1b c0       	rjmp	.+54     	; 0x974 <__stack+0x75>
 93e:	82 2d       	mov	r24, r2
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	88 16       	cp	r8, r24
 944:	99 06       	cpc	r9, r25
 946:	b0 f4       	brcc	.+44     	; 0x974 <__stack+0x75>
 948:	b6 01       	movw	r22, r12
 94a:	80 e2       	ldi	r24, 0x20	; 32
 94c:	90 e0       	ldi	r25, 0x00	; 0
 94e:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 952:	2a 94       	dec	r2
 954:	f4 cf       	rjmp	.-24     	; 0x93e <__stack+0x3f>
 956:	f5 01       	movw	r30, r10
 958:	37 fc       	sbrc	r3, 7
 95a:	85 91       	lpm	r24, Z+
 95c:	37 fe       	sbrs	r3, 7
 95e:	81 91       	ld	r24, Z+
 960:	5f 01       	movw	r10, r30
 962:	b6 01       	movw	r22, r12
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 96a:	21 10       	cpse	r2, r1
 96c:	2a 94       	dec	r2
 96e:	21 e0       	ldi	r18, 0x01	; 1
 970:	82 1a       	sub	r8, r18
 972:	91 08       	sbc	r9, r1
 974:	81 14       	cp	r8, r1
 976:	91 04       	cpc	r9, r1
 978:	71 f7       	brne	.-36     	; 0x956 <__stack+0x57>
 97a:	e8 c0       	rjmp	.+464    	; 0xb4c <__stack+0x24d>
 97c:	84 36       	cpi	r24, 0x64	; 100
 97e:	11 f0       	breq	.+4      	; 0x984 <__stack+0x85>
 980:	89 36       	cpi	r24, 0x69	; 105
 982:	41 f5       	brne	.+80     	; 0x9d4 <__stack+0xd5>
 984:	f8 01       	movw	r30, r16
 986:	37 fe       	sbrs	r3, 7
 988:	07 c0       	rjmp	.+14     	; 0x998 <__stack+0x99>
 98a:	60 81       	ld	r22, Z
 98c:	71 81       	ldd	r23, Z+1	; 0x01
 98e:	82 81       	ldd	r24, Z+2	; 0x02
 990:	93 81       	ldd	r25, Z+3	; 0x03
 992:	0c 5f       	subi	r16, 0xFC	; 252
 994:	1f 4f       	sbci	r17, 0xFF	; 255
 996:	08 c0       	rjmp	.+16     	; 0x9a8 <__stack+0xa9>
 998:	60 81       	ld	r22, Z
 99a:	71 81       	ldd	r23, Z+1	; 0x01
 99c:	07 2e       	mov	r0, r23
 99e:	00 0c       	add	r0, r0
 9a0:	88 0b       	sbc	r24, r24
 9a2:	99 0b       	sbc	r25, r25
 9a4:	0e 5f       	subi	r16, 0xFE	; 254
 9a6:	1f 4f       	sbci	r17, 0xFF	; 255
 9a8:	f3 2d       	mov	r31, r3
 9aa:	ff 76       	andi	r31, 0x6F	; 111
 9ac:	3f 2e       	mov	r3, r31
 9ae:	97 ff       	sbrs	r25, 7
 9b0:	09 c0       	rjmp	.+18     	; 0x9c4 <__stack+0xc5>
 9b2:	90 95       	com	r25
 9b4:	80 95       	com	r24
 9b6:	70 95       	com	r23
 9b8:	61 95       	neg	r22
 9ba:	7f 4f       	sbci	r23, 0xFF	; 255
 9bc:	8f 4f       	sbci	r24, 0xFF	; 255
 9be:	9f 4f       	sbci	r25, 0xFF	; 255
 9c0:	f0 68       	ori	r31, 0x80	; 128
 9c2:	3f 2e       	mov	r3, r31
 9c4:	2a e0       	ldi	r18, 0x0A	; 10
 9c6:	30 e0       	ldi	r19, 0x00	; 0
 9c8:	a3 01       	movw	r20, r6
 9ca:	0e 94 0c 06 	call	0xc18	; 0xc18 <__ultoa_invert>
 9ce:	88 2e       	mov	r8, r24
 9d0:	86 18       	sub	r8, r6
 9d2:	45 c0       	rjmp	.+138    	; 0xa5e <__stack+0x15f>
 9d4:	85 37       	cpi	r24, 0x75	; 117
 9d6:	31 f4       	brne	.+12     	; 0x9e4 <__stack+0xe5>
 9d8:	23 2d       	mov	r18, r3
 9da:	2f 7e       	andi	r18, 0xEF	; 239
 9dc:	b2 2e       	mov	r11, r18
 9de:	2a e0       	ldi	r18, 0x0A	; 10
 9e0:	30 e0       	ldi	r19, 0x00	; 0
 9e2:	25 c0       	rjmp	.+74     	; 0xa2e <__stack+0x12f>
 9e4:	93 2d       	mov	r25, r3
 9e6:	99 7f       	andi	r25, 0xF9	; 249
 9e8:	b9 2e       	mov	r11, r25
 9ea:	8f 36       	cpi	r24, 0x6F	; 111
 9ec:	c1 f0       	breq	.+48     	; 0xa1e <__stack+0x11f>
 9ee:	18 f4       	brcc	.+6      	; 0x9f6 <__stack+0xf7>
 9f0:	88 35       	cpi	r24, 0x58	; 88
 9f2:	79 f0       	breq	.+30     	; 0xa12 <__stack+0x113>
 9f4:	b5 c0       	rjmp	.+362    	; 0xb60 <__stack+0x261>
 9f6:	80 37       	cpi	r24, 0x70	; 112
 9f8:	19 f0       	breq	.+6      	; 0xa00 <__stack+0x101>
 9fa:	88 37       	cpi	r24, 0x78	; 120
 9fc:	21 f0       	breq	.+8      	; 0xa06 <__stack+0x107>
 9fe:	b0 c0       	rjmp	.+352    	; 0xb60 <__stack+0x261>
 a00:	e9 2f       	mov	r30, r25
 a02:	e0 61       	ori	r30, 0x10	; 16
 a04:	be 2e       	mov	r11, r30
 a06:	b4 fe       	sbrs	r11, 4
 a08:	0d c0       	rjmp	.+26     	; 0xa24 <__stack+0x125>
 a0a:	fb 2d       	mov	r31, r11
 a0c:	f4 60       	ori	r31, 0x04	; 4
 a0e:	bf 2e       	mov	r11, r31
 a10:	09 c0       	rjmp	.+18     	; 0xa24 <__stack+0x125>
 a12:	34 fe       	sbrs	r3, 4
 a14:	0a c0       	rjmp	.+20     	; 0xa2a <__stack+0x12b>
 a16:	29 2f       	mov	r18, r25
 a18:	26 60       	ori	r18, 0x06	; 6
 a1a:	b2 2e       	mov	r11, r18
 a1c:	06 c0       	rjmp	.+12     	; 0xa2a <__stack+0x12b>
 a1e:	28 e0       	ldi	r18, 0x08	; 8
 a20:	30 e0       	ldi	r19, 0x00	; 0
 a22:	05 c0       	rjmp	.+10     	; 0xa2e <__stack+0x12f>
 a24:	20 e1       	ldi	r18, 0x10	; 16
 a26:	30 e0       	ldi	r19, 0x00	; 0
 a28:	02 c0       	rjmp	.+4      	; 0xa2e <__stack+0x12f>
 a2a:	20 e1       	ldi	r18, 0x10	; 16
 a2c:	32 e0       	ldi	r19, 0x02	; 2
 a2e:	f8 01       	movw	r30, r16
 a30:	b7 fe       	sbrs	r11, 7
 a32:	07 c0       	rjmp	.+14     	; 0xa42 <__stack+0x143>
 a34:	60 81       	ld	r22, Z
 a36:	71 81       	ldd	r23, Z+1	; 0x01
 a38:	82 81       	ldd	r24, Z+2	; 0x02
 a3a:	93 81       	ldd	r25, Z+3	; 0x03
 a3c:	0c 5f       	subi	r16, 0xFC	; 252
 a3e:	1f 4f       	sbci	r17, 0xFF	; 255
 a40:	06 c0       	rjmp	.+12     	; 0xa4e <__stack+0x14f>
 a42:	60 81       	ld	r22, Z
 a44:	71 81       	ldd	r23, Z+1	; 0x01
 a46:	80 e0       	ldi	r24, 0x00	; 0
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	0e 5f       	subi	r16, 0xFE	; 254
 a4c:	1f 4f       	sbci	r17, 0xFF	; 255
 a4e:	a3 01       	movw	r20, r6
 a50:	0e 94 0c 06 	call	0xc18	; 0xc18 <__ultoa_invert>
 a54:	88 2e       	mov	r8, r24
 a56:	86 18       	sub	r8, r6
 a58:	fb 2d       	mov	r31, r11
 a5a:	ff 77       	andi	r31, 0x7F	; 127
 a5c:	3f 2e       	mov	r3, r31
 a5e:	36 fe       	sbrs	r3, 6
 a60:	0d c0       	rjmp	.+26     	; 0xa7c <__stack+0x17d>
 a62:	23 2d       	mov	r18, r3
 a64:	2e 7f       	andi	r18, 0xFE	; 254
 a66:	a2 2e       	mov	r10, r18
 a68:	89 14       	cp	r8, r9
 a6a:	58 f4       	brcc	.+22     	; 0xa82 <__stack+0x183>
 a6c:	34 fe       	sbrs	r3, 4
 a6e:	0b c0       	rjmp	.+22     	; 0xa86 <__stack+0x187>
 a70:	32 fc       	sbrc	r3, 2
 a72:	09 c0       	rjmp	.+18     	; 0xa86 <__stack+0x187>
 a74:	83 2d       	mov	r24, r3
 a76:	8e 7e       	andi	r24, 0xEE	; 238
 a78:	a8 2e       	mov	r10, r24
 a7a:	05 c0       	rjmp	.+10     	; 0xa86 <__stack+0x187>
 a7c:	b8 2c       	mov	r11, r8
 a7e:	a3 2c       	mov	r10, r3
 a80:	03 c0       	rjmp	.+6      	; 0xa88 <__stack+0x189>
 a82:	b8 2c       	mov	r11, r8
 a84:	01 c0       	rjmp	.+2      	; 0xa88 <__stack+0x189>
 a86:	b9 2c       	mov	r11, r9
 a88:	a4 fe       	sbrs	r10, 4
 a8a:	0f c0       	rjmp	.+30     	; 0xaaa <__stack+0x1ab>
 a8c:	fe 01       	movw	r30, r28
 a8e:	e8 0d       	add	r30, r8
 a90:	f1 1d       	adc	r31, r1
 a92:	80 81       	ld	r24, Z
 a94:	80 33       	cpi	r24, 0x30	; 48
 a96:	21 f4       	brne	.+8      	; 0xaa0 <__stack+0x1a1>
 a98:	9a 2d       	mov	r25, r10
 a9a:	99 7e       	andi	r25, 0xE9	; 233
 a9c:	a9 2e       	mov	r10, r25
 a9e:	09 c0       	rjmp	.+18     	; 0xab2 <__stack+0x1b3>
 aa0:	a2 fe       	sbrs	r10, 2
 aa2:	06 c0       	rjmp	.+12     	; 0xab0 <__stack+0x1b1>
 aa4:	b3 94       	inc	r11
 aa6:	b3 94       	inc	r11
 aa8:	04 c0       	rjmp	.+8      	; 0xab2 <__stack+0x1b3>
 aaa:	8a 2d       	mov	r24, r10
 aac:	86 78       	andi	r24, 0x86	; 134
 aae:	09 f0       	breq	.+2      	; 0xab2 <__stack+0x1b3>
 ab0:	b3 94       	inc	r11
 ab2:	a3 fc       	sbrc	r10, 3
 ab4:	11 c0       	rjmp	.+34     	; 0xad8 <__stack+0x1d9>
 ab6:	a0 fe       	sbrs	r10, 0
 ab8:	06 c0       	rjmp	.+12     	; 0xac6 <__stack+0x1c7>
 aba:	b2 14       	cp	r11, r2
 abc:	88 f4       	brcc	.+34     	; 0xae0 <__stack+0x1e1>
 abe:	28 0c       	add	r2, r8
 ac0:	92 2c       	mov	r9, r2
 ac2:	9b 18       	sub	r9, r11
 ac4:	0e c0       	rjmp	.+28     	; 0xae2 <__stack+0x1e3>
 ac6:	b2 14       	cp	r11, r2
 ac8:	60 f4       	brcc	.+24     	; 0xae2 <__stack+0x1e3>
 aca:	b6 01       	movw	r22, r12
 acc:	80 e2       	ldi	r24, 0x20	; 32
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 ad4:	b3 94       	inc	r11
 ad6:	f7 cf       	rjmp	.-18     	; 0xac6 <__stack+0x1c7>
 ad8:	b2 14       	cp	r11, r2
 ada:	18 f4       	brcc	.+6      	; 0xae2 <__stack+0x1e3>
 adc:	2b 18       	sub	r2, r11
 ade:	02 c0       	rjmp	.+4      	; 0xae4 <__stack+0x1e5>
 ae0:	98 2c       	mov	r9, r8
 ae2:	21 2c       	mov	r2, r1
 ae4:	a4 fe       	sbrs	r10, 4
 ae6:	10 c0       	rjmp	.+32     	; 0xb08 <__stack+0x209>
 ae8:	b6 01       	movw	r22, r12
 aea:	80 e3       	ldi	r24, 0x30	; 48
 aec:	90 e0       	ldi	r25, 0x00	; 0
 aee:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 af2:	a2 fe       	sbrs	r10, 2
 af4:	17 c0       	rjmp	.+46     	; 0xb24 <__stack+0x225>
 af6:	a1 fc       	sbrc	r10, 1
 af8:	03 c0       	rjmp	.+6      	; 0xb00 <__stack+0x201>
 afa:	88 e7       	ldi	r24, 0x78	; 120
 afc:	90 e0       	ldi	r25, 0x00	; 0
 afe:	02 c0       	rjmp	.+4      	; 0xb04 <__stack+0x205>
 b00:	88 e5       	ldi	r24, 0x58	; 88
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	b6 01       	movw	r22, r12
 b06:	0c c0       	rjmp	.+24     	; 0xb20 <__stack+0x221>
 b08:	8a 2d       	mov	r24, r10
 b0a:	86 78       	andi	r24, 0x86	; 134
 b0c:	59 f0       	breq	.+22     	; 0xb24 <__stack+0x225>
 b0e:	a1 fe       	sbrs	r10, 1
 b10:	02 c0       	rjmp	.+4      	; 0xb16 <__stack+0x217>
 b12:	8b e2       	ldi	r24, 0x2B	; 43
 b14:	01 c0       	rjmp	.+2      	; 0xb18 <__stack+0x219>
 b16:	80 e2       	ldi	r24, 0x20	; 32
 b18:	a7 fc       	sbrc	r10, 7
 b1a:	8d e2       	ldi	r24, 0x2D	; 45
 b1c:	b6 01       	movw	r22, r12
 b1e:	90 e0       	ldi	r25, 0x00	; 0
 b20:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 b24:	89 14       	cp	r8, r9
 b26:	38 f4       	brcc	.+14     	; 0xb36 <__stack+0x237>
 b28:	b6 01       	movw	r22, r12
 b2a:	80 e3       	ldi	r24, 0x30	; 48
 b2c:	90 e0       	ldi	r25, 0x00	; 0
 b2e:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 b32:	9a 94       	dec	r9
 b34:	f7 cf       	rjmp	.-18     	; 0xb24 <__stack+0x225>
 b36:	8a 94       	dec	r8
 b38:	f3 01       	movw	r30, r6
 b3a:	e8 0d       	add	r30, r8
 b3c:	f1 1d       	adc	r31, r1
 b3e:	80 81       	ld	r24, Z
 b40:	b6 01       	movw	r22, r12
 b42:	90 e0       	ldi	r25, 0x00	; 0
 b44:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 b48:	81 10       	cpse	r8, r1
 b4a:	f5 cf       	rjmp	.-22     	; 0xb36 <__stack+0x237>
 b4c:	22 20       	and	r2, r2
 b4e:	09 f4       	brne	.+2      	; 0xb52 <__stack+0x253>
 b50:	42 ce       	rjmp	.-892    	; 0x7d6 <vfprintf+0x24>
 b52:	b6 01       	movw	r22, r12
 b54:	80 e2       	ldi	r24, 0x20	; 32
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	0e 94 d0 05 	call	0xba0	; 0xba0 <fputc>
 b5c:	2a 94       	dec	r2
 b5e:	f6 cf       	rjmp	.-20     	; 0xb4c <__stack+0x24d>
 b60:	f6 01       	movw	r30, r12
 b62:	86 81       	ldd	r24, Z+6	; 0x06
 b64:	97 81       	ldd	r25, Z+7	; 0x07
 b66:	02 c0       	rjmp	.+4      	; 0xb6c <__stack+0x26d>
 b68:	8f ef       	ldi	r24, 0xFF	; 255
 b6a:	9f ef       	ldi	r25, 0xFF	; 255
 b6c:	2b 96       	adiw	r28, 0x0b	; 11
 b6e:	e2 e1       	ldi	r30, 0x12	; 18
 b70:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__epilogue_restores__>

00000b74 <strnlen_P>:
 b74:	fc 01       	movw	r30, r24
 b76:	05 90       	lpm	r0, Z+
 b78:	61 50       	subi	r22, 0x01	; 1
 b7a:	70 40       	sbci	r23, 0x00	; 0
 b7c:	01 10       	cpse	r0, r1
 b7e:	d8 f7       	brcc	.-10     	; 0xb76 <strnlen_P+0x2>
 b80:	80 95       	com	r24
 b82:	90 95       	com	r25
 b84:	8e 0f       	add	r24, r30
 b86:	9f 1f       	adc	r25, r31
 b88:	08 95       	ret

00000b8a <strnlen>:
 b8a:	fc 01       	movw	r30, r24
 b8c:	61 50       	subi	r22, 0x01	; 1
 b8e:	70 40       	sbci	r23, 0x00	; 0
 b90:	01 90       	ld	r0, Z+
 b92:	01 10       	cpse	r0, r1
 b94:	d8 f7       	brcc	.-10     	; 0xb8c <strnlen+0x2>
 b96:	80 95       	com	r24
 b98:	90 95       	com	r25
 b9a:	8e 0f       	add	r24, r30
 b9c:	9f 1f       	adc	r25, r31
 b9e:	08 95       	ret

00000ba0 <fputc>:
 ba0:	0f 93       	push	r16
 ba2:	1f 93       	push	r17
 ba4:	cf 93       	push	r28
 ba6:	df 93       	push	r29
 ba8:	fb 01       	movw	r30, r22
 baa:	23 81       	ldd	r18, Z+3	; 0x03
 bac:	21 fd       	sbrc	r18, 1
 bae:	03 c0       	rjmp	.+6      	; 0xbb6 <fputc+0x16>
 bb0:	8f ef       	ldi	r24, 0xFF	; 255
 bb2:	9f ef       	ldi	r25, 0xFF	; 255
 bb4:	2c c0       	rjmp	.+88     	; 0xc0e <fputc+0x6e>
 bb6:	22 ff       	sbrs	r18, 2
 bb8:	16 c0       	rjmp	.+44     	; 0xbe6 <fputc+0x46>
 bba:	46 81       	ldd	r20, Z+6	; 0x06
 bbc:	57 81       	ldd	r21, Z+7	; 0x07
 bbe:	24 81       	ldd	r18, Z+4	; 0x04
 bc0:	35 81       	ldd	r19, Z+5	; 0x05
 bc2:	42 17       	cp	r20, r18
 bc4:	53 07       	cpc	r21, r19
 bc6:	44 f4       	brge	.+16     	; 0xbd8 <fputc+0x38>
 bc8:	a0 81       	ld	r26, Z
 bca:	b1 81       	ldd	r27, Z+1	; 0x01
 bcc:	9d 01       	movw	r18, r26
 bce:	2f 5f       	subi	r18, 0xFF	; 255
 bd0:	3f 4f       	sbci	r19, 0xFF	; 255
 bd2:	31 83       	std	Z+1, r19	; 0x01
 bd4:	20 83       	st	Z, r18
 bd6:	8c 93       	st	X, r24
 bd8:	26 81       	ldd	r18, Z+6	; 0x06
 bda:	37 81       	ldd	r19, Z+7	; 0x07
 bdc:	2f 5f       	subi	r18, 0xFF	; 255
 bde:	3f 4f       	sbci	r19, 0xFF	; 255
 be0:	37 83       	std	Z+7, r19	; 0x07
 be2:	26 83       	std	Z+6, r18	; 0x06
 be4:	14 c0       	rjmp	.+40     	; 0xc0e <fputc+0x6e>
 be6:	8b 01       	movw	r16, r22
 be8:	ec 01       	movw	r28, r24
 bea:	fb 01       	movw	r30, r22
 bec:	00 84       	ldd	r0, Z+8	; 0x08
 bee:	f1 85       	ldd	r31, Z+9	; 0x09
 bf0:	e0 2d       	mov	r30, r0
 bf2:	09 95       	icall
 bf4:	89 2b       	or	r24, r25
 bf6:	e1 f6       	brne	.-72     	; 0xbb0 <fputc+0x10>
 bf8:	d8 01       	movw	r26, r16
 bfa:	16 96       	adiw	r26, 0x06	; 6
 bfc:	8d 91       	ld	r24, X+
 bfe:	9c 91       	ld	r25, X
 c00:	17 97       	sbiw	r26, 0x07	; 7
 c02:	01 96       	adiw	r24, 0x01	; 1
 c04:	17 96       	adiw	r26, 0x07	; 7
 c06:	9c 93       	st	X, r25
 c08:	8e 93       	st	-X, r24
 c0a:	16 97       	sbiw	r26, 0x06	; 6
 c0c:	ce 01       	movw	r24, r28
 c0e:	df 91       	pop	r29
 c10:	cf 91       	pop	r28
 c12:	1f 91       	pop	r17
 c14:	0f 91       	pop	r16
 c16:	08 95       	ret

00000c18 <__ultoa_invert>:
 c18:	fa 01       	movw	r30, r20
 c1a:	aa 27       	eor	r26, r26
 c1c:	28 30       	cpi	r18, 0x08	; 8
 c1e:	51 f1       	breq	.+84     	; 0xc74 <__ultoa_invert+0x5c>
 c20:	20 31       	cpi	r18, 0x10	; 16
 c22:	81 f1       	breq	.+96     	; 0xc84 <__ultoa_invert+0x6c>
 c24:	e8 94       	clt
 c26:	6f 93       	push	r22
 c28:	6e 7f       	andi	r22, 0xFE	; 254
 c2a:	6e 5f       	subi	r22, 0xFE	; 254
 c2c:	7f 4f       	sbci	r23, 0xFF	; 255
 c2e:	8f 4f       	sbci	r24, 0xFF	; 255
 c30:	9f 4f       	sbci	r25, 0xFF	; 255
 c32:	af 4f       	sbci	r26, 0xFF	; 255
 c34:	b1 e0       	ldi	r27, 0x01	; 1
 c36:	3e d0       	rcall	.+124    	; 0xcb4 <__ultoa_invert+0x9c>
 c38:	b4 e0       	ldi	r27, 0x04	; 4
 c3a:	3c d0       	rcall	.+120    	; 0xcb4 <__ultoa_invert+0x9c>
 c3c:	67 0f       	add	r22, r23
 c3e:	78 1f       	adc	r23, r24
 c40:	89 1f       	adc	r24, r25
 c42:	9a 1f       	adc	r25, r26
 c44:	a1 1d       	adc	r26, r1
 c46:	68 0f       	add	r22, r24
 c48:	79 1f       	adc	r23, r25
 c4a:	8a 1f       	adc	r24, r26
 c4c:	91 1d       	adc	r25, r1
 c4e:	a1 1d       	adc	r26, r1
 c50:	6a 0f       	add	r22, r26
 c52:	71 1d       	adc	r23, r1
 c54:	81 1d       	adc	r24, r1
 c56:	91 1d       	adc	r25, r1
 c58:	a1 1d       	adc	r26, r1
 c5a:	20 d0       	rcall	.+64     	; 0xc9c <__ultoa_invert+0x84>
 c5c:	09 f4       	brne	.+2      	; 0xc60 <__ultoa_invert+0x48>
 c5e:	68 94       	set
 c60:	3f 91       	pop	r19
 c62:	2a e0       	ldi	r18, 0x0A	; 10
 c64:	26 9f       	mul	r18, r22
 c66:	11 24       	eor	r1, r1
 c68:	30 19       	sub	r19, r0
 c6a:	30 5d       	subi	r19, 0xD0	; 208
 c6c:	31 93       	st	Z+, r19
 c6e:	de f6       	brtc	.-74     	; 0xc26 <__ultoa_invert+0xe>
 c70:	cf 01       	movw	r24, r30
 c72:	08 95       	ret
 c74:	46 2f       	mov	r20, r22
 c76:	47 70       	andi	r20, 0x07	; 7
 c78:	40 5d       	subi	r20, 0xD0	; 208
 c7a:	41 93       	st	Z+, r20
 c7c:	b3 e0       	ldi	r27, 0x03	; 3
 c7e:	0f d0       	rcall	.+30     	; 0xc9e <__ultoa_invert+0x86>
 c80:	c9 f7       	brne	.-14     	; 0xc74 <__ultoa_invert+0x5c>
 c82:	f6 cf       	rjmp	.-20     	; 0xc70 <__ultoa_invert+0x58>
 c84:	46 2f       	mov	r20, r22
 c86:	4f 70       	andi	r20, 0x0F	; 15
 c88:	40 5d       	subi	r20, 0xD0	; 208
 c8a:	4a 33       	cpi	r20, 0x3A	; 58
 c8c:	18 f0       	brcs	.+6      	; 0xc94 <__ultoa_invert+0x7c>
 c8e:	49 5d       	subi	r20, 0xD9	; 217
 c90:	31 fd       	sbrc	r19, 1
 c92:	40 52       	subi	r20, 0x20	; 32
 c94:	41 93       	st	Z+, r20
 c96:	02 d0       	rcall	.+4      	; 0xc9c <__ultoa_invert+0x84>
 c98:	a9 f7       	brne	.-22     	; 0xc84 <__ultoa_invert+0x6c>
 c9a:	ea cf       	rjmp	.-44     	; 0xc70 <__ultoa_invert+0x58>
 c9c:	b4 e0       	ldi	r27, 0x04	; 4
 c9e:	a6 95       	lsr	r26
 ca0:	97 95       	ror	r25
 ca2:	87 95       	ror	r24
 ca4:	77 95       	ror	r23
 ca6:	67 95       	ror	r22
 ca8:	ba 95       	dec	r27
 caa:	c9 f7       	brne	.-14     	; 0xc9e <__ultoa_invert+0x86>
 cac:	00 97       	sbiw	r24, 0x00	; 0
 cae:	61 05       	cpc	r22, r1
 cb0:	71 05       	cpc	r23, r1
 cb2:	08 95       	ret
 cb4:	9b 01       	movw	r18, r22
 cb6:	ac 01       	movw	r20, r24
 cb8:	0a 2e       	mov	r0, r26
 cba:	06 94       	lsr	r0
 cbc:	57 95       	ror	r21
 cbe:	47 95       	ror	r20
 cc0:	37 95       	ror	r19
 cc2:	27 95       	ror	r18
 cc4:	ba 95       	dec	r27
 cc6:	c9 f7       	brne	.-14     	; 0xcba <__ultoa_invert+0xa2>
 cc8:	62 0f       	add	r22, r18
 cca:	73 1f       	adc	r23, r19
 ccc:	84 1f       	adc	r24, r20
 cce:	95 1f       	adc	r25, r21
 cd0:	a0 1d       	adc	r26, r0
 cd2:	08 95       	ret

00000cd4 <__prologue_saves__>:
 cd4:	2f 92       	push	r2
 cd6:	3f 92       	push	r3
 cd8:	4f 92       	push	r4
 cda:	5f 92       	push	r5
 cdc:	6f 92       	push	r6
 cde:	7f 92       	push	r7
 ce0:	8f 92       	push	r8
 ce2:	9f 92       	push	r9
 ce4:	af 92       	push	r10
 ce6:	bf 92       	push	r11
 ce8:	cf 92       	push	r12
 cea:	df 92       	push	r13
 cec:	ef 92       	push	r14
 cee:	ff 92       	push	r15
 cf0:	0f 93       	push	r16
 cf2:	1f 93       	push	r17
 cf4:	cf 93       	push	r28
 cf6:	df 93       	push	r29
 cf8:	cd b7       	in	r28, 0x3d	; 61
 cfa:	de b7       	in	r29, 0x3e	; 62
 cfc:	ca 1b       	sub	r28, r26
 cfe:	db 0b       	sbc	r29, r27
 d00:	0f b6       	in	r0, 0x3f	; 63
 d02:	f8 94       	cli
 d04:	de bf       	out	0x3e, r29	; 62
 d06:	0f be       	out	0x3f, r0	; 63
 d08:	cd bf       	out	0x3d, r28	; 61
 d0a:	09 94       	ijmp

00000d0c <__epilogue_restores__>:
 d0c:	2a 88       	ldd	r2, Y+18	; 0x12
 d0e:	39 88       	ldd	r3, Y+17	; 0x11
 d10:	48 88       	ldd	r4, Y+16	; 0x10
 d12:	5f 84       	ldd	r5, Y+15	; 0x0f
 d14:	6e 84       	ldd	r6, Y+14	; 0x0e
 d16:	7d 84       	ldd	r7, Y+13	; 0x0d
 d18:	8c 84       	ldd	r8, Y+12	; 0x0c
 d1a:	9b 84       	ldd	r9, Y+11	; 0x0b
 d1c:	aa 84       	ldd	r10, Y+10	; 0x0a
 d1e:	b9 84       	ldd	r11, Y+9	; 0x09
 d20:	c8 84       	ldd	r12, Y+8	; 0x08
 d22:	df 80       	ldd	r13, Y+7	; 0x07
 d24:	ee 80       	ldd	r14, Y+6	; 0x06
 d26:	fd 80       	ldd	r15, Y+5	; 0x05
 d28:	0c 81       	ldd	r16, Y+4	; 0x04
 d2a:	1b 81       	ldd	r17, Y+3	; 0x03
 d2c:	aa 81       	ldd	r26, Y+2	; 0x02
 d2e:	b9 81       	ldd	r27, Y+1	; 0x01
 d30:	ce 0f       	add	r28, r30
 d32:	d1 1d       	adc	r29, r1
 d34:	0f b6       	in	r0, 0x3f	; 63
 d36:	f8 94       	cli
 d38:	de bf       	out	0x3e, r29	; 62
 d3a:	0f be       	out	0x3f, r0	; 63
 d3c:	cd bf       	out	0x3d, r28	; 61
 d3e:	ed 01       	movw	r28, r26
 d40:	08 95       	ret

00000d42 <_exit>:
 d42:	f8 94       	cli

00000d44 <__stop_program>:
 d44:	ff cf       	rjmp	.-2      	; 0xd44 <__stop_program>
