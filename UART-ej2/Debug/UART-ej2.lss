
UART-ej2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  00000c3c  00000cd0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c3c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800142  00800142  00000d12  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d12  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ee3  00000000  00000000  00000e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ef  00000000  00000000  00001d3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007f3  00000000  00000000  0000272a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00002f20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000557  00000000  00000000  000030e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000080d  00000000  00000000  00003637  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003e44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 a9 01 	jmp	0x352	; 0x352 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e3       	ldi	r30, 0x3C	; 60
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 34       	cpi	r26, 0x42	; 66
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e4       	ldi	r26, 0x42	; 66
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 35       	cpi	r26, 0x57	; 87
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 80 02 	call	0x500	; 0x500 <main>
  9e:	0c 94 1c 06 	jmp	0xc38	; 0xc38 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <PRESCALER_conf>:
			switch(X){
				case 'A':
					TCCR2A|=(mode<<COM2A0);
					break;
				case 'B':
					TCCR2B|=(mode<<COM2B0);
  a6:	81 30       	cpi	r24, 0x01	; 1
  a8:	91 05       	cpc	r25, r1
  aa:	61 f0       	breq	.+24     	; 0xc4 <PRESCALER_conf+0x1e>
  ac:	82 30       	cpi	r24, 0x02	; 2
  ae:	91 05       	cpc	r25, r1
  b0:	91 f0       	breq	.+36     	; 0xd6 <PRESCALER_conf+0x30>
  b2:	89 2b       	or	r24, r25
  b4:	c1 f4       	brne	.+48     	; 0xe6 <PRESCALER_conf+0x40>
  b6:	85 b5       	in	r24, 0x25	; 37
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	88 7f       	andi	r24, 0xF8	; 248
  bc:	68 2b       	or	r22, r24
  be:	79 2b       	or	r23, r25
  c0:	65 bd       	out	0x25, r22	; 37
  c2:	08 95       	ret
  c4:	e1 e8       	ldi	r30, 0x81	; 129
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	88 7f       	andi	r24, 0xF8	; 248
  ce:	68 2b       	or	r22, r24
  d0:	79 2b       	or	r23, r25
  d2:	60 83       	st	Z, r22
  d4:	08 95       	ret
  d6:	e1 eb       	ldi	r30, 0xB1	; 177
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	88 7f       	andi	r24, 0xF8	; 248
  e0:	68 2b       	or	r22, r24
  e2:	79 2b       	or	r23, r25
  e4:	60 83       	st	Z, r22
  e6:	08 95       	ret

000000e8 <TIMER_CTC_init>:
			- ICIEn: Habilitación por captura de entrada.
			- OCIEnA y OCIEnB: Habilitación de interrupciones por match de OCRnA y OCRnB respectivamente.
			- TOIEn: Habilitación de interrupciones por overflow.
*/
void TIMER_CTC_init(int TIMERx, char X, int T, int mode){
	switch(TIMERx){
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	91 05       	cpc	r25, r1
  ec:	a1 f1       	breq	.+104    	; 0x156 <TIMER_CTC_init+0x6e>
  ee:	82 30       	cpi	r24, 0x02	; 2
  f0:	91 05       	cpc	r25, r1
  f2:	09 f4       	brne	.+2      	; 0xf6 <TIMER_CTC_init+0xe>
  f4:	6d c0       	rjmp	.+218    	; 0x1d0 <TIMER_CTC_init+0xe8>
  f6:	89 2b       	or	r24, r25
  f8:	09 f0       	breq	.+2      	; 0xfc <TIMER_CTC_init+0x14>
  fa:	9e c0       	rjmp	.+316    	; 0x238 <TIMER_CTC_init+0x150>
		case 0:
			TCCR0B|=(1<<WGM02);
  fc:	85 b5       	in	r24, 0x25	; 37
  fe:	88 60       	ori	r24, 0x08	; 8
 100:	85 bd       	out	0x25, r24	; 37
			switch(X){
 102:	61 34       	cpi	r22, 0x41	; 65
 104:	19 f0       	breq	.+6      	; 0x10c <TIMER_CTC_init+0x24>
 106:	62 34       	cpi	r22, 0x42	; 66
 108:	a9 f0       	breq	.+42     	; 0x134 <TIMER_CTC_init+0x4c>
 10a:	08 95       	ret
				case 'A':
					TCCR0A|=(mode<<COM0A0);
 10c:	84 b5       	in	r24, 0x24	; 36
 10e:	00 24       	eor	r0, r0
 110:	36 95       	lsr	r19
 112:	27 95       	ror	r18
 114:	07 94       	ror	r0
 116:	36 95       	lsr	r19
 118:	27 95       	ror	r18
 11a:	07 94       	ror	r0
 11c:	32 2f       	mov	r19, r18
 11e:	20 2d       	mov	r18, r0
 120:	28 2b       	or	r18, r24
 122:	24 bd       	out	0x24, r18	; 36
					TIFR0&=~(1<<OCF0A);
 124:	a9 98       	cbi	0x15, 1	; 21
					TIMSK0|=(1<<OCIE0A);
 126:	ee e6       	ldi	r30, 0x6E	; 110
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	82 60       	ori	r24, 0x02	; 2
 12e:	80 83       	st	Z, r24
					OCR0A=T;
 130:	47 bd       	out	0x27, r20	; 39
					break;
 132:	08 95       	ret
				case 'B':
					TCCR0B|=(mode<<COM0B0);
 134:	85 b5       	in	r24, 0x25	; 37
 136:	22 95       	swap	r18
 138:	32 95       	swap	r19
 13a:	30 7f       	andi	r19, 0xF0	; 240
 13c:	32 27       	eor	r19, r18
 13e:	20 7f       	andi	r18, 0xF0	; 240
 140:	32 27       	eor	r19, r18
 142:	28 2b       	or	r18, r24
 144:	25 bd       	out	0x25, r18	; 37
					TIFR0&=~(1<<OCF0B);
 146:	aa 98       	cbi	0x15, 2	; 21
					TIMSK0|=(1<<OCIE0B);
 148:	ee e6       	ldi	r30, 0x6E	; 110
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	84 60       	ori	r24, 0x04	; 4
 150:	80 83       	st	Z, r24
					OCR0B=T;
 152:	48 bd       	out	0x28, r20	; 40
				break;
 154:	08 95       	ret
			}
			break;
		case 1:
			TCCR1B|=(1<<WGM12);
 156:	e1 e8       	ldi	r30, 0x81	; 129
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	88 60       	ori	r24, 0x08	; 8
 15e:	80 83       	st	Z, r24
			switch(X){
 160:	61 34       	cpi	r22, 0x41	; 65
 162:	19 f0       	breq	.+6      	; 0x16a <TIMER_CTC_init+0x82>
 164:	62 34       	cpi	r22, 0x42	; 66
 166:	e1 f0       	breq	.+56     	; 0x1a0 <TIMER_CTC_init+0xb8>
 168:	08 95       	ret
				case 'A':
					TCCR1A|=(mode<<COM1A0);
 16a:	e0 e8       	ldi	r30, 0x80	; 128
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	00 24       	eor	r0, r0
 172:	36 95       	lsr	r19
 174:	27 95       	ror	r18
 176:	07 94       	ror	r0
 178:	36 95       	lsr	r19
 17a:	27 95       	ror	r18
 17c:	07 94       	ror	r0
 17e:	32 2f       	mov	r19, r18
 180:	20 2d       	mov	r18, r0
 182:	28 2b       	or	r18, r24
 184:	20 83       	st	Z, r18
					TIFR1&=~(1<<OCF1A);
 186:	b1 98       	cbi	0x16, 1	; 22
					TIMSK1|=(1<<OCIE1A);
 188:	ef e6       	ldi	r30, 0x6F	; 111
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 81       	ld	r24, Z
 18e:	82 60       	ori	r24, 0x02	; 2
 190:	80 83       	st	Z, r24
					OCR1A=T;
 192:	84 2f       	mov	r24, r20
 194:	95 2f       	mov	r25, r21
 196:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 19a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
					break;
 19e:	08 95       	ret
				case 'B':
					TCCR1B|=(mode<<COM1B0);
 1a0:	e1 e8       	ldi	r30, 0x81	; 129
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	22 95       	swap	r18
 1a8:	32 95       	swap	r19
 1aa:	30 7f       	andi	r19, 0xF0	; 240
 1ac:	32 27       	eor	r19, r18
 1ae:	20 7f       	andi	r18, 0xF0	; 240
 1b0:	32 27       	eor	r19, r18
 1b2:	28 2b       	or	r18, r24
 1b4:	20 83       	st	Z, r18
					TIFR1&=~(1<<OCF1B);
 1b6:	b2 98       	cbi	0x16, 2	; 22
					TIMSK1|=(1<<OCIE1B);
 1b8:	ef e6       	ldi	r30, 0x6F	; 111
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	84 60       	ori	r24, 0x04	; 4
 1c0:	80 83       	st	Z, r24
					OCR1B=T;
 1c2:	84 2f       	mov	r24, r20
 1c4:	95 2f       	mov	r25, r21
 1c6:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1ca:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
					break;
 1ce:	08 95       	ret
			}
			break;
		case 2:
			TCCR2B|=(1<<WGM22);
 1d0:	e1 eb       	ldi	r30, 0xB1	; 177
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	88 60       	ori	r24, 0x08	; 8
 1d8:	80 83       	st	Z, r24
			switch(X){
 1da:	61 34       	cpi	r22, 0x41	; 65
 1dc:	19 f0       	breq	.+6      	; 0x1e4 <TIMER_CTC_init+0xfc>
 1de:	62 34       	cpi	r22, 0x42	; 66
 1e0:	c1 f0       	breq	.+48     	; 0x212 <TIMER_CTC_init+0x12a>
 1e2:	08 95       	ret
				case 'A':
					TCCR2A|=(mode<<COM2A0);
 1e4:	e0 eb       	ldi	r30, 0xB0	; 176
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	00 24       	eor	r0, r0
 1ec:	36 95       	lsr	r19
 1ee:	27 95       	ror	r18
 1f0:	07 94       	ror	r0
 1f2:	36 95       	lsr	r19
 1f4:	27 95       	ror	r18
 1f6:	07 94       	ror	r0
 1f8:	32 2f       	mov	r19, r18
 1fa:	20 2d       	mov	r18, r0
 1fc:	28 2b       	or	r18, r24
 1fe:	20 83       	st	Z, r18
					TIFR2&=~(1<<OCF2A);
 200:	b9 98       	cbi	0x17, 1	; 23
					TIMSK2|=(1<<OCIE2A);
 202:	e0 e7       	ldi	r30, 0x70	; 112
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	80 81       	ld	r24, Z
 208:	82 60       	ori	r24, 0x02	; 2
 20a:	80 83       	st	Z, r24
					OCR2A=T;
 20c:	40 93 b3 00 	sts	0x00B3, r20	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
					break;
 210:	08 95       	ret
				case 'B':
					TCCR2B|=(mode<<COM2B0);
 212:	e1 eb       	ldi	r30, 0xB1	; 177
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	22 95       	swap	r18
 21a:	32 95       	swap	r19
 21c:	30 7f       	andi	r19, 0xF0	; 240
 21e:	32 27       	eor	r19, r18
 220:	20 7f       	andi	r18, 0xF0	; 240
 222:	32 27       	eor	r19, r18
 224:	28 2b       	or	r18, r24
 226:	20 83       	st	Z, r18
					TIFR2&=~(1<<OCF2B);
 228:	ba 98       	cbi	0x17, 2	; 23
					TIMSK2|=(1<<OCIE2B);
 22a:	e0 e7       	ldi	r30, 0x70	; 112
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	84 60       	ori	r24, 0x04	; 4
 232:	80 83       	st	Z, r24
					OCR2B=T;
 234:	40 93 b4 00 	sts	0x00B4, r20	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 238:	08 95       	ret

0000023a <UART_init>:
		stdout = stdin = &uart_io;
--------------------------------------------------------------------------------------
*/

void UART_init(unsigned int ubrr){
	UBRR0=F_CPU/16/ubrr-1;
 23a:	9c 01       	movw	r18, r24
 23c:	40 e0       	ldi	r20, 0x00	; 0
 23e:	50 e0       	ldi	r21, 0x00	; 0
 240:	60 e4       	ldi	r22, 0x40	; 64
 242:	72 e4       	ldi	r23, 0x42	; 66
 244:	8f e0       	ldi	r24, 0x0F	; 15
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 c9 02 	call	0x592	; 0x592 <__divmodsi4>
 24c:	21 50       	subi	r18, 0x01	; 1
 24e:	31 09       	sbc	r19, r1
 250:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 254:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0A=0;
 258:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0B=(1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
 25c:	88 e9       	ldi	r24, 0x98	; 152
 25e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C=(1<<USBS0)|(3<<UCSZ00);
 262:	8e e0       	ldi	r24, 0x0E	; 14
 264:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 268:	08 95       	ret

0000026a <_putc>:
}

//	Función de TRANSMISIÓN

int _putc(char c, FILE *stream){
	while (!(UCSR0A & (1<<UDRE0)));
 26a:	e0 ec       	ldi	r30, 0xC0	; 192
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	90 81       	ld	r25, Z
 270:	95 ff       	sbrs	r25, 5
 272:	fd cf       	rjmp	.-6      	; 0x26e <_putc+0x4>
	UDR0=c;
 274:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	08 95       	ret

0000027e <_getc>:

//	Función de RECEPCIÓN

int _getc(FILE *stream){
	while (!(UCSR0A & (1<<RXC0)));
 27e:	e0 ec       	ldi	r30, 0xC0	; 192
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	80 81       	ld	r24, Z
 284:	88 23       	and	r24, r24
 286:	ec f7       	brge	.-6      	; 0x282 <_getc+0x4>
	return UDR0;
 288:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	08 95       	ret

00000290 <interprete>:
void interprete(void);

//------------INTERPRETE-----------------------
void interprete(void){
	int aux;
  switch (comando[0]) {
 290:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <comando>
 294:	80 35       	cpi	r24, 0x50	; 80
 296:	19 f0       	breq	.+6      	; 0x29e <interprete+0xe>
 298:	84 35       	cpi	r24, 0x54	; 84
 29a:	19 f1       	breq	.+70     	; 0x2e2 <interprete+0x52>
 29c:	55 c0       	rjmp	.+170    	; 0x348 <interprete+0xb8>
    case 'P':
	   if (comando[1]){
 29e:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <comando+0x1>
 2a2:	88 23       	and	r24, r24
 2a4:	c9 f0       	breq	.+50     	; 0x2d8 <interprete+0x48>
		   N=atoi(&comando[1]);
 2a6:	88 e4       	ldi	r24, 0x48	; 72
 2a8:	91 e0       	ldi	r25, 0x01	; 1
 2aa:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <atoi>
 2ae:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <N+0x1>
 2b2:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <N>
		   printf("P: %d", N);
 2b6:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <N>
 2ba:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <N+0x1>
 2be:	9f 93       	push	r25
 2c0:	8f 93       	push	r24
 2c2:	80 e1       	ldi	r24, 0x10	; 16
 2c4:	91 e0       	ldi	r25, 0x01	; 1
 2c6:	9f 93       	push	r25
 2c8:	8f 93       	push	r24
 2ca:	0e 94 0e 03 	call	0x61c	; 0x61c <printf>
 2ce:	0f 90       	pop	r0
 2d0:	0f 90       	pop	r0
 2d2:	0f 90       	pop	r0
 2d4:	0f 90       	pop	r0
 2d6:	08 95       	ret
	   } else {
		   printf(":ERR\n");
 2d8:	86 e1       	ldi	r24, 0x16	; 22
 2da:	91 e0       	ldi	r25, 0x01	; 1
 2dc:	0e 94 24 03 	call	0x648	; 0x648 <puts>
 2e0:	08 95       	ret
	   }
      break;
	  
    case 'T':
	  if (comando[1]){
 2e2:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <comando+0x1>
 2e6:	88 23       	and	r24, r24
 2e8:	51 f1       	breq	.+84     	; 0x33e <interprete+0xae>
		  periodo=atoi(&comando[1]);
 2ea:	88 e4       	ldi	r24, 0x48	; 72
 2ec:	91 e0       	ldi	r25, 0x01	; 1
 2ee:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <atoi>
 2f2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 2f6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		  OCR1A=periodo*6250;
 2fa:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 2fe:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 302:	2a e6       	ldi	r18, 0x6A	; 106
 304:	38 e1       	ldi	r19, 0x18	; 24
 306:	42 9f       	mul	r20, r18
 308:	c0 01       	movw	r24, r0
 30a:	43 9f       	mul	r20, r19
 30c:	90 0d       	add	r25, r0
 30e:	52 9f       	mul	r21, r18
 310:	90 0d       	add	r25, r0
 312:	11 24       	eor	r1, r1
 314:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 318:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		  printf("T: %d\n", periodo);
 31c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 320:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 324:	9f 93       	push	r25
 326:	8f 93       	push	r24
 328:	8b e1       	ldi	r24, 0x1B	; 27
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	9f 93       	push	r25
 32e:	8f 93       	push	r24
 330:	0e 94 0e 03 	call	0x61c	; 0x61c <printf>
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	08 95       	ret
	  } else {
		  printf(":ERR\n");
 33e:	86 e1       	ldi	r24, 0x16	; 22
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	0e 94 24 03 	call	0x648	; 0x648 <puts>
 346:	08 95       	ret
	  }
      break;
	
   
    default:
      printf(":ERR\n");
 348:	86 e1       	ldi	r24, 0x16	; 22
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	0e 94 24 03 	call	0x648	; 0x648 <puts>
 350:	08 95       	ret

00000352 <__vector_18>:
      break;
  }
}
//----------------------------------------------------------------------------
//    Rutina de servicio de interrupción por recepción de datos en UART
ISR (USART_RX_vect){
 352:	1f 92       	push	r1
 354:	0f 92       	push	r0
 356:	0f b6       	in	r0, 0x3f	; 63
 358:	0f 92       	push	r0
 35a:	11 24       	eor	r1, r1
 35c:	2f 93       	push	r18
 35e:	3f 93       	push	r19
 360:	4f 93       	push	r20
 362:	5f 93       	push	r21
 364:	6f 93       	push	r22
 366:	7f 93       	push	r23
 368:	8f 93       	push	r24
 36a:	9f 93       	push	r25
 36c:	af 93       	push	r26
 36e:	bf 93       	push	r27
 370:	ef 93       	push	r30
 372:	ff 93       	push	r31
  char dato=getc(); // char dato=getc(&uart_io); (¿?)
 374:	82 e0       	ldi	r24, 0x02	; 2
 376:	91 e0       	ldi	r25, 0x01	; 1
 378:	0e 94 3f 01 	call	0x27e	; 0x27e <_getc>
  switch (dato) {
 37c:	9c 01       	movw	r18, r24
 37e:	33 27       	eor	r19, r19
 380:	2d 30       	cpi	r18, 0x0D	; 13
 382:	31 05       	cpc	r19, r1
 384:	31 f0       	breq	.+12     	; 0x392 <__vector_18+0x40>
 386:	2a 33       	cpi	r18, 0x3A	; 58
 388:	31 05       	cpc	r19, r1
 38a:	61 f4       	brne	.+24     	; 0x3a4 <__vector_18+0x52>
    case ':':
      indcom=0;
 38c:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <indcom>
      break;
 390:	13 c0       	rjmp	.+38     	; 0x3b8 <__vector_18+0x66>
    case '\r':
      comando[indcom]=0;
 392:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <indcom>
 396:	f0 e0       	ldi	r31, 0x00	; 0
 398:	e9 5b       	subi	r30, 0xB9	; 185
 39a:	fe 4f       	sbci	r31, 0xFE	; 254
 39c:	10 82       	st	Z, r1
      interprete();
 39e:	0e 94 48 01 	call	0x290	; 0x290 <interprete>
      break;
 3a2:	0a c0       	rjmp	.+20     	; 0x3b8 <__vector_18+0x66>
    default:
      comando[indcom++]=dato;
 3a4:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <indcom>
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	9e 0f       	add	r25, r30
 3ac:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <indcom>
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	e9 5b       	subi	r30, 0xB9	; 185
 3b4:	fe 4f       	sbci	r31, 0xFE	; 254
 3b6:	80 83       	st	Z, r24
      break;
  }
}
 3b8:	ff 91       	pop	r31
 3ba:	ef 91       	pop	r30
 3bc:	bf 91       	pop	r27
 3be:	af 91       	pop	r26
 3c0:	9f 91       	pop	r25
 3c2:	8f 91       	pop	r24
 3c4:	7f 91       	pop	r23
 3c6:	6f 91       	pop	r22
 3c8:	5f 91       	pop	r21
 3ca:	4f 91       	pop	r20
 3cc:	3f 91       	pop	r19
 3ce:	2f 91       	pop	r18
 3d0:	0f 90       	pop	r0
 3d2:	0f be       	out	0x3f, r0	; 63
 3d4:	0f 90       	pop	r0
 3d6:	1f 90       	pop	r1
 3d8:	18 95       	reti

000003da <__vector_11>:
//------------------------------------------------------------------------------------
//	Rutina de interrupción del timer
ISR (TIMER1_COMPA_vect){
 3da:	1f 92       	push	r1
 3dc:	0f 92       	push	r0
 3de:	0f b6       	in	r0, 0x3f	; 63
 3e0:	0f 92       	push	r0
 3e2:	11 24       	eor	r1, r1
 3e4:	2f 93       	push	r18
 3e6:	3f 93       	push	r19
 3e8:	4f 93       	push	r20
 3ea:	5f 93       	push	r21
 3ec:	6f 93       	push	r22
 3ee:	7f 93       	push	r23
 3f0:	8f 93       	push	r24
 3f2:	9f 93       	push	r25
 3f4:	af 93       	push	r26
 3f6:	bf 93       	push	r27
 3f8:	ef 93       	push	r30
 3fa:	ff 93       	push	r31
	if (Na!=N){
 3fc:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <__data_end>
 400:	30 91 43 01 	lds	r19, 0x0143	; 0x800143 <__data_end+0x1>
 404:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <N>
 408:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <N+0x1>
 40c:	28 17       	cp	r18, r24
 40e:	39 07       	cpc	r19, r25
 410:	09 f4       	brne	.+2      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 412:	59 c0       	rjmp	.+178    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
		if (N<Na){
 414:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <N>
 418:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <N+0x1>
 41c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 420:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 424:	28 17       	cp	r18, r24
 426:	39 07       	cpc	r19, r25
 428:	5c f4       	brge	.+22     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
				PORTB&=~(1<<PORTB3);
 42a:	2b 98       	cbi	0x05, 3	; 5
				Na--;
 42c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 430:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 434:	01 97       	sbiw	r24, 0x01	; 1
 436:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
 43a:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
 43e:	25 c0       	rjmp	.+74     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
			} else if (N>Na){
 440:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <N>
 444:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <N+0x1>
 448:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 44c:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 450:	82 17       	cp	r24, r18
 452:	93 07       	cpc	r25, r19
 454:	5c f4       	brge	.+22     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
				PORTB|=(1<<PORTB3);
 456:	2b 9a       	sbi	0x05, 3	; 5
				Na++;
 458:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 45c:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 460:	01 96       	adiw	r24, 0x01	; 1
 462:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
 466:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
 46a:	0f c0       	rjmp	.+30     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
			} else if (N==Na){
 46c:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <N>
 470:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <N+0x1>
 474:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 478:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 47c:	28 17       	cp	r18, r24
 47e:	39 07       	cpc	r19, r25
 480:	21 f4       	brne	.+8      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 482:	85 e0       	ldi	r24, 0x05	; 5
 484:	8a 95       	dec	r24
 486:	f1 f7       	brne	.-4      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 488:	00 00       	nop
				_delay_us(1);
		}
		PORTB^=(1<<PORTB5);
 48a:	95 b1       	in	r25, 0x05	; 5
 48c:	80 e2       	ldi	r24, 0x20	; 32
 48e:	89 27       	eor	r24, r25
 490:	85 b9       	out	0x05, r24	; 5
		TIFR1&=~(1<<OCF1A);
 492:	b1 98       	cbi	0x16, 1	; 22
		printf("Pos. actual=%d Pos. deseada=%d\n", Na, N);
 494:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <N>
 498:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <N+0x1>
 49c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 4a0:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 4a4:	3f 93       	push	r19
 4a6:	2f 93       	push	r18
 4a8:	9f 93       	push	r25
 4aa:	8f 93       	push	r24
 4ac:	82 e2       	ldi	r24, 0x22	; 34
 4ae:	91 e0       	ldi	r25, 0x01	; 1
 4b0:	9f 93       	push	r25
 4b2:	8f 93       	push	r24
 4b4:	0e 94 0e 03 	call	0x61c	; 0x61c <printf>
 4b8:	0f 90       	pop	r0
 4ba:	0f 90       	pop	r0
 4bc:	0f 90       	pop	r0
 4be:	0f 90       	pop	r0
 4c0:	0f 90       	pop	r0
 4c2:	0f 90       	pop	r0
 4c4:	0c c0       	rjmp	.+24     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
	} else if (N==Na){
 4c6:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <N>
 4ca:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <N+0x1>
 4ce:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 4d2:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 4d6:	28 17       	cp	r18, r24
 4d8:	39 07       	cpc	r19, r25
 4da:	09 f4       	brne	.+2      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
		PORTB&=~(1<<PORTB5);
 4dc:	2d 98       	cbi	0x05, 5	; 5
	}
}
 4de:	ff 91       	pop	r31
 4e0:	ef 91       	pop	r30
 4e2:	bf 91       	pop	r27
 4e4:	af 91       	pop	r26
 4e6:	9f 91       	pop	r25
 4e8:	8f 91       	pop	r24
 4ea:	7f 91       	pop	r23
 4ec:	6f 91       	pop	r22
 4ee:	5f 91       	pop	r21
 4f0:	4f 91       	pop	r20
 4f2:	3f 91       	pop	r19
 4f4:	2f 91       	pop	r18
 4f6:	0f 90       	pop	r0
 4f8:	0f be       	out	0x3f, r0	; 63
 4fa:	0f 90       	pop	r0
 4fc:	1f 90       	pop	r1
 4fe:	18 95       	reti

00000500 <main>:

//----------------------RUTINA PRINCIPAL-----------------------------
int main(void){
	
  DDRB=(1<<DDB5);
 500:	80 e2       	ldi	r24, 0x20	; 32
 502:	84 b9       	out	0x04, r24	; 4
  
  UART_init(brate0);
 504:	80 e8       	ldi	r24, 0x80	; 128
 506:	95 e2       	ldi	r25, 0x25	; 37
 508:	0e 94 1d 01 	call	0x23a	; 0x23a <UART_init>
  stdout = stdin = &uart_io;
 50c:	e1 e5       	ldi	r30, 0x51	; 81
 50e:	f1 e0       	ldi	r31, 0x01	; 1
 510:	82 e0       	ldi	r24, 0x02	; 2
 512:	91 e0       	ldi	r25, 0x01	; 1
 514:	91 83       	std	Z+1, r25	; 0x01
 516:	80 83       	st	Z, r24
 518:	93 83       	std	Z+3, r25	; 0x03
 51a:	82 83       	std	Z+2, r24	; 0x02
  indcom=0;
 51c:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <indcom>
  
  PRESCALER_conf(1,4);
 520:	64 e0       	ldi	r22, 0x04	; 4
 522:	70 e0       	ldi	r23, 0x00	; 0
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	0e 94 53 00 	call	0xa6	; 0xa6 <PRESCALER_conf>
  TIMER_CTC_init(1,'A',periodo,0);
 52c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 530:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 534:	20 e0       	ldi	r18, 0x00	; 0
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	61 e4       	ldi	r22, 0x41	; 65
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 74 00 	call	0xe8	; 0xe8 <TIMER_CTC_init>
  
  sei();
 542:	78 94       	sei
 544:	85 e0       	ldi	r24, 0x05	; 5
 546:	8a 95       	dec	r24
 548:	f1 f7       	brne	.-4      	; 0x546 <main+0x46>
 54a:	00 00       	nop
 54c:	fb cf       	rjmp	.-10     	; 0x544 <main+0x44>

0000054e <__udivmodsi4>:
 54e:	a1 e2       	ldi	r26, 0x21	; 33
 550:	1a 2e       	mov	r1, r26
 552:	aa 1b       	sub	r26, r26
 554:	bb 1b       	sub	r27, r27
 556:	fd 01       	movw	r30, r26
 558:	0d c0       	rjmp	.+26     	; 0x574 <__udivmodsi4_ep>

0000055a <__udivmodsi4_loop>:
 55a:	aa 1f       	adc	r26, r26
 55c:	bb 1f       	adc	r27, r27
 55e:	ee 1f       	adc	r30, r30
 560:	ff 1f       	adc	r31, r31
 562:	a2 17       	cp	r26, r18
 564:	b3 07       	cpc	r27, r19
 566:	e4 07       	cpc	r30, r20
 568:	f5 07       	cpc	r31, r21
 56a:	20 f0       	brcs	.+8      	; 0x574 <__udivmodsi4_ep>
 56c:	a2 1b       	sub	r26, r18
 56e:	b3 0b       	sbc	r27, r19
 570:	e4 0b       	sbc	r30, r20
 572:	f5 0b       	sbc	r31, r21

00000574 <__udivmodsi4_ep>:
 574:	66 1f       	adc	r22, r22
 576:	77 1f       	adc	r23, r23
 578:	88 1f       	adc	r24, r24
 57a:	99 1f       	adc	r25, r25
 57c:	1a 94       	dec	r1
 57e:	69 f7       	brne	.-38     	; 0x55a <__udivmodsi4_loop>
 580:	60 95       	com	r22
 582:	70 95       	com	r23
 584:	80 95       	com	r24
 586:	90 95       	com	r25
 588:	9b 01       	movw	r18, r22
 58a:	ac 01       	movw	r20, r24
 58c:	bd 01       	movw	r22, r26
 58e:	cf 01       	movw	r24, r30
 590:	08 95       	ret

00000592 <__divmodsi4>:
 592:	05 2e       	mov	r0, r21
 594:	97 fb       	bst	r25, 7
 596:	1e f4       	brtc	.+6      	; 0x59e <__divmodsi4+0xc>
 598:	00 94       	com	r0
 59a:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__negsi2>
 59e:	57 fd       	sbrc	r21, 7
 5a0:	07 d0       	rcall	.+14     	; 0x5b0 <__divmodsi4_neg2>
 5a2:	0e 94 a7 02 	call	0x54e	; 0x54e <__udivmodsi4>
 5a6:	07 fc       	sbrc	r0, 7
 5a8:	03 d0       	rcall	.+6      	; 0x5b0 <__divmodsi4_neg2>
 5aa:	4e f4       	brtc	.+18     	; 0x5be <__divmodsi4_exit>
 5ac:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__negsi2>

000005b0 <__divmodsi4_neg2>:
 5b0:	50 95       	com	r21
 5b2:	40 95       	com	r20
 5b4:	30 95       	com	r19
 5b6:	21 95       	neg	r18
 5b8:	3f 4f       	sbci	r19, 0xFF	; 255
 5ba:	4f 4f       	sbci	r20, 0xFF	; 255
 5bc:	5f 4f       	sbci	r21, 0xFF	; 255

000005be <__divmodsi4_exit>:
 5be:	08 95       	ret

000005c0 <__negsi2>:
 5c0:	90 95       	com	r25
 5c2:	80 95       	com	r24
 5c4:	70 95       	com	r23
 5c6:	61 95       	neg	r22
 5c8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ca:	8f 4f       	sbci	r24, 0xFF	; 255
 5cc:	9f 4f       	sbci	r25, 0xFF	; 255
 5ce:	08 95       	ret

000005d0 <atoi>:
 5d0:	fc 01       	movw	r30, r24
 5d2:	88 27       	eor	r24, r24
 5d4:	99 27       	eor	r25, r25
 5d6:	e8 94       	clt
 5d8:	21 91       	ld	r18, Z+
 5da:	20 32       	cpi	r18, 0x20	; 32
 5dc:	e9 f3       	breq	.-6      	; 0x5d8 <atoi+0x8>
 5de:	29 30       	cpi	r18, 0x09	; 9
 5e0:	10 f0       	brcs	.+4      	; 0x5e6 <atoi+0x16>
 5e2:	2e 30       	cpi	r18, 0x0E	; 14
 5e4:	c8 f3       	brcs	.-14     	; 0x5d8 <atoi+0x8>
 5e6:	2b 32       	cpi	r18, 0x2B	; 43
 5e8:	41 f0       	breq	.+16     	; 0x5fa <atoi+0x2a>
 5ea:	2d 32       	cpi	r18, 0x2D	; 45
 5ec:	39 f4       	brne	.+14     	; 0x5fc <atoi+0x2c>
 5ee:	68 94       	set
 5f0:	04 c0       	rjmp	.+8      	; 0x5fa <atoi+0x2a>
 5f2:	0e 94 06 03 	call	0x60c	; 0x60c <__mulhi_const_10>
 5f6:	82 0f       	add	r24, r18
 5f8:	91 1d       	adc	r25, r1
 5fa:	21 91       	ld	r18, Z+
 5fc:	20 53       	subi	r18, 0x30	; 48
 5fe:	2a 30       	cpi	r18, 0x0A	; 10
 600:	c0 f3       	brcs	.-16     	; 0x5f2 <atoi+0x22>
 602:	1e f4       	brtc	.+6      	; 0x60a <atoi+0x3a>
 604:	90 95       	com	r25
 606:	81 95       	neg	r24
 608:	9f 4f       	sbci	r25, 0xFF	; 255
 60a:	08 95       	ret

0000060c <__mulhi_const_10>:
 60c:	7a e0       	ldi	r23, 0x0A	; 10
 60e:	97 9f       	mul	r25, r23
 610:	90 2d       	mov	r25, r0
 612:	87 9f       	mul	r24, r23
 614:	80 2d       	mov	r24, r0
 616:	91 0d       	add	r25, r1
 618:	11 24       	eor	r1, r1
 61a:	08 95       	ret

0000061c <printf>:
 61c:	a0 e0       	ldi	r26, 0x00	; 0
 61e:	b0 e0       	ldi	r27, 0x00	; 0
 620:	e4 e1       	ldi	r30, 0x14	; 20
 622:	f3 e0       	ldi	r31, 0x03	; 3
 624:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__prologue_saves__+0x20>
 628:	ae 01       	movw	r20, r28
 62a:	4b 5f       	subi	r20, 0xFB	; 251
 62c:	5f 4f       	sbci	r21, 0xFF	; 255
 62e:	fa 01       	movw	r30, r20
 630:	61 91       	ld	r22, Z+
 632:	71 91       	ld	r23, Z+
 634:	af 01       	movw	r20, r30
 636:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <__iob+0x2>
 63a:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <__iob+0x3>
 63e:	0e 94 54 03 	call	0x6a8	; 0x6a8 <vfprintf>
 642:	e2 e0       	ldi	r30, 0x02	; 2
 644:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__epilogue_restores__+0x20>

00000648 <puts>:
 648:	0f 93       	push	r16
 64a:	1f 93       	push	r17
 64c:	cf 93       	push	r28
 64e:	df 93       	push	r29
 650:	e0 91 53 01 	lds	r30, 0x0153	; 0x800153 <__iob+0x2>
 654:	f0 91 54 01 	lds	r31, 0x0154	; 0x800154 <__iob+0x3>
 658:	23 81       	ldd	r18, Z+3	; 0x03
 65a:	21 ff       	sbrs	r18, 1
 65c:	1b c0       	rjmp	.+54     	; 0x694 <puts+0x4c>
 65e:	8c 01       	movw	r16, r24
 660:	d0 e0       	ldi	r29, 0x00	; 0
 662:	c0 e0       	ldi	r28, 0x00	; 0
 664:	f8 01       	movw	r30, r16
 666:	81 91       	ld	r24, Z+
 668:	8f 01       	movw	r16, r30
 66a:	60 91 53 01 	lds	r22, 0x0153	; 0x800153 <__iob+0x2>
 66e:	70 91 54 01 	lds	r23, 0x0154	; 0x800154 <__iob+0x3>
 672:	db 01       	movw	r26, r22
 674:	18 96       	adiw	r26, 0x08	; 8
 676:	ed 91       	ld	r30, X+
 678:	fc 91       	ld	r31, X
 67a:	19 97       	sbiw	r26, 0x09	; 9
 67c:	88 23       	and	r24, r24
 67e:	31 f0       	breq	.+12     	; 0x68c <puts+0x44>
 680:	09 95       	icall
 682:	89 2b       	or	r24, r25
 684:	79 f3       	breq	.-34     	; 0x664 <puts+0x1c>
 686:	df ef       	ldi	r29, 0xFF	; 255
 688:	cf ef       	ldi	r28, 0xFF	; 255
 68a:	ec cf       	rjmp	.-40     	; 0x664 <puts+0x1c>
 68c:	8a e0       	ldi	r24, 0x0A	; 10
 68e:	09 95       	icall
 690:	89 2b       	or	r24, r25
 692:	19 f0       	breq	.+6      	; 0x69a <puts+0x52>
 694:	8f ef       	ldi	r24, 0xFF	; 255
 696:	9f ef       	ldi	r25, 0xFF	; 255
 698:	02 c0       	rjmp	.+4      	; 0x69e <puts+0x56>
 69a:	8d 2f       	mov	r24, r29
 69c:	9c 2f       	mov	r25, r28
 69e:	df 91       	pop	r29
 6a0:	cf 91       	pop	r28
 6a2:	1f 91       	pop	r17
 6a4:	0f 91       	pop	r16
 6a6:	08 95       	ret

000006a8 <vfprintf>:
 6a8:	ab e0       	ldi	r26, 0x0B	; 11
 6aa:	b0 e0       	ldi	r27, 0x00	; 0
 6ac:	ea e5       	ldi	r30, 0x5A	; 90
 6ae:	f3 e0       	ldi	r31, 0x03	; 3
 6b0:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__prologue_saves__>
 6b4:	6c 01       	movw	r12, r24
 6b6:	7b 01       	movw	r14, r22
 6b8:	8a 01       	movw	r16, r20
 6ba:	fc 01       	movw	r30, r24
 6bc:	17 82       	std	Z+7, r1	; 0x07
 6be:	16 82       	std	Z+6, r1	; 0x06
 6c0:	83 81       	ldd	r24, Z+3	; 0x03
 6c2:	81 ff       	sbrs	r24, 1
 6c4:	cc c1       	rjmp	.+920    	; 0xa5e <__stack+0x15f>
 6c6:	ce 01       	movw	r24, r28
 6c8:	01 96       	adiw	r24, 0x01	; 1
 6ca:	3c 01       	movw	r6, r24
 6cc:	f6 01       	movw	r30, r12
 6ce:	93 81       	ldd	r25, Z+3	; 0x03
 6d0:	f7 01       	movw	r30, r14
 6d2:	93 fd       	sbrc	r25, 3
 6d4:	85 91       	lpm	r24, Z+
 6d6:	93 ff       	sbrs	r25, 3
 6d8:	81 91       	ld	r24, Z+
 6da:	7f 01       	movw	r14, r30
 6dc:	88 23       	and	r24, r24
 6de:	09 f4       	brne	.+2      	; 0x6e2 <vfprintf+0x3a>
 6e0:	ba c1       	rjmp	.+884    	; 0xa56 <__stack+0x157>
 6e2:	85 32       	cpi	r24, 0x25	; 37
 6e4:	39 f4       	brne	.+14     	; 0x6f4 <vfprintf+0x4c>
 6e6:	93 fd       	sbrc	r25, 3
 6e8:	85 91       	lpm	r24, Z+
 6ea:	93 ff       	sbrs	r25, 3
 6ec:	81 91       	ld	r24, Z+
 6ee:	7f 01       	movw	r14, r30
 6f0:	85 32       	cpi	r24, 0x25	; 37
 6f2:	29 f4       	brne	.+10     	; 0x6fe <vfprintf+0x56>
 6f4:	b6 01       	movw	r22, r12
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 6fc:	e7 cf       	rjmp	.-50     	; 0x6cc <vfprintf+0x24>
 6fe:	91 2c       	mov	r9, r1
 700:	21 2c       	mov	r2, r1
 702:	31 2c       	mov	r3, r1
 704:	ff e1       	ldi	r31, 0x1F	; 31
 706:	f3 15       	cp	r31, r3
 708:	d8 f0       	brcs	.+54     	; 0x740 <vfprintf+0x98>
 70a:	8b 32       	cpi	r24, 0x2B	; 43
 70c:	79 f0       	breq	.+30     	; 0x72c <vfprintf+0x84>
 70e:	38 f4       	brcc	.+14     	; 0x71e <vfprintf+0x76>
 710:	80 32       	cpi	r24, 0x20	; 32
 712:	79 f0       	breq	.+30     	; 0x732 <vfprintf+0x8a>
 714:	83 32       	cpi	r24, 0x23	; 35
 716:	a1 f4       	brne	.+40     	; 0x740 <vfprintf+0x98>
 718:	23 2d       	mov	r18, r3
 71a:	20 61       	ori	r18, 0x10	; 16
 71c:	1d c0       	rjmp	.+58     	; 0x758 <vfprintf+0xb0>
 71e:	8d 32       	cpi	r24, 0x2D	; 45
 720:	61 f0       	breq	.+24     	; 0x73a <vfprintf+0x92>
 722:	80 33       	cpi	r24, 0x30	; 48
 724:	69 f4       	brne	.+26     	; 0x740 <vfprintf+0x98>
 726:	23 2d       	mov	r18, r3
 728:	21 60       	ori	r18, 0x01	; 1
 72a:	16 c0       	rjmp	.+44     	; 0x758 <vfprintf+0xb0>
 72c:	83 2d       	mov	r24, r3
 72e:	82 60       	ori	r24, 0x02	; 2
 730:	38 2e       	mov	r3, r24
 732:	e3 2d       	mov	r30, r3
 734:	e4 60       	ori	r30, 0x04	; 4
 736:	3e 2e       	mov	r3, r30
 738:	2a c0       	rjmp	.+84     	; 0x78e <vfprintf+0xe6>
 73a:	f3 2d       	mov	r31, r3
 73c:	f8 60       	ori	r31, 0x08	; 8
 73e:	1d c0       	rjmp	.+58     	; 0x77a <vfprintf+0xd2>
 740:	37 fc       	sbrc	r3, 7
 742:	2d c0       	rjmp	.+90     	; 0x79e <vfprintf+0xf6>
 744:	20 ed       	ldi	r18, 0xD0	; 208
 746:	28 0f       	add	r18, r24
 748:	2a 30       	cpi	r18, 0x0A	; 10
 74a:	40 f0       	brcs	.+16     	; 0x75c <vfprintf+0xb4>
 74c:	8e 32       	cpi	r24, 0x2E	; 46
 74e:	b9 f4       	brne	.+46     	; 0x77e <vfprintf+0xd6>
 750:	36 fc       	sbrc	r3, 6
 752:	81 c1       	rjmp	.+770    	; 0xa56 <__stack+0x157>
 754:	23 2d       	mov	r18, r3
 756:	20 64       	ori	r18, 0x40	; 64
 758:	32 2e       	mov	r3, r18
 75a:	19 c0       	rjmp	.+50     	; 0x78e <vfprintf+0xe6>
 75c:	36 fe       	sbrs	r3, 6
 75e:	06 c0       	rjmp	.+12     	; 0x76c <vfprintf+0xc4>
 760:	8a e0       	ldi	r24, 0x0A	; 10
 762:	98 9e       	mul	r9, r24
 764:	20 0d       	add	r18, r0
 766:	11 24       	eor	r1, r1
 768:	92 2e       	mov	r9, r18
 76a:	11 c0       	rjmp	.+34     	; 0x78e <vfprintf+0xe6>
 76c:	ea e0       	ldi	r30, 0x0A	; 10
 76e:	2e 9e       	mul	r2, r30
 770:	20 0d       	add	r18, r0
 772:	11 24       	eor	r1, r1
 774:	22 2e       	mov	r2, r18
 776:	f3 2d       	mov	r31, r3
 778:	f0 62       	ori	r31, 0x20	; 32
 77a:	3f 2e       	mov	r3, r31
 77c:	08 c0       	rjmp	.+16     	; 0x78e <vfprintf+0xe6>
 77e:	8c 36       	cpi	r24, 0x6C	; 108
 780:	21 f4       	brne	.+8      	; 0x78a <vfprintf+0xe2>
 782:	83 2d       	mov	r24, r3
 784:	80 68       	ori	r24, 0x80	; 128
 786:	38 2e       	mov	r3, r24
 788:	02 c0       	rjmp	.+4      	; 0x78e <vfprintf+0xe6>
 78a:	88 36       	cpi	r24, 0x68	; 104
 78c:	41 f4       	brne	.+16     	; 0x79e <vfprintf+0xf6>
 78e:	f7 01       	movw	r30, r14
 790:	93 fd       	sbrc	r25, 3
 792:	85 91       	lpm	r24, Z+
 794:	93 ff       	sbrs	r25, 3
 796:	81 91       	ld	r24, Z+
 798:	7f 01       	movw	r14, r30
 79a:	81 11       	cpse	r24, r1
 79c:	b3 cf       	rjmp	.-154    	; 0x704 <vfprintf+0x5c>
 79e:	98 2f       	mov	r25, r24
 7a0:	9f 7d       	andi	r25, 0xDF	; 223
 7a2:	95 54       	subi	r25, 0x45	; 69
 7a4:	93 30       	cpi	r25, 0x03	; 3
 7a6:	28 f4       	brcc	.+10     	; 0x7b2 <vfprintf+0x10a>
 7a8:	0c 5f       	subi	r16, 0xFC	; 252
 7aa:	1f 4f       	sbci	r17, 0xFF	; 255
 7ac:	9f e3       	ldi	r25, 0x3F	; 63
 7ae:	99 83       	std	Y+1, r25	; 0x01
 7b0:	0d c0       	rjmp	.+26     	; 0x7cc <vfprintf+0x124>
 7b2:	83 36       	cpi	r24, 0x63	; 99
 7b4:	31 f0       	breq	.+12     	; 0x7c2 <vfprintf+0x11a>
 7b6:	83 37       	cpi	r24, 0x73	; 115
 7b8:	71 f0       	breq	.+28     	; 0x7d6 <vfprintf+0x12e>
 7ba:	83 35       	cpi	r24, 0x53	; 83
 7bc:	09 f0       	breq	.+2      	; 0x7c0 <vfprintf+0x118>
 7be:	59 c0       	rjmp	.+178    	; 0x872 <vfprintf+0x1ca>
 7c0:	21 c0       	rjmp	.+66     	; 0x804 <vfprintf+0x15c>
 7c2:	f8 01       	movw	r30, r16
 7c4:	80 81       	ld	r24, Z
 7c6:	89 83       	std	Y+1, r24	; 0x01
 7c8:	0e 5f       	subi	r16, 0xFE	; 254
 7ca:	1f 4f       	sbci	r17, 0xFF	; 255
 7cc:	88 24       	eor	r8, r8
 7ce:	83 94       	inc	r8
 7d0:	91 2c       	mov	r9, r1
 7d2:	53 01       	movw	r10, r6
 7d4:	13 c0       	rjmp	.+38     	; 0x7fc <vfprintf+0x154>
 7d6:	28 01       	movw	r4, r16
 7d8:	f2 e0       	ldi	r31, 0x02	; 2
 7da:	4f 0e       	add	r4, r31
 7dc:	51 1c       	adc	r5, r1
 7de:	f8 01       	movw	r30, r16
 7e0:	a0 80       	ld	r10, Z
 7e2:	b1 80       	ldd	r11, Z+1	; 0x01
 7e4:	36 fe       	sbrs	r3, 6
 7e6:	03 c0       	rjmp	.+6      	; 0x7ee <vfprintf+0x146>
 7e8:	69 2d       	mov	r22, r9
 7ea:	70 e0       	ldi	r23, 0x00	; 0
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <vfprintf+0x14a>
 7ee:	6f ef       	ldi	r22, 0xFF	; 255
 7f0:	7f ef       	ldi	r23, 0xFF	; 255
 7f2:	c5 01       	movw	r24, r10
 7f4:	0e 94 40 05 	call	0xa80	; 0xa80 <strnlen>
 7f8:	4c 01       	movw	r8, r24
 7fa:	82 01       	movw	r16, r4
 7fc:	f3 2d       	mov	r31, r3
 7fe:	ff 77       	andi	r31, 0x7F	; 127
 800:	3f 2e       	mov	r3, r31
 802:	16 c0       	rjmp	.+44     	; 0x830 <vfprintf+0x188>
 804:	28 01       	movw	r4, r16
 806:	22 e0       	ldi	r18, 0x02	; 2
 808:	42 0e       	add	r4, r18
 80a:	51 1c       	adc	r5, r1
 80c:	f8 01       	movw	r30, r16
 80e:	a0 80       	ld	r10, Z
 810:	b1 80       	ldd	r11, Z+1	; 0x01
 812:	36 fe       	sbrs	r3, 6
 814:	03 c0       	rjmp	.+6      	; 0x81c <vfprintf+0x174>
 816:	69 2d       	mov	r22, r9
 818:	70 e0       	ldi	r23, 0x00	; 0
 81a:	02 c0       	rjmp	.+4      	; 0x820 <vfprintf+0x178>
 81c:	6f ef       	ldi	r22, 0xFF	; 255
 81e:	7f ef       	ldi	r23, 0xFF	; 255
 820:	c5 01       	movw	r24, r10
 822:	0e 94 35 05 	call	0xa6a	; 0xa6a <strnlen_P>
 826:	4c 01       	movw	r8, r24
 828:	f3 2d       	mov	r31, r3
 82a:	f0 68       	ori	r31, 0x80	; 128
 82c:	3f 2e       	mov	r3, r31
 82e:	82 01       	movw	r16, r4
 830:	33 fc       	sbrc	r3, 3
 832:	1b c0       	rjmp	.+54     	; 0x86a <vfprintf+0x1c2>
 834:	82 2d       	mov	r24, r2
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	88 16       	cp	r8, r24
 83a:	99 06       	cpc	r9, r25
 83c:	b0 f4       	brcc	.+44     	; 0x86a <vfprintf+0x1c2>
 83e:	b6 01       	movw	r22, r12
 840:	80 e2       	ldi	r24, 0x20	; 32
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 848:	2a 94       	dec	r2
 84a:	f4 cf       	rjmp	.-24     	; 0x834 <vfprintf+0x18c>
 84c:	f5 01       	movw	r30, r10
 84e:	37 fc       	sbrc	r3, 7
 850:	85 91       	lpm	r24, Z+
 852:	37 fe       	sbrs	r3, 7
 854:	81 91       	ld	r24, Z+
 856:	5f 01       	movw	r10, r30
 858:	b6 01       	movw	r22, r12
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 860:	21 10       	cpse	r2, r1
 862:	2a 94       	dec	r2
 864:	21 e0       	ldi	r18, 0x01	; 1
 866:	82 1a       	sub	r8, r18
 868:	91 08       	sbc	r9, r1
 86a:	81 14       	cp	r8, r1
 86c:	91 04       	cpc	r9, r1
 86e:	71 f7       	brne	.-36     	; 0x84c <vfprintf+0x1a4>
 870:	e8 c0       	rjmp	.+464    	; 0xa42 <__stack+0x143>
 872:	84 36       	cpi	r24, 0x64	; 100
 874:	11 f0       	breq	.+4      	; 0x87a <vfprintf+0x1d2>
 876:	89 36       	cpi	r24, 0x69	; 105
 878:	41 f5       	brne	.+80     	; 0x8ca <vfprintf+0x222>
 87a:	f8 01       	movw	r30, r16
 87c:	37 fe       	sbrs	r3, 7
 87e:	07 c0       	rjmp	.+14     	; 0x88e <vfprintf+0x1e6>
 880:	60 81       	ld	r22, Z
 882:	71 81       	ldd	r23, Z+1	; 0x01
 884:	82 81       	ldd	r24, Z+2	; 0x02
 886:	93 81       	ldd	r25, Z+3	; 0x03
 888:	0c 5f       	subi	r16, 0xFC	; 252
 88a:	1f 4f       	sbci	r17, 0xFF	; 255
 88c:	08 c0       	rjmp	.+16     	; 0x89e <vfprintf+0x1f6>
 88e:	60 81       	ld	r22, Z
 890:	71 81       	ldd	r23, Z+1	; 0x01
 892:	07 2e       	mov	r0, r23
 894:	00 0c       	add	r0, r0
 896:	88 0b       	sbc	r24, r24
 898:	99 0b       	sbc	r25, r25
 89a:	0e 5f       	subi	r16, 0xFE	; 254
 89c:	1f 4f       	sbci	r17, 0xFF	; 255
 89e:	f3 2d       	mov	r31, r3
 8a0:	ff 76       	andi	r31, 0x6F	; 111
 8a2:	3f 2e       	mov	r3, r31
 8a4:	97 ff       	sbrs	r25, 7
 8a6:	09 c0       	rjmp	.+18     	; 0x8ba <vfprintf+0x212>
 8a8:	90 95       	com	r25
 8aa:	80 95       	com	r24
 8ac:	70 95       	com	r23
 8ae:	61 95       	neg	r22
 8b0:	7f 4f       	sbci	r23, 0xFF	; 255
 8b2:	8f 4f       	sbci	r24, 0xFF	; 255
 8b4:	9f 4f       	sbci	r25, 0xFF	; 255
 8b6:	f0 68       	ori	r31, 0x80	; 128
 8b8:	3f 2e       	mov	r3, r31
 8ba:	2a e0       	ldi	r18, 0x0A	; 10
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	a3 01       	movw	r20, r6
 8c0:	0e 94 87 05 	call	0xb0e	; 0xb0e <__ultoa_invert>
 8c4:	88 2e       	mov	r8, r24
 8c6:	86 18       	sub	r8, r6
 8c8:	45 c0       	rjmp	.+138    	; 0x954 <__stack+0x55>
 8ca:	85 37       	cpi	r24, 0x75	; 117
 8cc:	31 f4       	brne	.+12     	; 0x8da <vfprintf+0x232>
 8ce:	23 2d       	mov	r18, r3
 8d0:	2f 7e       	andi	r18, 0xEF	; 239
 8d2:	b2 2e       	mov	r11, r18
 8d4:	2a e0       	ldi	r18, 0x0A	; 10
 8d6:	30 e0       	ldi	r19, 0x00	; 0
 8d8:	25 c0       	rjmp	.+74     	; 0x924 <__stack+0x25>
 8da:	93 2d       	mov	r25, r3
 8dc:	99 7f       	andi	r25, 0xF9	; 249
 8de:	b9 2e       	mov	r11, r25
 8e0:	8f 36       	cpi	r24, 0x6F	; 111
 8e2:	c1 f0       	breq	.+48     	; 0x914 <__stack+0x15>
 8e4:	18 f4       	brcc	.+6      	; 0x8ec <vfprintf+0x244>
 8e6:	88 35       	cpi	r24, 0x58	; 88
 8e8:	79 f0       	breq	.+30     	; 0x908 <__stack+0x9>
 8ea:	b5 c0       	rjmp	.+362    	; 0xa56 <__stack+0x157>
 8ec:	80 37       	cpi	r24, 0x70	; 112
 8ee:	19 f0       	breq	.+6      	; 0x8f6 <vfprintf+0x24e>
 8f0:	88 37       	cpi	r24, 0x78	; 120
 8f2:	21 f0       	breq	.+8      	; 0x8fc <vfprintf+0x254>
 8f4:	b0 c0       	rjmp	.+352    	; 0xa56 <__stack+0x157>
 8f6:	e9 2f       	mov	r30, r25
 8f8:	e0 61       	ori	r30, 0x10	; 16
 8fa:	be 2e       	mov	r11, r30
 8fc:	b4 fe       	sbrs	r11, 4
 8fe:	0d c0       	rjmp	.+26     	; 0x91a <__stack+0x1b>
 900:	fb 2d       	mov	r31, r11
 902:	f4 60       	ori	r31, 0x04	; 4
 904:	bf 2e       	mov	r11, r31
 906:	09 c0       	rjmp	.+18     	; 0x91a <__stack+0x1b>
 908:	34 fe       	sbrs	r3, 4
 90a:	0a c0       	rjmp	.+20     	; 0x920 <__stack+0x21>
 90c:	29 2f       	mov	r18, r25
 90e:	26 60       	ori	r18, 0x06	; 6
 910:	b2 2e       	mov	r11, r18
 912:	06 c0       	rjmp	.+12     	; 0x920 <__stack+0x21>
 914:	28 e0       	ldi	r18, 0x08	; 8
 916:	30 e0       	ldi	r19, 0x00	; 0
 918:	05 c0       	rjmp	.+10     	; 0x924 <__stack+0x25>
 91a:	20 e1       	ldi	r18, 0x10	; 16
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	02 c0       	rjmp	.+4      	; 0x924 <__stack+0x25>
 920:	20 e1       	ldi	r18, 0x10	; 16
 922:	32 e0       	ldi	r19, 0x02	; 2
 924:	f8 01       	movw	r30, r16
 926:	b7 fe       	sbrs	r11, 7
 928:	07 c0       	rjmp	.+14     	; 0x938 <__stack+0x39>
 92a:	60 81       	ld	r22, Z
 92c:	71 81       	ldd	r23, Z+1	; 0x01
 92e:	82 81       	ldd	r24, Z+2	; 0x02
 930:	93 81       	ldd	r25, Z+3	; 0x03
 932:	0c 5f       	subi	r16, 0xFC	; 252
 934:	1f 4f       	sbci	r17, 0xFF	; 255
 936:	06 c0       	rjmp	.+12     	; 0x944 <__stack+0x45>
 938:	60 81       	ld	r22, Z
 93a:	71 81       	ldd	r23, Z+1	; 0x01
 93c:	80 e0       	ldi	r24, 0x00	; 0
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	0e 5f       	subi	r16, 0xFE	; 254
 942:	1f 4f       	sbci	r17, 0xFF	; 255
 944:	a3 01       	movw	r20, r6
 946:	0e 94 87 05 	call	0xb0e	; 0xb0e <__ultoa_invert>
 94a:	88 2e       	mov	r8, r24
 94c:	86 18       	sub	r8, r6
 94e:	fb 2d       	mov	r31, r11
 950:	ff 77       	andi	r31, 0x7F	; 127
 952:	3f 2e       	mov	r3, r31
 954:	36 fe       	sbrs	r3, 6
 956:	0d c0       	rjmp	.+26     	; 0x972 <__stack+0x73>
 958:	23 2d       	mov	r18, r3
 95a:	2e 7f       	andi	r18, 0xFE	; 254
 95c:	a2 2e       	mov	r10, r18
 95e:	89 14       	cp	r8, r9
 960:	58 f4       	brcc	.+22     	; 0x978 <__stack+0x79>
 962:	34 fe       	sbrs	r3, 4
 964:	0b c0       	rjmp	.+22     	; 0x97c <__stack+0x7d>
 966:	32 fc       	sbrc	r3, 2
 968:	09 c0       	rjmp	.+18     	; 0x97c <__stack+0x7d>
 96a:	83 2d       	mov	r24, r3
 96c:	8e 7e       	andi	r24, 0xEE	; 238
 96e:	a8 2e       	mov	r10, r24
 970:	05 c0       	rjmp	.+10     	; 0x97c <__stack+0x7d>
 972:	b8 2c       	mov	r11, r8
 974:	a3 2c       	mov	r10, r3
 976:	03 c0       	rjmp	.+6      	; 0x97e <__stack+0x7f>
 978:	b8 2c       	mov	r11, r8
 97a:	01 c0       	rjmp	.+2      	; 0x97e <__stack+0x7f>
 97c:	b9 2c       	mov	r11, r9
 97e:	a4 fe       	sbrs	r10, 4
 980:	0f c0       	rjmp	.+30     	; 0x9a0 <__stack+0xa1>
 982:	fe 01       	movw	r30, r28
 984:	e8 0d       	add	r30, r8
 986:	f1 1d       	adc	r31, r1
 988:	80 81       	ld	r24, Z
 98a:	80 33       	cpi	r24, 0x30	; 48
 98c:	21 f4       	brne	.+8      	; 0x996 <__stack+0x97>
 98e:	9a 2d       	mov	r25, r10
 990:	99 7e       	andi	r25, 0xE9	; 233
 992:	a9 2e       	mov	r10, r25
 994:	09 c0       	rjmp	.+18     	; 0x9a8 <__stack+0xa9>
 996:	a2 fe       	sbrs	r10, 2
 998:	06 c0       	rjmp	.+12     	; 0x9a6 <__stack+0xa7>
 99a:	b3 94       	inc	r11
 99c:	b3 94       	inc	r11
 99e:	04 c0       	rjmp	.+8      	; 0x9a8 <__stack+0xa9>
 9a0:	8a 2d       	mov	r24, r10
 9a2:	86 78       	andi	r24, 0x86	; 134
 9a4:	09 f0       	breq	.+2      	; 0x9a8 <__stack+0xa9>
 9a6:	b3 94       	inc	r11
 9a8:	a3 fc       	sbrc	r10, 3
 9aa:	11 c0       	rjmp	.+34     	; 0x9ce <__stack+0xcf>
 9ac:	a0 fe       	sbrs	r10, 0
 9ae:	06 c0       	rjmp	.+12     	; 0x9bc <__stack+0xbd>
 9b0:	b2 14       	cp	r11, r2
 9b2:	88 f4       	brcc	.+34     	; 0x9d6 <__stack+0xd7>
 9b4:	28 0c       	add	r2, r8
 9b6:	92 2c       	mov	r9, r2
 9b8:	9b 18       	sub	r9, r11
 9ba:	0e c0       	rjmp	.+28     	; 0x9d8 <__stack+0xd9>
 9bc:	b2 14       	cp	r11, r2
 9be:	60 f4       	brcc	.+24     	; 0x9d8 <__stack+0xd9>
 9c0:	b6 01       	movw	r22, r12
 9c2:	80 e2       	ldi	r24, 0x20	; 32
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 9ca:	b3 94       	inc	r11
 9cc:	f7 cf       	rjmp	.-18     	; 0x9bc <__stack+0xbd>
 9ce:	b2 14       	cp	r11, r2
 9d0:	18 f4       	brcc	.+6      	; 0x9d8 <__stack+0xd9>
 9d2:	2b 18       	sub	r2, r11
 9d4:	02 c0       	rjmp	.+4      	; 0x9da <__stack+0xdb>
 9d6:	98 2c       	mov	r9, r8
 9d8:	21 2c       	mov	r2, r1
 9da:	a4 fe       	sbrs	r10, 4
 9dc:	10 c0       	rjmp	.+32     	; 0x9fe <__stack+0xff>
 9de:	b6 01       	movw	r22, r12
 9e0:	80 e3       	ldi	r24, 0x30	; 48
 9e2:	90 e0       	ldi	r25, 0x00	; 0
 9e4:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 9e8:	a2 fe       	sbrs	r10, 2
 9ea:	17 c0       	rjmp	.+46     	; 0xa1a <__stack+0x11b>
 9ec:	a1 fc       	sbrc	r10, 1
 9ee:	03 c0       	rjmp	.+6      	; 0x9f6 <__stack+0xf7>
 9f0:	88 e7       	ldi	r24, 0x78	; 120
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	02 c0       	rjmp	.+4      	; 0x9fa <__stack+0xfb>
 9f6:	88 e5       	ldi	r24, 0x58	; 88
 9f8:	90 e0       	ldi	r25, 0x00	; 0
 9fa:	b6 01       	movw	r22, r12
 9fc:	0c c0       	rjmp	.+24     	; 0xa16 <__stack+0x117>
 9fe:	8a 2d       	mov	r24, r10
 a00:	86 78       	andi	r24, 0x86	; 134
 a02:	59 f0       	breq	.+22     	; 0xa1a <__stack+0x11b>
 a04:	a1 fe       	sbrs	r10, 1
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <__stack+0x10d>
 a08:	8b e2       	ldi	r24, 0x2B	; 43
 a0a:	01 c0       	rjmp	.+2      	; 0xa0e <__stack+0x10f>
 a0c:	80 e2       	ldi	r24, 0x20	; 32
 a0e:	a7 fc       	sbrc	r10, 7
 a10:	8d e2       	ldi	r24, 0x2D	; 45
 a12:	b6 01       	movw	r22, r12
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 a1a:	89 14       	cp	r8, r9
 a1c:	38 f4       	brcc	.+14     	; 0xa2c <__stack+0x12d>
 a1e:	b6 01       	movw	r22, r12
 a20:	80 e3       	ldi	r24, 0x30	; 48
 a22:	90 e0       	ldi	r25, 0x00	; 0
 a24:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 a28:	9a 94       	dec	r9
 a2a:	f7 cf       	rjmp	.-18     	; 0xa1a <__stack+0x11b>
 a2c:	8a 94       	dec	r8
 a2e:	f3 01       	movw	r30, r6
 a30:	e8 0d       	add	r30, r8
 a32:	f1 1d       	adc	r31, r1
 a34:	80 81       	ld	r24, Z
 a36:	b6 01       	movw	r22, r12
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 a3e:	81 10       	cpse	r8, r1
 a40:	f5 cf       	rjmp	.-22     	; 0xa2c <__stack+0x12d>
 a42:	22 20       	and	r2, r2
 a44:	09 f4       	brne	.+2      	; 0xa48 <__stack+0x149>
 a46:	42 ce       	rjmp	.-892    	; 0x6cc <vfprintf+0x24>
 a48:	b6 01       	movw	r22, r12
 a4a:	80 e2       	ldi	r24, 0x20	; 32
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	0e 94 4b 05 	call	0xa96	; 0xa96 <fputc>
 a52:	2a 94       	dec	r2
 a54:	f6 cf       	rjmp	.-20     	; 0xa42 <__stack+0x143>
 a56:	f6 01       	movw	r30, r12
 a58:	86 81       	ldd	r24, Z+6	; 0x06
 a5a:	97 81       	ldd	r25, Z+7	; 0x07
 a5c:	02 c0       	rjmp	.+4      	; 0xa62 <__stack+0x163>
 a5e:	8f ef       	ldi	r24, 0xFF	; 255
 a60:	9f ef       	ldi	r25, 0xFF	; 255
 a62:	2b 96       	adiw	r28, 0x0b	; 11
 a64:	e2 e1       	ldi	r30, 0x12	; 18
 a66:	0c 94 01 06 	jmp	0xc02	; 0xc02 <__epilogue_restores__>

00000a6a <strnlen_P>:
 a6a:	fc 01       	movw	r30, r24
 a6c:	05 90       	lpm	r0, Z+
 a6e:	61 50       	subi	r22, 0x01	; 1
 a70:	70 40       	sbci	r23, 0x00	; 0
 a72:	01 10       	cpse	r0, r1
 a74:	d8 f7       	brcc	.-10     	; 0xa6c <strnlen_P+0x2>
 a76:	80 95       	com	r24
 a78:	90 95       	com	r25
 a7a:	8e 0f       	add	r24, r30
 a7c:	9f 1f       	adc	r25, r31
 a7e:	08 95       	ret

00000a80 <strnlen>:
 a80:	fc 01       	movw	r30, r24
 a82:	61 50       	subi	r22, 0x01	; 1
 a84:	70 40       	sbci	r23, 0x00	; 0
 a86:	01 90       	ld	r0, Z+
 a88:	01 10       	cpse	r0, r1
 a8a:	d8 f7       	brcc	.-10     	; 0xa82 <strnlen+0x2>
 a8c:	80 95       	com	r24
 a8e:	90 95       	com	r25
 a90:	8e 0f       	add	r24, r30
 a92:	9f 1f       	adc	r25, r31
 a94:	08 95       	ret

00000a96 <fputc>:
 a96:	0f 93       	push	r16
 a98:	1f 93       	push	r17
 a9a:	cf 93       	push	r28
 a9c:	df 93       	push	r29
 a9e:	fb 01       	movw	r30, r22
 aa0:	23 81       	ldd	r18, Z+3	; 0x03
 aa2:	21 fd       	sbrc	r18, 1
 aa4:	03 c0       	rjmp	.+6      	; 0xaac <fputc+0x16>
 aa6:	8f ef       	ldi	r24, 0xFF	; 255
 aa8:	9f ef       	ldi	r25, 0xFF	; 255
 aaa:	2c c0       	rjmp	.+88     	; 0xb04 <fputc+0x6e>
 aac:	22 ff       	sbrs	r18, 2
 aae:	16 c0       	rjmp	.+44     	; 0xadc <fputc+0x46>
 ab0:	46 81       	ldd	r20, Z+6	; 0x06
 ab2:	57 81       	ldd	r21, Z+7	; 0x07
 ab4:	24 81       	ldd	r18, Z+4	; 0x04
 ab6:	35 81       	ldd	r19, Z+5	; 0x05
 ab8:	42 17       	cp	r20, r18
 aba:	53 07       	cpc	r21, r19
 abc:	44 f4       	brge	.+16     	; 0xace <fputc+0x38>
 abe:	a0 81       	ld	r26, Z
 ac0:	b1 81       	ldd	r27, Z+1	; 0x01
 ac2:	9d 01       	movw	r18, r26
 ac4:	2f 5f       	subi	r18, 0xFF	; 255
 ac6:	3f 4f       	sbci	r19, 0xFF	; 255
 ac8:	31 83       	std	Z+1, r19	; 0x01
 aca:	20 83       	st	Z, r18
 acc:	8c 93       	st	X, r24
 ace:	26 81       	ldd	r18, Z+6	; 0x06
 ad0:	37 81       	ldd	r19, Z+7	; 0x07
 ad2:	2f 5f       	subi	r18, 0xFF	; 255
 ad4:	3f 4f       	sbci	r19, 0xFF	; 255
 ad6:	37 83       	std	Z+7, r19	; 0x07
 ad8:	26 83       	std	Z+6, r18	; 0x06
 ada:	14 c0       	rjmp	.+40     	; 0xb04 <fputc+0x6e>
 adc:	8b 01       	movw	r16, r22
 ade:	ec 01       	movw	r28, r24
 ae0:	fb 01       	movw	r30, r22
 ae2:	00 84       	ldd	r0, Z+8	; 0x08
 ae4:	f1 85       	ldd	r31, Z+9	; 0x09
 ae6:	e0 2d       	mov	r30, r0
 ae8:	09 95       	icall
 aea:	89 2b       	or	r24, r25
 aec:	e1 f6       	brne	.-72     	; 0xaa6 <fputc+0x10>
 aee:	d8 01       	movw	r26, r16
 af0:	16 96       	adiw	r26, 0x06	; 6
 af2:	8d 91       	ld	r24, X+
 af4:	9c 91       	ld	r25, X
 af6:	17 97       	sbiw	r26, 0x07	; 7
 af8:	01 96       	adiw	r24, 0x01	; 1
 afa:	17 96       	adiw	r26, 0x07	; 7
 afc:	9c 93       	st	X, r25
 afe:	8e 93       	st	-X, r24
 b00:	16 97       	sbiw	r26, 0x06	; 6
 b02:	ce 01       	movw	r24, r28
 b04:	df 91       	pop	r29
 b06:	cf 91       	pop	r28
 b08:	1f 91       	pop	r17
 b0a:	0f 91       	pop	r16
 b0c:	08 95       	ret

00000b0e <__ultoa_invert>:
 b0e:	fa 01       	movw	r30, r20
 b10:	aa 27       	eor	r26, r26
 b12:	28 30       	cpi	r18, 0x08	; 8
 b14:	51 f1       	breq	.+84     	; 0xb6a <__ultoa_invert+0x5c>
 b16:	20 31       	cpi	r18, 0x10	; 16
 b18:	81 f1       	breq	.+96     	; 0xb7a <__ultoa_invert+0x6c>
 b1a:	e8 94       	clt
 b1c:	6f 93       	push	r22
 b1e:	6e 7f       	andi	r22, 0xFE	; 254
 b20:	6e 5f       	subi	r22, 0xFE	; 254
 b22:	7f 4f       	sbci	r23, 0xFF	; 255
 b24:	8f 4f       	sbci	r24, 0xFF	; 255
 b26:	9f 4f       	sbci	r25, 0xFF	; 255
 b28:	af 4f       	sbci	r26, 0xFF	; 255
 b2a:	b1 e0       	ldi	r27, 0x01	; 1
 b2c:	3e d0       	rcall	.+124    	; 0xbaa <__ultoa_invert+0x9c>
 b2e:	b4 e0       	ldi	r27, 0x04	; 4
 b30:	3c d0       	rcall	.+120    	; 0xbaa <__ultoa_invert+0x9c>
 b32:	67 0f       	add	r22, r23
 b34:	78 1f       	adc	r23, r24
 b36:	89 1f       	adc	r24, r25
 b38:	9a 1f       	adc	r25, r26
 b3a:	a1 1d       	adc	r26, r1
 b3c:	68 0f       	add	r22, r24
 b3e:	79 1f       	adc	r23, r25
 b40:	8a 1f       	adc	r24, r26
 b42:	91 1d       	adc	r25, r1
 b44:	a1 1d       	adc	r26, r1
 b46:	6a 0f       	add	r22, r26
 b48:	71 1d       	adc	r23, r1
 b4a:	81 1d       	adc	r24, r1
 b4c:	91 1d       	adc	r25, r1
 b4e:	a1 1d       	adc	r26, r1
 b50:	20 d0       	rcall	.+64     	; 0xb92 <__ultoa_invert+0x84>
 b52:	09 f4       	brne	.+2      	; 0xb56 <__ultoa_invert+0x48>
 b54:	68 94       	set
 b56:	3f 91       	pop	r19
 b58:	2a e0       	ldi	r18, 0x0A	; 10
 b5a:	26 9f       	mul	r18, r22
 b5c:	11 24       	eor	r1, r1
 b5e:	30 19       	sub	r19, r0
 b60:	30 5d       	subi	r19, 0xD0	; 208
 b62:	31 93       	st	Z+, r19
 b64:	de f6       	brtc	.-74     	; 0xb1c <__ultoa_invert+0xe>
 b66:	cf 01       	movw	r24, r30
 b68:	08 95       	ret
 b6a:	46 2f       	mov	r20, r22
 b6c:	47 70       	andi	r20, 0x07	; 7
 b6e:	40 5d       	subi	r20, 0xD0	; 208
 b70:	41 93       	st	Z+, r20
 b72:	b3 e0       	ldi	r27, 0x03	; 3
 b74:	0f d0       	rcall	.+30     	; 0xb94 <__ultoa_invert+0x86>
 b76:	c9 f7       	brne	.-14     	; 0xb6a <__ultoa_invert+0x5c>
 b78:	f6 cf       	rjmp	.-20     	; 0xb66 <__ultoa_invert+0x58>
 b7a:	46 2f       	mov	r20, r22
 b7c:	4f 70       	andi	r20, 0x0F	; 15
 b7e:	40 5d       	subi	r20, 0xD0	; 208
 b80:	4a 33       	cpi	r20, 0x3A	; 58
 b82:	18 f0       	brcs	.+6      	; 0xb8a <__ultoa_invert+0x7c>
 b84:	49 5d       	subi	r20, 0xD9	; 217
 b86:	31 fd       	sbrc	r19, 1
 b88:	40 52       	subi	r20, 0x20	; 32
 b8a:	41 93       	st	Z+, r20
 b8c:	02 d0       	rcall	.+4      	; 0xb92 <__ultoa_invert+0x84>
 b8e:	a9 f7       	brne	.-22     	; 0xb7a <__ultoa_invert+0x6c>
 b90:	ea cf       	rjmp	.-44     	; 0xb66 <__ultoa_invert+0x58>
 b92:	b4 e0       	ldi	r27, 0x04	; 4
 b94:	a6 95       	lsr	r26
 b96:	97 95       	ror	r25
 b98:	87 95       	ror	r24
 b9a:	77 95       	ror	r23
 b9c:	67 95       	ror	r22
 b9e:	ba 95       	dec	r27
 ba0:	c9 f7       	brne	.-14     	; 0xb94 <__ultoa_invert+0x86>
 ba2:	00 97       	sbiw	r24, 0x00	; 0
 ba4:	61 05       	cpc	r22, r1
 ba6:	71 05       	cpc	r23, r1
 ba8:	08 95       	ret
 baa:	9b 01       	movw	r18, r22
 bac:	ac 01       	movw	r20, r24
 bae:	0a 2e       	mov	r0, r26
 bb0:	06 94       	lsr	r0
 bb2:	57 95       	ror	r21
 bb4:	47 95       	ror	r20
 bb6:	37 95       	ror	r19
 bb8:	27 95       	ror	r18
 bba:	ba 95       	dec	r27
 bbc:	c9 f7       	brne	.-14     	; 0xbb0 <__ultoa_invert+0xa2>
 bbe:	62 0f       	add	r22, r18
 bc0:	73 1f       	adc	r23, r19
 bc2:	84 1f       	adc	r24, r20
 bc4:	95 1f       	adc	r25, r21
 bc6:	a0 1d       	adc	r26, r0
 bc8:	08 95       	ret

00000bca <__prologue_saves__>:
 bca:	2f 92       	push	r2
 bcc:	3f 92       	push	r3
 bce:	4f 92       	push	r4
 bd0:	5f 92       	push	r5
 bd2:	6f 92       	push	r6
 bd4:	7f 92       	push	r7
 bd6:	8f 92       	push	r8
 bd8:	9f 92       	push	r9
 bda:	af 92       	push	r10
 bdc:	bf 92       	push	r11
 bde:	cf 92       	push	r12
 be0:	df 92       	push	r13
 be2:	ef 92       	push	r14
 be4:	ff 92       	push	r15
 be6:	0f 93       	push	r16
 be8:	1f 93       	push	r17
 bea:	cf 93       	push	r28
 bec:	df 93       	push	r29
 bee:	cd b7       	in	r28, 0x3d	; 61
 bf0:	de b7       	in	r29, 0x3e	; 62
 bf2:	ca 1b       	sub	r28, r26
 bf4:	db 0b       	sbc	r29, r27
 bf6:	0f b6       	in	r0, 0x3f	; 63
 bf8:	f8 94       	cli
 bfa:	de bf       	out	0x3e, r29	; 62
 bfc:	0f be       	out	0x3f, r0	; 63
 bfe:	cd bf       	out	0x3d, r28	; 61
 c00:	09 94       	ijmp

00000c02 <__epilogue_restores__>:
 c02:	2a 88       	ldd	r2, Y+18	; 0x12
 c04:	39 88       	ldd	r3, Y+17	; 0x11
 c06:	48 88       	ldd	r4, Y+16	; 0x10
 c08:	5f 84       	ldd	r5, Y+15	; 0x0f
 c0a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c0c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c0e:	8c 84       	ldd	r8, Y+12	; 0x0c
 c10:	9b 84       	ldd	r9, Y+11	; 0x0b
 c12:	aa 84       	ldd	r10, Y+10	; 0x0a
 c14:	b9 84       	ldd	r11, Y+9	; 0x09
 c16:	c8 84       	ldd	r12, Y+8	; 0x08
 c18:	df 80       	ldd	r13, Y+7	; 0x07
 c1a:	ee 80       	ldd	r14, Y+6	; 0x06
 c1c:	fd 80       	ldd	r15, Y+5	; 0x05
 c1e:	0c 81       	ldd	r16, Y+4	; 0x04
 c20:	1b 81       	ldd	r17, Y+3	; 0x03
 c22:	aa 81       	ldd	r26, Y+2	; 0x02
 c24:	b9 81       	ldd	r27, Y+1	; 0x01
 c26:	ce 0f       	add	r28, r30
 c28:	d1 1d       	adc	r29, r1
 c2a:	0f b6       	in	r0, 0x3f	; 63
 c2c:	f8 94       	cli
 c2e:	de bf       	out	0x3e, r29	; 62
 c30:	0f be       	out	0x3f, r0	; 63
 c32:	cd bf       	out	0x3d, r28	; 61
 c34:	ed 01       	movw	r28, r26
 c36:	08 95       	ret

00000c38 <_exit>:
 c38:	f8 94       	cli

00000c3a <__stop_program>:
 c3a:	ff cf       	rjmp	.-2      	; 0xc3a <__stop_program>
