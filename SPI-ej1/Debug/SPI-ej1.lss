
SPI-ej1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000b2c  00000bc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800126  00800126  00000be6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000be6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c44  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000c84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001053  00000000  00000000  00000d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a89  00000000  00000000  00001dbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009b0  00000000  00000000  00002848  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  000031f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d6  00000000  00000000  000033b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088a  00000000  00000000  0000398e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004218  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 ab 01 	jmp	0x356	; 0x356 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e2       	ldi	r30, 0x2C	; 44
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 33       	cpi	r26, 0x38	; 56
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ef 01 	call	0x3de	; 0x3de <main>
  9e:	0c 94 94 05 	jmp	0xb28	; 0xb28 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SPI_init>:
#define DD_SCK DDB5

void SPI_init(uint8_t modoCpolCpha,uint8_t prescaler)
{
	/* Set MOSI and SCK output, all others input */
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK);
  a6:	98 e2       	ldi	r25, 0x28	; 40
  a8:	94 b9       	out	0x04, r25	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	switch(modoCpolCpha){
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	49 f0       	breq	.+18     	; 0xc0 <SPI_init+0x1a>
  ae:	28 f0       	brcs	.+10     	; 0xba <SPI_init+0x14>
  b0:	82 30       	cpi	r24, 0x02	; 2
  b2:	49 f0       	breq	.+18     	; 0xc6 <SPI_init+0x20>
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	51 f0       	breq	.+20     	; 0xcc <SPI_init+0x26>
  b8:	0b c0       	rjmp	.+22     	; 0xd0 <SPI_init+0x2a>
		case 0: 	
			SPCR = (1<<SPE)|(1<<MSTR);
  ba:	80 e5       	ldi	r24, 0x50	; 80
  bc:	8c bd       	out	0x2c, r24	; 44
			break;
  be:	08 c0       	rjmp	.+16     	; 0xd0 <SPI_init+0x2a>
		case 1: 	
			SPCR = (1<<SPE)|(1<<MSTR)|(1<<CPOL);
  c0:	88 e5       	ldi	r24, 0x58	; 88
  c2:	8c bd       	out	0x2c, r24	; 44
			break;
  c4:	05 c0       	rjmp	.+10     	; 0xd0 <SPI_init+0x2a>
		case 2: 	
			SPCR = (1<<SPE)|(1<<MSTR)|(1<<CPHA);
  c6:	84 e5       	ldi	r24, 0x54	; 84
  c8:	8c bd       	out	0x2c, r24	; 44
			break;
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <SPI_init+0x2a>
		case 3: 	
			SPCR = (1<<SPE)|(1<<MSTR)|(1<<CPOL)|(1<<CPHA);
  cc:	8c e5       	ldi	r24, 0x5C	; 92
  ce:	8c bd       	out	0x2c, r24	; 44
			break;
	}
	SPCR&=~(3<<SPR0);
  d0:	8c b5       	in	r24, 0x2c	; 44
  d2:	8c 7f       	andi	r24, 0xFC	; 252
  d4:	8c bd       	out	0x2c, r24	; 44
	SPCR|=(prescaler&3)<<SPR0;
  d6:	8c b5       	in	r24, 0x2c	; 44
  d8:	63 70       	andi	r22, 0x03	; 3
  da:	68 2b       	or	r22, r24
  dc:	6c bd       	out	0x2c, r22	; 44
  de:	08 95       	ret

000000e0 <SPI_transfer>:
}

uint8_t SPI_transfer(uint8_t dato){
	/* Start transmission */
	SPDR = dato;
  e0:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
  e2:	0d b4       	in	r0, 0x2d	; 45
  e4:	07 fe       	sbrs	r0, 7
  e6:	fd cf       	rjmp	.-6      	; 0xe2 <SPI_transfer+0x2>
	return SPDR;
  e8:	8e b5       	in	r24, 0x2e	; 46
}
  ea:	08 95       	ret

000000ec <PRESCALER_conf>:
			switch(X){
				case 'A':
					TCCR2A|=(mode<<COM2A0);
					break;
				case 'B':
					TCCR2B|=(mode<<COM2B0);
  ec:	81 30       	cpi	r24, 0x01	; 1
  ee:	91 05       	cpc	r25, r1
  f0:	61 f0       	breq	.+24     	; 0x10a <PRESCALER_conf+0x1e>
  f2:	82 30       	cpi	r24, 0x02	; 2
  f4:	91 05       	cpc	r25, r1
  f6:	91 f0       	breq	.+36     	; 0x11c <PRESCALER_conf+0x30>
  f8:	89 2b       	or	r24, r25
  fa:	c1 f4       	brne	.+48     	; 0x12c <PRESCALER_conf+0x40>
  fc:	85 b5       	in	r24, 0x25	; 37
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	88 7f       	andi	r24, 0xF8	; 248
 102:	68 2b       	or	r22, r24
 104:	79 2b       	or	r23, r25
 106:	65 bd       	out	0x25, r22	; 37
 108:	08 95       	ret
 10a:	e1 e8       	ldi	r30, 0x81	; 129
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	88 7f       	andi	r24, 0xF8	; 248
 114:	68 2b       	or	r22, r24
 116:	79 2b       	or	r23, r25
 118:	60 83       	st	Z, r22
 11a:	08 95       	ret
 11c:	e1 eb       	ldi	r30, 0xB1	; 177
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	88 7f       	andi	r24, 0xF8	; 248
 126:	68 2b       	or	r22, r24
 128:	79 2b       	or	r23, r25
 12a:	60 83       	st	Z, r22
 12c:	08 95       	ret

0000012e <TIMER_CTC_init>:
			- ICIEn: Habilitación por captura de entrada.
			- OCIEnA y OCIEnB: Habilitación de interrupciones por match de OCRnA y OCRnB respectivamente.
			- TOIEn: Habilitación de interrupciones por overflow.
*/
void TIMER_CTC_init(int TIMERx, char X, int T, int mode){
	switch(TIMERx){
 12e:	81 30       	cpi	r24, 0x01	; 1
 130:	91 05       	cpc	r25, r1
 132:	a1 f1       	breq	.+104    	; 0x19c <TIMER_CTC_init+0x6e>
 134:	82 30       	cpi	r24, 0x02	; 2
 136:	91 05       	cpc	r25, r1
 138:	09 f4       	brne	.+2      	; 0x13c <TIMER_CTC_init+0xe>
 13a:	6d c0       	rjmp	.+218    	; 0x216 <TIMER_CTC_init+0xe8>
 13c:	89 2b       	or	r24, r25
 13e:	09 f0       	breq	.+2      	; 0x142 <TIMER_CTC_init+0x14>
 140:	9e c0       	rjmp	.+316    	; 0x27e <TIMER_CTC_init+0x150>
		case 0:
			TCCR0B|=(1<<WGM02);
 142:	85 b5       	in	r24, 0x25	; 37
 144:	88 60       	ori	r24, 0x08	; 8
 146:	85 bd       	out	0x25, r24	; 37
			switch(X){
 148:	61 34       	cpi	r22, 0x41	; 65
 14a:	19 f0       	breq	.+6      	; 0x152 <TIMER_CTC_init+0x24>
 14c:	62 34       	cpi	r22, 0x42	; 66
 14e:	a9 f0       	breq	.+42     	; 0x17a <TIMER_CTC_init+0x4c>
 150:	08 95       	ret
				case 'A':
					TCCR0A|=(mode<<COM0A0);
 152:	84 b5       	in	r24, 0x24	; 36
 154:	00 24       	eor	r0, r0
 156:	36 95       	lsr	r19
 158:	27 95       	ror	r18
 15a:	07 94       	ror	r0
 15c:	36 95       	lsr	r19
 15e:	27 95       	ror	r18
 160:	07 94       	ror	r0
 162:	32 2f       	mov	r19, r18
 164:	20 2d       	mov	r18, r0
 166:	28 2b       	or	r18, r24
 168:	24 bd       	out	0x24, r18	; 36
					TIFR0&=~(1<<OCF0A);
 16a:	a9 98       	cbi	0x15, 1	; 21
					TIMSK0|=(1<<OCIE0A);
 16c:	ee e6       	ldi	r30, 0x6E	; 110
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	82 60       	ori	r24, 0x02	; 2
 174:	80 83       	st	Z, r24
					OCR0A=T;
 176:	47 bd       	out	0x27, r20	; 39
					break;
 178:	08 95       	ret
				case 'B':
					TCCR0B|=(mode<<COM0B0);
 17a:	85 b5       	in	r24, 0x25	; 37
 17c:	22 95       	swap	r18
 17e:	32 95       	swap	r19
 180:	30 7f       	andi	r19, 0xF0	; 240
 182:	32 27       	eor	r19, r18
 184:	20 7f       	andi	r18, 0xF0	; 240
 186:	32 27       	eor	r19, r18
 188:	28 2b       	or	r18, r24
 18a:	25 bd       	out	0x25, r18	; 37
					TIFR0&=~(1<<OCF0B);
 18c:	aa 98       	cbi	0x15, 2	; 21
					TIMSK0|=(1<<OCIE0B);
 18e:	ee e6       	ldi	r30, 0x6E	; 110
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	80 81       	ld	r24, Z
 194:	84 60       	ori	r24, 0x04	; 4
 196:	80 83       	st	Z, r24
					OCR0B=T;
 198:	48 bd       	out	0x28, r20	; 40
				break;
 19a:	08 95       	ret
			}
			break;
		case 1:
			TCCR1B|=(1<<WGM12);
 19c:	e1 e8       	ldi	r30, 0x81	; 129
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	88 60       	ori	r24, 0x08	; 8
 1a4:	80 83       	st	Z, r24
			switch(X){
 1a6:	61 34       	cpi	r22, 0x41	; 65
 1a8:	19 f0       	breq	.+6      	; 0x1b0 <TIMER_CTC_init+0x82>
 1aa:	62 34       	cpi	r22, 0x42	; 66
 1ac:	e1 f0       	breq	.+56     	; 0x1e6 <TIMER_CTC_init+0xb8>
 1ae:	08 95       	ret
				case 'A':
					TCCR1A|=(mode<<COM1A0);
 1b0:	e0 e8       	ldi	r30, 0x80	; 128
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	00 24       	eor	r0, r0
 1b8:	36 95       	lsr	r19
 1ba:	27 95       	ror	r18
 1bc:	07 94       	ror	r0
 1be:	36 95       	lsr	r19
 1c0:	27 95       	ror	r18
 1c2:	07 94       	ror	r0
 1c4:	32 2f       	mov	r19, r18
 1c6:	20 2d       	mov	r18, r0
 1c8:	28 2b       	or	r18, r24
 1ca:	20 83       	st	Z, r18
					TIFR1&=~(1<<OCF1A);
 1cc:	b1 98       	cbi	0x16, 1	; 22
					TIMSK1|=(1<<OCIE1A);
 1ce:	ef e6       	ldi	r30, 0x6F	; 111
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	80 81       	ld	r24, Z
 1d4:	82 60       	ori	r24, 0x02	; 2
 1d6:	80 83       	st	Z, r24
					OCR1A=T;
 1d8:	84 2f       	mov	r24, r20
 1da:	95 2f       	mov	r25, r21
 1dc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1e0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
					break;
 1e4:	08 95       	ret
				case 'B':
					TCCR1B|=(mode<<COM1B0);
 1e6:	e1 e8       	ldi	r30, 0x81	; 129
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	22 95       	swap	r18
 1ee:	32 95       	swap	r19
 1f0:	30 7f       	andi	r19, 0xF0	; 240
 1f2:	32 27       	eor	r19, r18
 1f4:	20 7f       	andi	r18, 0xF0	; 240
 1f6:	32 27       	eor	r19, r18
 1f8:	28 2b       	or	r18, r24
 1fa:	20 83       	st	Z, r18
					TIFR1&=~(1<<OCF1B);
 1fc:	b2 98       	cbi	0x16, 2	; 22
					TIMSK1|=(1<<OCIE1B);
 1fe:	ef e6       	ldi	r30, 0x6F	; 111
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 81       	ld	r24, Z
 204:	84 60       	ori	r24, 0x04	; 4
 206:	80 83       	st	Z, r24
					OCR1B=T;
 208:	84 2f       	mov	r24, r20
 20a:	95 2f       	mov	r25, r21
 20c:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 210:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
					break;
 214:	08 95       	ret
			}
			break;
		case 2:
			TCCR2B|=(1<<WGM22);
 216:	e1 eb       	ldi	r30, 0xB1	; 177
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	80 81       	ld	r24, Z
 21c:	88 60       	ori	r24, 0x08	; 8
 21e:	80 83       	st	Z, r24
			switch(X){
 220:	61 34       	cpi	r22, 0x41	; 65
 222:	19 f0       	breq	.+6      	; 0x22a <TIMER_CTC_init+0xfc>
 224:	62 34       	cpi	r22, 0x42	; 66
 226:	c1 f0       	breq	.+48     	; 0x258 <TIMER_CTC_init+0x12a>
 228:	08 95       	ret
				case 'A':
					TCCR2A|=(mode<<COM2A0);
 22a:	e0 eb       	ldi	r30, 0xB0	; 176
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	00 24       	eor	r0, r0
 232:	36 95       	lsr	r19
 234:	27 95       	ror	r18
 236:	07 94       	ror	r0
 238:	36 95       	lsr	r19
 23a:	27 95       	ror	r18
 23c:	07 94       	ror	r0
 23e:	32 2f       	mov	r19, r18
 240:	20 2d       	mov	r18, r0
 242:	28 2b       	or	r18, r24
 244:	20 83       	st	Z, r18
					TIFR2&=~(1<<OCF2A);
 246:	b9 98       	cbi	0x17, 1	; 23
					TIMSK2|=(1<<OCIE2A);
 248:	e0 e7       	ldi	r30, 0x70	; 112
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	80 81       	ld	r24, Z
 24e:	82 60       	ori	r24, 0x02	; 2
 250:	80 83       	st	Z, r24
					OCR2A=T;
 252:	40 93 b3 00 	sts	0x00B3, r20	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
					break;
 256:	08 95       	ret
				case 'B':
					TCCR2B|=(mode<<COM2B0);
 258:	e1 eb       	ldi	r30, 0xB1	; 177
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	80 81       	ld	r24, Z
 25e:	22 95       	swap	r18
 260:	32 95       	swap	r19
 262:	30 7f       	andi	r19, 0xF0	; 240
 264:	32 27       	eor	r19, r18
 266:	20 7f       	andi	r18, 0xF0	; 240
 268:	32 27       	eor	r19, r18
 26a:	28 2b       	or	r18, r24
 26c:	20 83       	st	Z, r18
					TIFR2&=~(1<<OCF2B);
 26e:	ba 98       	cbi	0x17, 2	; 23
					TIMSK2|=(1<<OCIE2B);
 270:	e0 e7       	ldi	r30, 0x70	; 112
 272:	f0 e0       	ldi	r31, 0x00	; 0
 274:	80 81       	ld	r24, Z
 276:	84 60       	ori	r24, 0x04	; 4
 278:	80 83       	st	Z, r24
					OCR2B=T;
 27a:	40 93 b4 00 	sts	0x00B4, r20	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 27e:	08 95       	ret

00000280 <UART_init>:
		stdout = stdin = &uart_io;
--------------------------------------------------------------------------------------
*/

void UART_init(unsigned int ubrr){
	UBRR0=F_CPU/16/ubrr-1;
 280:	9c 01       	movw	r18, r24
 282:	40 e0       	ldi	r20, 0x00	; 0
 284:	50 e0       	ldi	r21, 0x00	; 0
 286:	60 e4       	ldi	r22, 0x40	; 64
 288:	72 e4       	ldi	r23, 0x42	; 66
 28a:	8f e0       	ldi	r24, 0x0F	; 15
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 41 02 	call	0x482	; 0x482 <__divmodsi4>
 292:	21 50       	subi	r18, 0x01	; 1
 294:	31 09       	sbc	r19, r1
 296:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 29a:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0A=0;
 29e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0B=(1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
 2a2:	88 e9       	ldi	r24, 0x98	; 152
 2a4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C=(1<<USBS0)|(3<<UCSZ00);
 2a8:	8e e0       	ldi	r24, 0x0E	; 14
 2aa:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 2ae:	08 95       	ret

000002b0 <_putc>:
}

//	Función de TRANSMISIÓN

int _putc(char c, FILE *stream){
	while (!(UCSR0A & (1<<UDRE0)));
 2b0:	e0 ec       	ldi	r30, 0xC0	; 192
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	90 81       	ld	r25, Z
 2b6:	95 ff       	sbrs	r25, 5
 2b8:	fd cf       	rjmp	.-6      	; 0x2b4 <_putc+0x4>
	UDR0=c;
 2ba:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	08 95       	ret

000002c4 <_getc>:

//	Función de RECEPCIÓN

int _getc(FILE *stream){
	while (!(UCSR0A & (1<<RXC0)));
 2c4:	e0 ec       	ldi	r30, 0xC0	; 192
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	88 23       	and	r24, r24
 2cc:	ec f7       	brge	.-6      	; 0x2c8 <_getc+0x4>
	return UDR0;
 2ce:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	08 95       	ret

000002d6 <interprete>:

#define control 0b00010001

//------------INTERPRETE DE COMANDO-----------------------
void interprete(void){
	switch (comando[0]) {
 2d6:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <comando>
 2da:	80 35       	cpi	r24, 0x50	; 80
 2dc:	b9 f5       	brne	.+110    	; 0x34c <interprete+0x76>
		case 'P':
		if (comando[1]){
 2de:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <comando+0x1>
 2e2:	88 23       	and	r24, r24
 2e4:	71 f1       	breq	.+92     	; 0x342 <interprete+0x6c>
			valor=atoi(&comando[1]);
 2e6:	89 e2       	ldi	r24, 0x29	; 41
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	0e 94 60 02 	call	0x4c0	; 0x4c0 <atoi>
 2ee:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <valor>
			printf("Sending...");
 2f2:	8e e0       	ldi	r24, 0x0E	; 14
 2f4:	91 e0       	ldi	r25, 0x01	; 1
 2f6:	9f 93       	push	r25
 2f8:	8f 93       	push	r24
 2fa:	0e 94 86 02 	call	0x50c	; 0x50c <printf>
			PORTB&=~(1<<pinCS);
 2fe:	2a 98       	cbi	0x05, 2	; 5
			SPI_transfer(control);
 300:	81 e1       	ldi	r24, 0x11	; 17
 302:	0e 94 70 00 	call	0xe0	; 0xe0 <SPI_transfer>
			SPI_transfer(valor);
 306:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <valor>
 30a:	0e 94 70 00 	call	0xe0	; 0xe0 <SPI_transfer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 30e:	85 e0       	ldi	r24, 0x05	; 5
 310:	8a 95       	dec	r24
 312:	f1 f7       	brne	.-4      	; 0x310 <interprete+0x3a>
 314:	00 00       	nop
			_delay_us(1);
			PORTB|=(1<<pinCS);
 316:	2a 9a       	sbi	0x05, 2	; 5
 318:	85 e0       	ldi	r24, 0x05	; 5
 31a:	8a 95       	dec	r24
 31c:	f1 f7       	brne	.-4      	; 0x31a <interprete+0x44>
 31e:	00 00       	nop
			_delay_us(1);
			printf("P: %d\n", valor);
 320:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <valor>
 324:	1f 92       	push	r1
 326:	8f 93       	push	r24
 328:	89 e1       	ldi	r24, 0x19	; 25
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	9f 93       	push	r25
 32e:	8f 93       	push	r24
 330:	0e 94 86 02 	call	0x50c	; 0x50c <printf>
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	0f 90       	pop	r0
 33e:	0f 90       	pop	r0
 340:	08 95       	ret
			} else {
			printf(":ERR\n");
 342:	80 e2       	ldi	r24, 0x20	; 32
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	0e 94 9c 02 	call	0x538	; 0x538 <puts>
 34a:	08 95       	ret
		}
		break;

		default:
		printf(":ERR\n");
 34c:	80 e2       	ldi	r24, 0x20	; 32
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	0e 94 9c 02 	call	0x538	; 0x538 <puts>
 354:	08 95       	ret

00000356 <__vector_18>:
	}
}

//----------------------------------------------------------------------------
//    Rutina de servicio de interrupción por recepción de datos en UART
ISR (USART_RX_vect){
 356:	1f 92       	push	r1
 358:	0f 92       	push	r0
 35a:	0f b6       	in	r0, 0x3f	; 63
 35c:	0f 92       	push	r0
 35e:	11 24       	eor	r1, r1
 360:	2f 93       	push	r18
 362:	3f 93       	push	r19
 364:	4f 93       	push	r20
 366:	5f 93       	push	r21
 368:	6f 93       	push	r22
 36a:	7f 93       	push	r23
 36c:	8f 93       	push	r24
 36e:	9f 93       	push	r25
 370:	af 93       	push	r26
 372:	bf 93       	push	r27
 374:	ef 93       	push	r30
 376:	ff 93       	push	r31
	char dato=getc();
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	0e 94 62 01 	call	0x2c4	; 0x2c4 <_getc>
	switch (dato) {
 380:	9c 01       	movw	r18, r24
 382:	33 27       	eor	r19, r19
 384:	2d 30       	cpi	r18, 0x0D	; 13
 386:	31 05       	cpc	r19, r1
 388:	31 f0       	breq	.+12     	; 0x396 <__vector_18+0x40>
 38a:	2a 33       	cpi	r18, 0x3A	; 58
 38c:	31 05       	cpc	r19, r1
 38e:	61 f4       	brne	.+24     	; 0x3a8 <__vector_18+0x52>
		case ':':
		indcom=0;
 390:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__data_end>
		break;
 394:	13 c0       	rjmp	.+38     	; 0x3bc <__vector_18+0x66>
		case '\r':
		comando[indcom]=0;
 396:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__data_end>
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	e8 5d       	subi	r30, 0xD8	; 216
 39e:	fe 4f       	sbci	r31, 0xFE	; 254
 3a0:	10 82       	st	Z, r1
		interprete();
 3a2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <interprete>
		break;
 3a6:	0a c0       	rjmp	.+20     	; 0x3bc <__vector_18+0x66>
		default:
		comando[indcom++]=dato;
 3a8:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__data_end>
 3ac:	91 e0       	ldi	r25, 0x01	; 1
 3ae:	9e 0f       	add	r25, r30
 3b0:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <__data_end>
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	e8 5d       	subi	r30, 0xD8	; 216
 3b8:	fe 4f       	sbci	r31, 0xFE	; 254
 3ba:	80 83       	st	Z, r24
		break;
	}
}
 3bc:	ff 91       	pop	r31
 3be:	ef 91       	pop	r30
 3c0:	bf 91       	pop	r27
 3c2:	af 91       	pop	r26
 3c4:	9f 91       	pop	r25
 3c6:	8f 91       	pop	r24
 3c8:	7f 91       	pop	r23
 3ca:	6f 91       	pop	r22
 3cc:	5f 91       	pop	r21
 3ce:	4f 91       	pop	r20
 3d0:	3f 91       	pop	r19
 3d2:	2f 91       	pop	r18
 3d4:	0f 90       	pop	r0
 3d6:	0f be       	out	0x3f, r0	; 63
 3d8:	0f 90       	pop	r0
 3da:	1f 90       	pop	r1
 3dc:	18 95       	reti

000003de <main>:
//----------------------------------------------------------------------------
//	RUTINA PRINCIPAL

int main(void){
	
	DDRB=(1<<DDB1);
 3de:	82 e0       	ldi	r24, 0x02	; 2
 3e0:	84 b9       	out	0x04, r24	; 4
	
	UART_init(brate0);
 3e2:	80 e8       	ldi	r24, 0x80	; 128
 3e4:	95 e2       	ldi	r25, 0x25	; 37
 3e6:	0e 94 40 01 	call	0x280	; 0x280 <UART_init>
	stdout = stdin = &uart_io;
 3ea:	e2 e3       	ldi	r30, 0x32	; 50
 3ec:	f1 e0       	ldi	r31, 0x01	; 1
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	91 e0       	ldi	r25, 0x01	; 1
 3f2:	91 83       	std	Z+1, r25	; 0x01
 3f4:	80 83       	st	Z, r24
 3f6:	93 83       	std	Z+3, r25	; 0x03
 3f8:	82 83       	std	Z+2, r24	; 0x02
	indcom=0;
 3fa:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__data_end>
	
	PRESCALER_conf(1,4);
 3fe:	64 e0       	ldi	r22, 0x04	; 4
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	0e 94 76 00 	call	0xec	; 0xec <PRESCALER_conf>
	TIMER_CTC_init(1,'A',2,1);
 40a:	21 e0       	ldi	r18, 0x01	; 1
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	42 e0       	ldi	r20, 0x02	; 2
 410:	50 e0       	ldi	r21, 0x00	; 0
 412:	61 e4       	ldi	r22, 0x41	; 65
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 97 00 	call	0x12e	; 0x12e <TIMER_CTC_init>
	TIMSK1&=~(1<<OCIE1A);
 41c:	ef e6       	ldi	r30, 0x6F	; 111
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	80 81       	ld	r24, Z
 422:	8d 7f       	andi	r24, 0xFD	; 253
 424:	80 83       	st	Z, r24
	
	SPI_init(0,0);				   // inicializa en modo 0, con prescaler x4 (SCK=16/4=4Mbps)
 426:	60 e0       	ldi	r22, 0x00	; 0
 428:	80 e0       	ldi	r24, 0x00	; 0
 42a:	0e 94 53 00 	call	0xa6	; 0xa6 <SPI_init>
	
	PORTB|=(1<<pinCS);
 42e:	2a 9a       	sbi	0x05, 2	; 5
	DDRB|=(1<<pinCS);  
 430:	22 9a       	sbi	0x04, 2	; 4
	
	sei();
 432:	78 94       	sei
 434:	85 e0       	ldi	r24, 0x05	; 5
 436:	8a 95       	dec	r24
 438:	f1 f7       	brne	.-4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 43a:	00 00       	nop
 43c:	fb cf       	rjmp	.-10     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>

0000043e <__udivmodsi4>:
 43e:	a1 e2       	ldi	r26, 0x21	; 33
 440:	1a 2e       	mov	r1, r26
 442:	aa 1b       	sub	r26, r26
 444:	bb 1b       	sub	r27, r27
 446:	fd 01       	movw	r30, r26
 448:	0d c0       	rjmp	.+26     	; 0x464 <__udivmodsi4_ep>

0000044a <__udivmodsi4_loop>:
 44a:	aa 1f       	adc	r26, r26
 44c:	bb 1f       	adc	r27, r27
 44e:	ee 1f       	adc	r30, r30
 450:	ff 1f       	adc	r31, r31
 452:	a2 17       	cp	r26, r18
 454:	b3 07       	cpc	r27, r19
 456:	e4 07       	cpc	r30, r20
 458:	f5 07       	cpc	r31, r21
 45a:	20 f0       	brcs	.+8      	; 0x464 <__udivmodsi4_ep>
 45c:	a2 1b       	sub	r26, r18
 45e:	b3 0b       	sbc	r27, r19
 460:	e4 0b       	sbc	r30, r20
 462:	f5 0b       	sbc	r31, r21

00000464 <__udivmodsi4_ep>:
 464:	66 1f       	adc	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	88 1f       	adc	r24, r24
 46a:	99 1f       	adc	r25, r25
 46c:	1a 94       	dec	r1
 46e:	69 f7       	brne	.-38     	; 0x44a <__udivmodsi4_loop>
 470:	60 95       	com	r22
 472:	70 95       	com	r23
 474:	80 95       	com	r24
 476:	90 95       	com	r25
 478:	9b 01       	movw	r18, r22
 47a:	ac 01       	movw	r20, r24
 47c:	bd 01       	movw	r22, r26
 47e:	cf 01       	movw	r24, r30
 480:	08 95       	ret

00000482 <__divmodsi4>:
 482:	05 2e       	mov	r0, r21
 484:	97 fb       	bst	r25, 7
 486:	1e f4       	brtc	.+6      	; 0x48e <__divmodsi4+0xc>
 488:	00 94       	com	r0
 48a:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__negsi2>
 48e:	57 fd       	sbrc	r21, 7
 490:	07 d0       	rcall	.+14     	; 0x4a0 <__divmodsi4_neg2>
 492:	0e 94 1f 02 	call	0x43e	; 0x43e <__udivmodsi4>
 496:	07 fc       	sbrc	r0, 7
 498:	03 d0       	rcall	.+6      	; 0x4a0 <__divmodsi4_neg2>
 49a:	4e f4       	brtc	.+18     	; 0x4ae <__divmodsi4_exit>
 49c:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__negsi2>

000004a0 <__divmodsi4_neg2>:
 4a0:	50 95       	com	r21
 4a2:	40 95       	com	r20
 4a4:	30 95       	com	r19
 4a6:	21 95       	neg	r18
 4a8:	3f 4f       	sbci	r19, 0xFF	; 255
 4aa:	4f 4f       	sbci	r20, 0xFF	; 255
 4ac:	5f 4f       	sbci	r21, 0xFF	; 255

000004ae <__divmodsi4_exit>:
 4ae:	08 95       	ret

000004b0 <__negsi2>:
 4b0:	90 95       	com	r25
 4b2:	80 95       	com	r24
 4b4:	70 95       	com	r23
 4b6:	61 95       	neg	r22
 4b8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ba:	8f 4f       	sbci	r24, 0xFF	; 255
 4bc:	9f 4f       	sbci	r25, 0xFF	; 255
 4be:	08 95       	ret

000004c0 <atoi>:
 4c0:	fc 01       	movw	r30, r24
 4c2:	88 27       	eor	r24, r24
 4c4:	99 27       	eor	r25, r25
 4c6:	e8 94       	clt
 4c8:	21 91       	ld	r18, Z+
 4ca:	20 32       	cpi	r18, 0x20	; 32
 4cc:	e9 f3       	breq	.-6      	; 0x4c8 <atoi+0x8>
 4ce:	29 30       	cpi	r18, 0x09	; 9
 4d0:	10 f0       	brcs	.+4      	; 0x4d6 <atoi+0x16>
 4d2:	2e 30       	cpi	r18, 0x0E	; 14
 4d4:	c8 f3       	brcs	.-14     	; 0x4c8 <atoi+0x8>
 4d6:	2b 32       	cpi	r18, 0x2B	; 43
 4d8:	41 f0       	breq	.+16     	; 0x4ea <atoi+0x2a>
 4da:	2d 32       	cpi	r18, 0x2D	; 45
 4dc:	39 f4       	brne	.+14     	; 0x4ec <atoi+0x2c>
 4de:	68 94       	set
 4e0:	04 c0       	rjmp	.+8      	; 0x4ea <atoi+0x2a>
 4e2:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__mulhi_const_10>
 4e6:	82 0f       	add	r24, r18
 4e8:	91 1d       	adc	r25, r1
 4ea:	21 91       	ld	r18, Z+
 4ec:	20 53       	subi	r18, 0x30	; 48
 4ee:	2a 30       	cpi	r18, 0x0A	; 10
 4f0:	c0 f3       	brcs	.-16     	; 0x4e2 <atoi+0x22>
 4f2:	1e f4       	brtc	.+6      	; 0x4fa <atoi+0x3a>
 4f4:	90 95       	com	r25
 4f6:	81 95       	neg	r24
 4f8:	9f 4f       	sbci	r25, 0xFF	; 255
 4fa:	08 95       	ret

000004fc <__mulhi_const_10>:
 4fc:	7a e0       	ldi	r23, 0x0A	; 10
 4fe:	97 9f       	mul	r25, r23
 500:	90 2d       	mov	r25, r0
 502:	87 9f       	mul	r24, r23
 504:	80 2d       	mov	r24, r0
 506:	91 0d       	add	r25, r1
 508:	11 24       	eor	r1, r1
 50a:	08 95       	ret

0000050c <printf>:
 50c:	a0 e0       	ldi	r26, 0x00	; 0
 50e:	b0 e0       	ldi	r27, 0x00	; 0
 510:	ec e8       	ldi	r30, 0x8C	; 140
 512:	f2 e0       	ldi	r31, 0x02	; 2
 514:	0c 94 6d 05 	jmp	0xada	; 0xada <__prologue_saves__+0x20>
 518:	ae 01       	movw	r20, r28
 51a:	4b 5f       	subi	r20, 0xFB	; 251
 51c:	5f 4f       	sbci	r21, 0xFF	; 255
 51e:	fa 01       	movw	r30, r20
 520:	61 91       	ld	r22, Z+
 522:	71 91       	ld	r23, Z+
 524:	af 01       	movw	r20, r30
 526:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__iob+0x2>
 52a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__iob+0x3>
 52e:	0e 94 cc 02 	call	0x598	; 0x598 <vfprintf>
 532:	e2 e0       	ldi	r30, 0x02	; 2
 534:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__epilogue_restores__+0x20>

00000538 <puts>:
 538:	0f 93       	push	r16
 53a:	1f 93       	push	r17
 53c:	cf 93       	push	r28
 53e:	df 93       	push	r29
 540:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <__iob+0x2>
 544:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <__iob+0x3>
 548:	23 81       	ldd	r18, Z+3	; 0x03
 54a:	21 ff       	sbrs	r18, 1
 54c:	1b c0       	rjmp	.+54     	; 0x584 <puts+0x4c>
 54e:	8c 01       	movw	r16, r24
 550:	d0 e0       	ldi	r29, 0x00	; 0
 552:	c0 e0       	ldi	r28, 0x00	; 0
 554:	f8 01       	movw	r30, r16
 556:	81 91       	ld	r24, Z+
 558:	8f 01       	movw	r16, r30
 55a:	60 91 34 01 	lds	r22, 0x0134	; 0x800134 <__iob+0x2>
 55e:	70 91 35 01 	lds	r23, 0x0135	; 0x800135 <__iob+0x3>
 562:	db 01       	movw	r26, r22
 564:	18 96       	adiw	r26, 0x08	; 8
 566:	ed 91       	ld	r30, X+
 568:	fc 91       	ld	r31, X
 56a:	19 97       	sbiw	r26, 0x09	; 9
 56c:	88 23       	and	r24, r24
 56e:	31 f0       	breq	.+12     	; 0x57c <puts+0x44>
 570:	09 95       	icall
 572:	89 2b       	or	r24, r25
 574:	79 f3       	breq	.-34     	; 0x554 <puts+0x1c>
 576:	df ef       	ldi	r29, 0xFF	; 255
 578:	cf ef       	ldi	r28, 0xFF	; 255
 57a:	ec cf       	rjmp	.-40     	; 0x554 <puts+0x1c>
 57c:	8a e0       	ldi	r24, 0x0A	; 10
 57e:	09 95       	icall
 580:	89 2b       	or	r24, r25
 582:	19 f0       	breq	.+6      	; 0x58a <puts+0x52>
 584:	8f ef       	ldi	r24, 0xFF	; 255
 586:	9f ef       	ldi	r25, 0xFF	; 255
 588:	02 c0       	rjmp	.+4      	; 0x58e <puts+0x56>
 58a:	8d 2f       	mov	r24, r29
 58c:	9c 2f       	mov	r25, r28
 58e:	df 91       	pop	r29
 590:	cf 91       	pop	r28
 592:	1f 91       	pop	r17
 594:	0f 91       	pop	r16
 596:	08 95       	ret

00000598 <vfprintf>:
 598:	ab e0       	ldi	r26, 0x0B	; 11
 59a:	b0 e0       	ldi	r27, 0x00	; 0
 59c:	e2 ed       	ldi	r30, 0xD2	; 210
 59e:	f2 e0       	ldi	r31, 0x02	; 2
 5a0:	0c 94 5d 05 	jmp	0xaba	; 0xaba <__prologue_saves__>
 5a4:	6c 01       	movw	r12, r24
 5a6:	7b 01       	movw	r14, r22
 5a8:	8a 01       	movw	r16, r20
 5aa:	fc 01       	movw	r30, r24
 5ac:	17 82       	std	Z+7, r1	; 0x07
 5ae:	16 82       	std	Z+6, r1	; 0x06
 5b0:	83 81       	ldd	r24, Z+3	; 0x03
 5b2:	81 ff       	sbrs	r24, 1
 5b4:	cc c1       	rjmp	.+920    	; 0x94e <__stack+0x4f>
 5b6:	ce 01       	movw	r24, r28
 5b8:	01 96       	adiw	r24, 0x01	; 1
 5ba:	3c 01       	movw	r6, r24
 5bc:	f6 01       	movw	r30, r12
 5be:	93 81       	ldd	r25, Z+3	; 0x03
 5c0:	f7 01       	movw	r30, r14
 5c2:	93 fd       	sbrc	r25, 3
 5c4:	85 91       	lpm	r24, Z+
 5c6:	93 ff       	sbrs	r25, 3
 5c8:	81 91       	ld	r24, Z+
 5ca:	7f 01       	movw	r14, r30
 5cc:	88 23       	and	r24, r24
 5ce:	09 f4       	brne	.+2      	; 0x5d2 <vfprintf+0x3a>
 5d0:	ba c1       	rjmp	.+884    	; 0x946 <__stack+0x47>
 5d2:	85 32       	cpi	r24, 0x25	; 37
 5d4:	39 f4       	brne	.+14     	; 0x5e4 <vfprintf+0x4c>
 5d6:	93 fd       	sbrc	r25, 3
 5d8:	85 91       	lpm	r24, Z+
 5da:	93 ff       	sbrs	r25, 3
 5dc:	81 91       	ld	r24, Z+
 5de:	7f 01       	movw	r14, r30
 5e0:	85 32       	cpi	r24, 0x25	; 37
 5e2:	29 f4       	brne	.+10     	; 0x5ee <vfprintf+0x56>
 5e4:	b6 01       	movw	r22, r12
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 5ec:	e7 cf       	rjmp	.-50     	; 0x5bc <vfprintf+0x24>
 5ee:	91 2c       	mov	r9, r1
 5f0:	21 2c       	mov	r2, r1
 5f2:	31 2c       	mov	r3, r1
 5f4:	ff e1       	ldi	r31, 0x1F	; 31
 5f6:	f3 15       	cp	r31, r3
 5f8:	d8 f0       	brcs	.+54     	; 0x630 <vfprintf+0x98>
 5fa:	8b 32       	cpi	r24, 0x2B	; 43
 5fc:	79 f0       	breq	.+30     	; 0x61c <vfprintf+0x84>
 5fe:	38 f4       	brcc	.+14     	; 0x60e <vfprintf+0x76>
 600:	80 32       	cpi	r24, 0x20	; 32
 602:	79 f0       	breq	.+30     	; 0x622 <vfprintf+0x8a>
 604:	83 32       	cpi	r24, 0x23	; 35
 606:	a1 f4       	brne	.+40     	; 0x630 <vfprintf+0x98>
 608:	23 2d       	mov	r18, r3
 60a:	20 61       	ori	r18, 0x10	; 16
 60c:	1d c0       	rjmp	.+58     	; 0x648 <vfprintf+0xb0>
 60e:	8d 32       	cpi	r24, 0x2D	; 45
 610:	61 f0       	breq	.+24     	; 0x62a <vfprintf+0x92>
 612:	80 33       	cpi	r24, 0x30	; 48
 614:	69 f4       	brne	.+26     	; 0x630 <vfprintf+0x98>
 616:	23 2d       	mov	r18, r3
 618:	21 60       	ori	r18, 0x01	; 1
 61a:	16 c0       	rjmp	.+44     	; 0x648 <vfprintf+0xb0>
 61c:	83 2d       	mov	r24, r3
 61e:	82 60       	ori	r24, 0x02	; 2
 620:	38 2e       	mov	r3, r24
 622:	e3 2d       	mov	r30, r3
 624:	e4 60       	ori	r30, 0x04	; 4
 626:	3e 2e       	mov	r3, r30
 628:	2a c0       	rjmp	.+84     	; 0x67e <vfprintf+0xe6>
 62a:	f3 2d       	mov	r31, r3
 62c:	f8 60       	ori	r31, 0x08	; 8
 62e:	1d c0       	rjmp	.+58     	; 0x66a <vfprintf+0xd2>
 630:	37 fc       	sbrc	r3, 7
 632:	2d c0       	rjmp	.+90     	; 0x68e <vfprintf+0xf6>
 634:	20 ed       	ldi	r18, 0xD0	; 208
 636:	28 0f       	add	r18, r24
 638:	2a 30       	cpi	r18, 0x0A	; 10
 63a:	40 f0       	brcs	.+16     	; 0x64c <vfprintf+0xb4>
 63c:	8e 32       	cpi	r24, 0x2E	; 46
 63e:	b9 f4       	brne	.+46     	; 0x66e <vfprintf+0xd6>
 640:	36 fc       	sbrc	r3, 6
 642:	81 c1       	rjmp	.+770    	; 0x946 <__stack+0x47>
 644:	23 2d       	mov	r18, r3
 646:	20 64       	ori	r18, 0x40	; 64
 648:	32 2e       	mov	r3, r18
 64a:	19 c0       	rjmp	.+50     	; 0x67e <vfprintf+0xe6>
 64c:	36 fe       	sbrs	r3, 6
 64e:	06 c0       	rjmp	.+12     	; 0x65c <vfprintf+0xc4>
 650:	8a e0       	ldi	r24, 0x0A	; 10
 652:	98 9e       	mul	r9, r24
 654:	20 0d       	add	r18, r0
 656:	11 24       	eor	r1, r1
 658:	92 2e       	mov	r9, r18
 65a:	11 c0       	rjmp	.+34     	; 0x67e <vfprintf+0xe6>
 65c:	ea e0       	ldi	r30, 0x0A	; 10
 65e:	2e 9e       	mul	r2, r30
 660:	20 0d       	add	r18, r0
 662:	11 24       	eor	r1, r1
 664:	22 2e       	mov	r2, r18
 666:	f3 2d       	mov	r31, r3
 668:	f0 62       	ori	r31, 0x20	; 32
 66a:	3f 2e       	mov	r3, r31
 66c:	08 c0       	rjmp	.+16     	; 0x67e <vfprintf+0xe6>
 66e:	8c 36       	cpi	r24, 0x6C	; 108
 670:	21 f4       	brne	.+8      	; 0x67a <vfprintf+0xe2>
 672:	83 2d       	mov	r24, r3
 674:	80 68       	ori	r24, 0x80	; 128
 676:	38 2e       	mov	r3, r24
 678:	02 c0       	rjmp	.+4      	; 0x67e <vfprintf+0xe6>
 67a:	88 36       	cpi	r24, 0x68	; 104
 67c:	41 f4       	brne	.+16     	; 0x68e <vfprintf+0xf6>
 67e:	f7 01       	movw	r30, r14
 680:	93 fd       	sbrc	r25, 3
 682:	85 91       	lpm	r24, Z+
 684:	93 ff       	sbrs	r25, 3
 686:	81 91       	ld	r24, Z+
 688:	7f 01       	movw	r14, r30
 68a:	81 11       	cpse	r24, r1
 68c:	b3 cf       	rjmp	.-154    	; 0x5f4 <vfprintf+0x5c>
 68e:	98 2f       	mov	r25, r24
 690:	9f 7d       	andi	r25, 0xDF	; 223
 692:	95 54       	subi	r25, 0x45	; 69
 694:	93 30       	cpi	r25, 0x03	; 3
 696:	28 f4       	brcc	.+10     	; 0x6a2 <vfprintf+0x10a>
 698:	0c 5f       	subi	r16, 0xFC	; 252
 69a:	1f 4f       	sbci	r17, 0xFF	; 255
 69c:	9f e3       	ldi	r25, 0x3F	; 63
 69e:	99 83       	std	Y+1, r25	; 0x01
 6a0:	0d c0       	rjmp	.+26     	; 0x6bc <vfprintf+0x124>
 6a2:	83 36       	cpi	r24, 0x63	; 99
 6a4:	31 f0       	breq	.+12     	; 0x6b2 <vfprintf+0x11a>
 6a6:	83 37       	cpi	r24, 0x73	; 115
 6a8:	71 f0       	breq	.+28     	; 0x6c6 <vfprintf+0x12e>
 6aa:	83 35       	cpi	r24, 0x53	; 83
 6ac:	09 f0       	breq	.+2      	; 0x6b0 <vfprintf+0x118>
 6ae:	59 c0       	rjmp	.+178    	; 0x762 <vfprintf+0x1ca>
 6b0:	21 c0       	rjmp	.+66     	; 0x6f4 <vfprintf+0x15c>
 6b2:	f8 01       	movw	r30, r16
 6b4:	80 81       	ld	r24, Z
 6b6:	89 83       	std	Y+1, r24	; 0x01
 6b8:	0e 5f       	subi	r16, 0xFE	; 254
 6ba:	1f 4f       	sbci	r17, 0xFF	; 255
 6bc:	88 24       	eor	r8, r8
 6be:	83 94       	inc	r8
 6c0:	91 2c       	mov	r9, r1
 6c2:	53 01       	movw	r10, r6
 6c4:	13 c0       	rjmp	.+38     	; 0x6ec <vfprintf+0x154>
 6c6:	28 01       	movw	r4, r16
 6c8:	f2 e0       	ldi	r31, 0x02	; 2
 6ca:	4f 0e       	add	r4, r31
 6cc:	51 1c       	adc	r5, r1
 6ce:	f8 01       	movw	r30, r16
 6d0:	a0 80       	ld	r10, Z
 6d2:	b1 80       	ldd	r11, Z+1	; 0x01
 6d4:	36 fe       	sbrs	r3, 6
 6d6:	03 c0       	rjmp	.+6      	; 0x6de <vfprintf+0x146>
 6d8:	69 2d       	mov	r22, r9
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <vfprintf+0x14a>
 6de:	6f ef       	ldi	r22, 0xFF	; 255
 6e0:	7f ef       	ldi	r23, 0xFF	; 255
 6e2:	c5 01       	movw	r24, r10
 6e4:	0e 94 b8 04 	call	0x970	; 0x970 <strnlen>
 6e8:	4c 01       	movw	r8, r24
 6ea:	82 01       	movw	r16, r4
 6ec:	f3 2d       	mov	r31, r3
 6ee:	ff 77       	andi	r31, 0x7F	; 127
 6f0:	3f 2e       	mov	r3, r31
 6f2:	16 c0       	rjmp	.+44     	; 0x720 <vfprintf+0x188>
 6f4:	28 01       	movw	r4, r16
 6f6:	22 e0       	ldi	r18, 0x02	; 2
 6f8:	42 0e       	add	r4, r18
 6fa:	51 1c       	adc	r5, r1
 6fc:	f8 01       	movw	r30, r16
 6fe:	a0 80       	ld	r10, Z
 700:	b1 80       	ldd	r11, Z+1	; 0x01
 702:	36 fe       	sbrs	r3, 6
 704:	03 c0       	rjmp	.+6      	; 0x70c <vfprintf+0x174>
 706:	69 2d       	mov	r22, r9
 708:	70 e0       	ldi	r23, 0x00	; 0
 70a:	02 c0       	rjmp	.+4      	; 0x710 <vfprintf+0x178>
 70c:	6f ef       	ldi	r22, 0xFF	; 255
 70e:	7f ef       	ldi	r23, 0xFF	; 255
 710:	c5 01       	movw	r24, r10
 712:	0e 94 ad 04 	call	0x95a	; 0x95a <strnlen_P>
 716:	4c 01       	movw	r8, r24
 718:	f3 2d       	mov	r31, r3
 71a:	f0 68       	ori	r31, 0x80	; 128
 71c:	3f 2e       	mov	r3, r31
 71e:	82 01       	movw	r16, r4
 720:	33 fc       	sbrc	r3, 3
 722:	1b c0       	rjmp	.+54     	; 0x75a <vfprintf+0x1c2>
 724:	82 2d       	mov	r24, r2
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	88 16       	cp	r8, r24
 72a:	99 06       	cpc	r9, r25
 72c:	b0 f4       	brcc	.+44     	; 0x75a <vfprintf+0x1c2>
 72e:	b6 01       	movw	r22, r12
 730:	80 e2       	ldi	r24, 0x20	; 32
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 738:	2a 94       	dec	r2
 73a:	f4 cf       	rjmp	.-24     	; 0x724 <vfprintf+0x18c>
 73c:	f5 01       	movw	r30, r10
 73e:	37 fc       	sbrc	r3, 7
 740:	85 91       	lpm	r24, Z+
 742:	37 fe       	sbrs	r3, 7
 744:	81 91       	ld	r24, Z+
 746:	5f 01       	movw	r10, r30
 748:	b6 01       	movw	r22, r12
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 750:	21 10       	cpse	r2, r1
 752:	2a 94       	dec	r2
 754:	21 e0       	ldi	r18, 0x01	; 1
 756:	82 1a       	sub	r8, r18
 758:	91 08       	sbc	r9, r1
 75a:	81 14       	cp	r8, r1
 75c:	91 04       	cpc	r9, r1
 75e:	71 f7       	brne	.-36     	; 0x73c <vfprintf+0x1a4>
 760:	e8 c0       	rjmp	.+464    	; 0x932 <__stack+0x33>
 762:	84 36       	cpi	r24, 0x64	; 100
 764:	11 f0       	breq	.+4      	; 0x76a <vfprintf+0x1d2>
 766:	89 36       	cpi	r24, 0x69	; 105
 768:	41 f5       	brne	.+80     	; 0x7ba <vfprintf+0x222>
 76a:	f8 01       	movw	r30, r16
 76c:	37 fe       	sbrs	r3, 7
 76e:	07 c0       	rjmp	.+14     	; 0x77e <vfprintf+0x1e6>
 770:	60 81       	ld	r22, Z
 772:	71 81       	ldd	r23, Z+1	; 0x01
 774:	82 81       	ldd	r24, Z+2	; 0x02
 776:	93 81       	ldd	r25, Z+3	; 0x03
 778:	0c 5f       	subi	r16, 0xFC	; 252
 77a:	1f 4f       	sbci	r17, 0xFF	; 255
 77c:	08 c0       	rjmp	.+16     	; 0x78e <vfprintf+0x1f6>
 77e:	60 81       	ld	r22, Z
 780:	71 81       	ldd	r23, Z+1	; 0x01
 782:	07 2e       	mov	r0, r23
 784:	00 0c       	add	r0, r0
 786:	88 0b       	sbc	r24, r24
 788:	99 0b       	sbc	r25, r25
 78a:	0e 5f       	subi	r16, 0xFE	; 254
 78c:	1f 4f       	sbci	r17, 0xFF	; 255
 78e:	f3 2d       	mov	r31, r3
 790:	ff 76       	andi	r31, 0x6F	; 111
 792:	3f 2e       	mov	r3, r31
 794:	97 ff       	sbrs	r25, 7
 796:	09 c0       	rjmp	.+18     	; 0x7aa <vfprintf+0x212>
 798:	90 95       	com	r25
 79a:	80 95       	com	r24
 79c:	70 95       	com	r23
 79e:	61 95       	neg	r22
 7a0:	7f 4f       	sbci	r23, 0xFF	; 255
 7a2:	8f 4f       	sbci	r24, 0xFF	; 255
 7a4:	9f 4f       	sbci	r25, 0xFF	; 255
 7a6:	f0 68       	ori	r31, 0x80	; 128
 7a8:	3f 2e       	mov	r3, r31
 7aa:	2a e0       	ldi	r18, 0x0A	; 10
 7ac:	30 e0       	ldi	r19, 0x00	; 0
 7ae:	a3 01       	movw	r20, r6
 7b0:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__ultoa_invert>
 7b4:	88 2e       	mov	r8, r24
 7b6:	86 18       	sub	r8, r6
 7b8:	45 c0       	rjmp	.+138    	; 0x844 <vfprintf+0x2ac>
 7ba:	85 37       	cpi	r24, 0x75	; 117
 7bc:	31 f4       	brne	.+12     	; 0x7ca <vfprintf+0x232>
 7be:	23 2d       	mov	r18, r3
 7c0:	2f 7e       	andi	r18, 0xEF	; 239
 7c2:	b2 2e       	mov	r11, r18
 7c4:	2a e0       	ldi	r18, 0x0A	; 10
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	25 c0       	rjmp	.+74     	; 0x814 <vfprintf+0x27c>
 7ca:	93 2d       	mov	r25, r3
 7cc:	99 7f       	andi	r25, 0xF9	; 249
 7ce:	b9 2e       	mov	r11, r25
 7d0:	8f 36       	cpi	r24, 0x6F	; 111
 7d2:	c1 f0       	breq	.+48     	; 0x804 <vfprintf+0x26c>
 7d4:	18 f4       	brcc	.+6      	; 0x7dc <vfprintf+0x244>
 7d6:	88 35       	cpi	r24, 0x58	; 88
 7d8:	79 f0       	breq	.+30     	; 0x7f8 <vfprintf+0x260>
 7da:	b5 c0       	rjmp	.+362    	; 0x946 <__stack+0x47>
 7dc:	80 37       	cpi	r24, 0x70	; 112
 7de:	19 f0       	breq	.+6      	; 0x7e6 <vfprintf+0x24e>
 7e0:	88 37       	cpi	r24, 0x78	; 120
 7e2:	21 f0       	breq	.+8      	; 0x7ec <vfprintf+0x254>
 7e4:	b0 c0       	rjmp	.+352    	; 0x946 <__stack+0x47>
 7e6:	e9 2f       	mov	r30, r25
 7e8:	e0 61       	ori	r30, 0x10	; 16
 7ea:	be 2e       	mov	r11, r30
 7ec:	b4 fe       	sbrs	r11, 4
 7ee:	0d c0       	rjmp	.+26     	; 0x80a <vfprintf+0x272>
 7f0:	fb 2d       	mov	r31, r11
 7f2:	f4 60       	ori	r31, 0x04	; 4
 7f4:	bf 2e       	mov	r11, r31
 7f6:	09 c0       	rjmp	.+18     	; 0x80a <vfprintf+0x272>
 7f8:	34 fe       	sbrs	r3, 4
 7fa:	0a c0       	rjmp	.+20     	; 0x810 <vfprintf+0x278>
 7fc:	29 2f       	mov	r18, r25
 7fe:	26 60       	ori	r18, 0x06	; 6
 800:	b2 2e       	mov	r11, r18
 802:	06 c0       	rjmp	.+12     	; 0x810 <vfprintf+0x278>
 804:	28 e0       	ldi	r18, 0x08	; 8
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	05 c0       	rjmp	.+10     	; 0x814 <vfprintf+0x27c>
 80a:	20 e1       	ldi	r18, 0x10	; 16
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	02 c0       	rjmp	.+4      	; 0x814 <vfprintf+0x27c>
 810:	20 e1       	ldi	r18, 0x10	; 16
 812:	32 e0       	ldi	r19, 0x02	; 2
 814:	f8 01       	movw	r30, r16
 816:	b7 fe       	sbrs	r11, 7
 818:	07 c0       	rjmp	.+14     	; 0x828 <vfprintf+0x290>
 81a:	60 81       	ld	r22, Z
 81c:	71 81       	ldd	r23, Z+1	; 0x01
 81e:	82 81       	ldd	r24, Z+2	; 0x02
 820:	93 81       	ldd	r25, Z+3	; 0x03
 822:	0c 5f       	subi	r16, 0xFC	; 252
 824:	1f 4f       	sbci	r17, 0xFF	; 255
 826:	06 c0       	rjmp	.+12     	; 0x834 <vfprintf+0x29c>
 828:	60 81       	ld	r22, Z
 82a:	71 81       	ldd	r23, Z+1	; 0x01
 82c:	80 e0       	ldi	r24, 0x00	; 0
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	0e 5f       	subi	r16, 0xFE	; 254
 832:	1f 4f       	sbci	r17, 0xFF	; 255
 834:	a3 01       	movw	r20, r6
 836:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__ultoa_invert>
 83a:	88 2e       	mov	r8, r24
 83c:	86 18       	sub	r8, r6
 83e:	fb 2d       	mov	r31, r11
 840:	ff 77       	andi	r31, 0x7F	; 127
 842:	3f 2e       	mov	r3, r31
 844:	36 fe       	sbrs	r3, 6
 846:	0d c0       	rjmp	.+26     	; 0x862 <vfprintf+0x2ca>
 848:	23 2d       	mov	r18, r3
 84a:	2e 7f       	andi	r18, 0xFE	; 254
 84c:	a2 2e       	mov	r10, r18
 84e:	89 14       	cp	r8, r9
 850:	58 f4       	brcc	.+22     	; 0x868 <vfprintf+0x2d0>
 852:	34 fe       	sbrs	r3, 4
 854:	0b c0       	rjmp	.+22     	; 0x86c <vfprintf+0x2d4>
 856:	32 fc       	sbrc	r3, 2
 858:	09 c0       	rjmp	.+18     	; 0x86c <vfprintf+0x2d4>
 85a:	83 2d       	mov	r24, r3
 85c:	8e 7e       	andi	r24, 0xEE	; 238
 85e:	a8 2e       	mov	r10, r24
 860:	05 c0       	rjmp	.+10     	; 0x86c <vfprintf+0x2d4>
 862:	b8 2c       	mov	r11, r8
 864:	a3 2c       	mov	r10, r3
 866:	03 c0       	rjmp	.+6      	; 0x86e <vfprintf+0x2d6>
 868:	b8 2c       	mov	r11, r8
 86a:	01 c0       	rjmp	.+2      	; 0x86e <vfprintf+0x2d6>
 86c:	b9 2c       	mov	r11, r9
 86e:	a4 fe       	sbrs	r10, 4
 870:	0f c0       	rjmp	.+30     	; 0x890 <vfprintf+0x2f8>
 872:	fe 01       	movw	r30, r28
 874:	e8 0d       	add	r30, r8
 876:	f1 1d       	adc	r31, r1
 878:	80 81       	ld	r24, Z
 87a:	80 33       	cpi	r24, 0x30	; 48
 87c:	21 f4       	brne	.+8      	; 0x886 <vfprintf+0x2ee>
 87e:	9a 2d       	mov	r25, r10
 880:	99 7e       	andi	r25, 0xE9	; 233
 882:	a9 2e       	mov	r10, r25
 884:	09 c0       	rjmp	.+18     	; 0x898 <vfprintf+0x300>
 886:	a2 fe       	sbrs	r10, 2
 888:	06 c0       	rjmp	.+12     	; 0x896 <vfprintf+0x2fe>
 88a:	b3 94       	inc	r11
 88c:	b3 94       	inc	r11
 88e:	04 c0       	rjmp	.+8      	; 0x898 <vfprintf+0x300>
 890:	8a 2d       	mov	r24, r10
 892:	86 78       	andi	r24, 0x86	; 134
 894:	09 f0       	breq	.+2      	; 0x898 <vfprintf+0x300>
 896:	b3 94       	inc	r11
 898:	a3 fc       	sbrc	r10, 3
 89a:	11 c0       	rjmp	.+34     	; 0x8be <vfprintf+0x326>
 89c:	a0 fe       	sbrs	r10, 0
 89e:	06 c0       	rjmp	.+12     	; 0x8ac <vfprintf+0x314>
 8a0:	b2 14       	cp	r11, r2
 8a2:	88 f4       	brcc	.+34     	; 0x8c6 <vfprintf+0x32e>
 8a4:	28 0c       	add	r2, r8
 8a6:	92 2c       	mov	r9, r2
 8a8:	9b 18       	sub	r9, r11
 8aa:	0e c0       	rjmp	.+28     	; 0x8c8 <vfprintf+0x330>
 8ac:	b2 14       	cp	r11, r2
 8ae:	60 f4       	brcc	.+24     	; 0x8c8 <vfprintf+0x330>
 8b0:	b6 01       	movw	r22, r12
 8b2:	80 e2       	ldi	r24, 0x20	; 32
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 8ba:	b3 94       	inc	r11
 8bc:	f7 cf       	rjmp	.-18     	; 0x8ac <vfprintf+0x314>
 8be:	b2 14       	cp	r11, r2
 8c0:	18 f4       	brcc	.+6      	; 0x8c8 <vfprintf+0x330>
 8c2:	2b 18       	sub	r2, r11
 8c4:	02 c0       	rjmp	.+4      	; 0x8ca <vfprintf+0x332>
 8c6:	98 2c       	mov	r9, r8
 8c8:	21 2c       	mov	r2, r1
 8ca:	a4 fe       	sbrs	r10, 4
 8cc:	10 c0       	rjmp	.+32     	; 0x8ee <vfprintf+0x356>
 8ce:	b6 01       	movw	r22, r12
 8d0:	80 e3       	ldi	r24, 0x30	; 48
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 8d8:	a2 fe       	sbrs	r10, 2
 8da:	17 c0       	rjmp	.+46     	; 0x90a <__stack+0xb>
 8dc:	a1 fc       	sbrc	r10, 1
 8de:	03 c0       	rjmp	.+6      	; 0x8e6 <vfprintf+0x34e>
 8e0:	88 e7       	ldi	r24, 0x78	; 120
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	02 c0       	rjmp	.+4      	; 0x8ea <vfprintf+0x352>
 8e6:	88 e5       	ldi	r24, 0x58	; 88
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	b6 01       	movw	r22, r12
 8ec:	0c c0       	rjmp	.+24     	; 0x906 <__stack+0x7>
 8ee:	8a 2d       	mov	r24, r10
 8f0:	86 78       	andi	r24, 0x86	; 134
 8f2:	59 f0       	breq	.+22     	; 0x90a <__stack+0xb>
 8f4:	a1 fe       	sbrs	r10, 1
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <vfprintf+0x364>
 8f8:	8b e2       	ldi	r24, 0x2B	; 43
 8fa:	01 c0       	rjmp	.+2      	; 0x8fe <vfprintf+0x366>
 8fc:	80 e2       	ldi	r24, 0x20	; 32
 8fe:	a7 fc       	sbrc	r10, 7
 900:	8d e2       	ldi	r24, 0x2D	; 45
 902:	b6 01       	movw	r22, r12
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 90a:	89 14       	cp	r8, r9
 90c:	38 f4       	brcc	.+14     	; 0x91c <__stack+0x1d>
 90e:	b6 01       	movw	r22, r12
 910:	80 e3       	ldi	r24, 0x30	; 48
 912:	90 e0       	ldi	r25, 0x00	; 0
 914:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 918:	9a 94       	dec	r9
 91a:	f7 cf       	rjmp	.-18     	; 0x90a <__stack+0xb>
 91c:	8a 94       	dec	r8
 91e:	f3 01       	movw	r30, r6
 920:	e8 0d       	add	r30, r8
 922:	f1 1d       	adc	r31, r1
 924:	80 81       	ld	r24, Z
 926:	b6 01       	movw	r22, r12
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 92e:	81 10       	cpse	r8, r1
 930:	f5 cf       	rjmp	.-22     	; 0x91c <__stack+0x1d>
 932:	22 20       	and	r2, r2
 934:	09 f4       	brne	.+2      	; 0x938 <__stack+0x39>
 936:	42 ce       	rjmp	.-892    	; 0x5bc <vfprintf+0x24>
 938:	b6 01       	movw	r22, r12
 93a:	80 e2       	ldi	r24, 0x20	; 32
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 942:	2a 94       	dec	r2
 944:	f6 cf       	rjmp	.-20     	; 0x932 <__stack+0x33>
 946:	f6 01       	movw	r30, r12
 948:	86 81       	ldd	r24, Z+6	; 0x06
 94a:	97 81       	ldd	r25, Z+7	; 0x07
 94c:	02 c0       	rjmp	.+4      	; 0x952 <__stack+0x53>
 94e:	8f ef       	ldi	r24, 0xFF	; 255
 950:	9f ef       	ldi	r25, 0xFF	; 255
 952:	2b 96       	adiw	r28, 0x0b	; 11
 954:	e2 e1       	ldi	r30, 0x12	; 18
 956:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__epilogue_restores__>

0000095a <strnlen_P>:
 95a:	fc 01       	movw	r30, r24
 95c:	05 90       	lpm	r0, Z+
 95e:	61 50       	subi	r22, 0x01	; 1
 960:	70 40       	sbci	r23, 0x00	; 0
 962:	01 10       	cpse	r0, r1
 964:	d8 f7       	brcc	.-10     	; 0x95c <strnlen_P+0x2>
 966:	80 95       	com	r24
 968:	90 95       	com	r25
 96a:	8e 0f       	add	r24, r30
 96c:	9f 1f       	adc	r25, r31
 96e:	08 95       	ret

00000970 <strnlen>:
 970:	fc 01       	movw	r30, r24
 972:	61 50       	subi	r22, 0x01	; 1
 974:	70 40       	sbci	r23, 0x00	; 0
 976:	01 90       	ld	r0, Z+
 978:	01 10       	cpse	r0, r1
 97a:	d8 f7       	brcc	.-10     	; 0x972 <strnlen+0x2>
 97c:	80 95       	com	r24
 97e:	90 95       	com	r25
 980:	8e 0f       	add	r24, r30
 982:	9f 1f       	adc	r25, r31
 984:	08 95       	ret

00000986 <fputc>:
 986:	0f 93       	push	r16
 988:	1f 93       	push	r17
 98a:	cf 93       	push	r28
 98c:	df 93       	push	r29
 98e:	fb 01       	movw	r30, r22
 990:	23 81       	ldd	r18, Z+3	; 0x03
 992:	21 fd       	sbrc	r18, 1
 994:	03 c0       	rjmp	.+6      	; 0x99c <fputc+0x16>
 996:	8f ef       	ldi	r24, 0xFF	; 255
 998:	9f ef       	ldi	r25, 0xFF	; 255
 99a:	2c c0       	rjmp	.+88     	; 0x9f4 <fputc+0x6e>
 99c:	22 ff       	sbrs	r18, 2
 99e:	16 c0       	rjmp	.+44     	; 0x9cc <fputc+0x46>
 9a0:	46 81       	ldd	r20, Z+6	; 0x06
 9a2:	57 81       	ldd	r21, Z+7	; 0x07
 9a4:	24 81       	ldd	r18, Z+4	; 0x04
 9a6:	35 81       	ldd	r19, Z+5	; 0x05
 9a8:	42 17       	cp	r20, r18
 9aa:	53 07       	cpc	r21, r19
 9ac:	44 f4       	brge	.+16     	; 0x9be <fputc+0x38>
 9ae:	a0 81       	ld	r26, Z
 9b0:	b1 81       	ldd	r27, Z+1	; 0x01
 9b2:	9d 01       	movw	r18, r26
 9b4:	2f 5f       	subi	r18, 0xFF	; 255
 9b6:	3f 4f       	sbci	r19, 0xFF	; 255
 9b8:	31 83       	std	Z+1, r19	; 0x01
 9ba:	20 83       	st	Z, r18
 9bc:	8c 93       	st	X, r24
 9be:	26 81       	ldd	r18, Z+6	; 0x06
 9c0:	37 81       	ldd	r19, Z+7	; 0x07
 9c2:	2f 5f       	subi	r18, 0xFF	; 255
 9c4:	3f 4f       	sbci	r19, 0xFF	; 255
 9c6:	37 83       	std	Z+7, r19	; 0x07
 9c8:	26 83       	std	Z+6, r18	; 0x06
 9ca:	14 c0       	rjmp	.+40     	; 0x9f4 <fputc+0x6e>
 9cc:	8b 01       	movw	r16, r22
 9ce:	ec 01       	movw	r28, r24
 9d0:	fb 01       	movw	r30, r22
 9d2:	00 84       	ldd	r0, Z+8	; 0x08
 9d4:	f1 85       	ldd	r31, Z+9	; 0x09
 9d6:	e0 2d       	mov	r30, r0
 9d8:	09 95       	icall
 9da:	89 2b       	or	r24, r25
 9dc:	e1 f6       	brne	.-72     	; 0x996 <fputc+0x10>
 9de:	d8 01       	movw	r26, r16
 9e0:	16 96       	adiw	r26, 0x06	; 6
 9e2:	8d 91       	ld	r24, X+
 9e4:	9c 91       	ld	r25, X
 9e6:	17 97       	sbiw	r26, 0x07	; 7
 9e8:	01 96       	adiw	r24, 0x01	; 1
 9ea:	17 96       	adiw	r26, 0x07	; 7
 9ec:	9c 93       	st	X, r25
 9ee:	8e 93       	st	-X, r24
 9f0:	16 97       	sbiw	r26, 0x06	; 6
 9f2:	ce 01       	movw	r24, r28
 9f4:	df 91       	pop	r29
 9f6:	cf 91       	pop	r28
 9f8:	1f 91       	pop	r17
 9fa:	0f 91       	pop	r16
 9fc:	08 95       	ret

000009fe <__ultoa_invert>:
 9fe:	fa 01       	movw	r30, r20
 a00:	aa 27       	eor	r26, r26
 a02:	28 30       	cpi	r18, 0x08	; 8
 a04:	51 f1       	breq	.+84     	; 0xa5a <__ultoa_invert+0x5c>
 a06:	20 31       	cpi	r18, 0x10	; 16
 a08:	81 f1       	breq	.+96     	; 0xa6a <__ultoa_invert+0x6c>
 a0a:	e8 94       	clt
 a0c:	6f 93       	push	r22
 a0e:	6e 7f       	andi	r22, 0xFE	; 254
 a10:	6e 5f       	subi	r22, 0xFE	; 254
 a12:	7f 4f       	sbci	r23, 0xFF	; 255
 a14:	8f 4f       	sbci	r24, 0xFF	; 255
 a16:	9f 4f       	sbci	r25, 0xFF	; 255
 a18:	af 4f       	sbci	r26, 0xFF	; 255
 a1a:	b1 e0       	ldi	r27, 0x01	; 1
 a1c:	3e d0       	rcall	.+124    	; 0xa9a <__ultoa_invert+0x9c>
 a1e:	b4 e0       	ldi	r27, 0x04	; 4
 a20:	3c d0       	rcall	.+120    	; 0xa9a <__ultoa_invert+0x9c>
 a22:	67 0f       	add	r22, r23
 a24:	78 1f       	adc	r23, r24
 a26:	89 1f       	adc	r24, r25
 a28:	9a 1f       	adc	r25, r26
 a2a:	a1 1d       	adc	r26, r1
 a2c:	68 0f       	add	r22, r24
 a2e:	79 1f       	adc	r23, r25
 a30:	8a 1f       	adc	r24, r26
 a32:	91 1d       	adc	r25, r1
 a34:	a1 1d       	adc	r26, r1
 a36:	6a 0f       	add	r22, r26
 a38:	71 1d       	adc	r23, r1
 a3a:	81 1d       	adc	r24, r1
 a3c:	91 1d       	adc	r25, r1
 a3e:	a1 1d       	adc	r26, r1
 a40:	20 d0       	rcall	.+64     	; 0xa82 <__ultoa_invert+0x84>
 a42:	09 f4       	brne	.+2      	; 0xa46 <__ultoa_invert+0x48>
 a44:	68 94       	set
 a46:	3f 91       	pop	r19
 a48:	2a e0       	ldi	r18, 0x0A	; 10
 a4a:	26 9f       	mul	r18, r22
 a4c:	11 24       	eor	r1, r1
 a4e:	30 19       	sub	r19, r0
 a50:	30 5d       	subi	r19, 0xD0	; 208
 a52:	31 93       	st	Z+, r19
 a54:	de f6       	brtc	.-74     	; 0xa0c <__ultoa_invert+0xe>
 a56:	cf 01       	movw	r24, r30
 a58:	08 95       	ret
 a5a:	46 2f       	mov	r20, r22
 a5c:	47 70       	andi	r20, 0x07	; 7
 a5e:	40 5d       	subi	r20, 0xD0	; 208
 a60:	41 93       	st	Z+, r20
 a62:	b3 e0       	ldi	r27, 0x03	; 3
 a64:	0f d0       	rcall	.+30     	; 0xa84 <__ultoa_invert+0x86>
 a66:	c9 f7       	brne	.-14     	; 0xa5a <__ultoa_invert+0x5c>
 a68:	f6 cf       	rjmp	.-20     	; 0xa56 <__ultoa_invert+0x58>
 a6a:	46 2f       	mov	r20, r22
 a6c:	4f 70       	andi	r20, 0x0F	; 15
 a6e:	40 5d       	subi	r20, 0xD0	; 208
 a70:	4a 33       	cpi	r20, 0x3A	; 58
 a72:	18 f0       	brcs	.+6      	; 0xa7a <__ultoa_invert+0x7c>
 a74:	49 5d       	subi	r20, 0xD9	; 217
 a76:	31 fd       	sbrc	r19, 1
 a78:	40 52       	subi	r20, 0x20	; 32
 a7a:	41 93       	st	Z+, r20
 a7c:	02 d0       	rcall	.+4      	; 0xa82 <__ultoa_invert+0x84>
 a7e:	a9 f7       	brne	.-22     	; 0xa6a <__ultoa_invert+0x6c>
 a80:	ea cf       	rjmp	.-44     	; 0xa56 <__ultoa_invert+0x58>
 a82:	b4 e0       	ldi	r27, 0x04	; 4
 a84:	a6 95       	lsr	r26
 a86:	97 95       	ror	r25
 a88:	87 95       	ror	r24
 a8a:	77 95       	ror	r23
 a8c:	67 95       	ror	r22
 a8e:	ba 95       	dec	r27
 a90:	c9 f7       	brne	.-14     	; 0xa84 <__ultoa_invert+0x86>
 a92:	00 97       	sbiw	r24, 0x00	; 0
 a94:	61 05       	cpc	r22, r1
 a96:	71 05       	cpc	r23, r1
 a98:	08 95       	ret
 a9a:	9b 01       	movw	r18, r22
 a9c:	ac 01       	movw	r20, r24
 a9e:	0a 2e       	mov	r0, r26
 aa0:	06 94       	lsr	r0
 aa2:	57 95       	ror	r21
 aa4:	47 95       	ror	r20
 aa6:	37 95       	ror	r19
 aa8:	27 95       	ror	r18
 aaa:	ba 95       	dec	r27
 aac:	c9 f7       	brne	.-14     	; 0xaa0 <__ultoa_invert+0xa2>
 aae:	62 0f       	add	r22, r18
 ab0:	73 1f       	adc	r23, r19
 ab2:	84 1f       	adc	r24, r20
 ab4:	95 1f       	adc	r25, r21
 ab6:	a0 1d       	adc	r26, r0
 ab8:	08 95       	ret

00000aba <__prologue_saves__>:
 aba:	2f 92       	push	r2
 abc:	3f 92       	push	r3
 abe:	4f 92       	push	r4
 ac0:	5f 92       	push	r5
 ac2:	6f 92       	push	r6
 ac4:	7f 92       	push	r7
 ac6:	8f 92       	push	r8
 ac8:	9f 92       	push	r9
 aca:	af 92       	push	r10
 acc:	bf 92       	push	r11
 ace:	cf 92       	push	r12
 ad0:	df 92       	push	r13
 ad2:	ef 92       	push	r14
 ad4:	ff 92       	push	r15
 ad6:	0f 93       	push	r16
 ad8:	1f 93       	push	r17
 ada:	cf 93       	push	r28
 adc:	df 93       	push	r29
 ade:	cd b7       	in	r28, 0x3d	; 61
 ae0:	de b7       	in	r29, 0x3e	; 62
 ae2:	ca 1b       	sub	r28, r26
 ae4:	db 0b       	sbc	r29, r27
 ae6:	0f b6       	in	r0, 0x3f	; 63
 ae8:	f8 94       	cli
 aea:	de bf       	out	0x3e, r29	; 62
 aec:	0f be       	out	0x3f, r0	; 63
 aee:	cd bf       	out	0x3d, r28	; 61
 af0:	09 94       	ijmp

00000af2 <__epilogue_restores__>:
 af2:	2a 88       	ldd	r2, Y+18	; 0x12
 af4:	39 88       	ldd	r3, Y+17	; 0x11
 af6:	48 88       	ldd	r4, Y+16	; 0x10
 af8:	5f 84       	ldd	r5, Y+15	; 0x0f
 afa:	6e 84       	ldd	r6, Y+14	; 0x0e
 afc:	7d 84       	ldd	r7, Y+13	; 0x0d
 afe:	8c 84       	ldd	r8, Y+12	; 0x0c
 b00:	9b 84       	ldd	r9, Y+11	; 0x0b
 b02:	aa 84       	ldd	r10, Y+10	; 0x0a
 b04:	b9 84       	ldd	r11, Y+9	; 0x09
 b06:	c8 84       	ldd	r12, Y+8	; 0x08
 b08:	df 80       	ldd	r13, Y+7	; 0x07
 b0a:	ee 80       	ldd	r14, Y+6	; 0x06
 b0c:	fd 80       	ldd	r15, Y+5	; 0x05
 b0e:	0c 81       	ldd	r16, Y+4	; 0x04
 b10:	1b 81       	ldd	r17, Y+3	; 0x03
 b12:	aa 81       	ldd	r26, Y+2	; 0x02
 b14:	b9 81       	ldd	r27, Y+1	; 0x01
 b16:	ce 0f       	add	r28, r30
 b18:	d1 1d       	adc	r29, r1
 b1a:	0f b6       	in	r0, 0x3f	; 63
 b1c:	f8 94       	cli
 b1e:	de bf       	out	0x3e, r29	; 62
 b20:	0f be       	out	0x3f, r0	; 63
 b22:	cd bf       	out	0x3d, r28	; 61
 b24:	ed 01       	movw	r28, r26
 b26:	08 95       	ret

00000b28 <_exit>:
 b28:	f8 94       	cli

00000b2a <__stop_program>:
 b2a:	ff cf       	rjmp	.-2      	; 0xb2a <__stop_program>
